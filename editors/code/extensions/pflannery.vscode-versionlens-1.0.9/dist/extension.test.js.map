{"version":3,"sources":["../webpack/bootstrap",".././src/core.clients/index.test.ts",".././src/core.clients/index.ts",".././src/core.clients/src/caching/expiryCacheMap.ts",".././src/core.clients/src/definitions/clientResponses.ts",".././src/core.clients/src/definitions/eCachingContributions.ts",".././src/core.clients/src/definitions/eHttpClientRequestMethods.ts",".././src/core.clients/src/definitions/eHttpContributions.ts",".././src/core.clients/src/helpers/urlHelpers.ts",".././src/core.clients/src/options/cachingOptions.ts",".././src/core.clients/src/options/httpOptions.ts",".././src/core.clients/src/requests/abstractCachedRequest.ts",".././src/core.clients/src/requests/jsonHttpClient.ts",".././src/core.clients/test/caching/expiryCacheMap.tests.ts",".././src/core.clients/test/helpers/urlHelpers.tests.ts",".././src/core.clients/test/requests/abstractClientRequest.tests.ts",".././src/core.configuration/index.test.ts",".././src/core.configuration/index.ts",".././src/core.configuration/src/options.ts",".././src/core.configuration/src/optionsWithFallback.ts",".././src/core.configuration/test/optionsWithFallback.tests.ts",".././src/core.logging/index.test.ts",".././src/core.logging/test/stubs/loggerStub.ts",".././src/core.packages/index.test.ts",".././src/core.packages/index.ts",".././src/core.packages/src/definitions/ePackageResponseErrors.ts",".././src/core.packages/src/definitions/ePackageSourceTypes.ts",".././src/core.packages/src/definitions/ePackageVersionTypes.ts",".././src/core.packages/src/definitions/iPackageDependency.ts",".././src/core.packages/src/factories/packageDocumentFactory.ts",".././src/core.packages/src/factories/packageRequestFactory.ts",".././src/core.packages/src/factories/packageResponseFactory.ts",".././src/core.packages/src/helpers/versionHelpers.ts",".././src/core.packages/src/models/packageResponse.ts",".././src/core.packages/src/parsers/jsonPackageParser.ts",".././src/core.packages/src/parsers/yamlPackageParser.ts",".././src/core.packages/test/helpers/versionHelpers/extractTaggedVersions.tests.ts",".././src/core.packages/test/helpers/versionHelpers/filterPrereleasesGtMinRange.tests.ts",".././src/core.packages/test/helpers/versionHelpers/filterSemverVersions.tests.ts",".././src/core.packages/test/helpers/versionHelpers/friendlifyPrereleaseName.tests.ts",".././src/core.packages/test/helpers/versionHelpers/isFixedVersion.tests.ts",".././src/core.packages/test/helpers/versionHelpers/lteFromArray.tests.ts",".././src/core.packages/test/helpers/versionHelpers/removeFourSegmentVersionsFromArray.tests.ts",".././src/core.packages/test/helpers/versionHelpers/splitReleasesFromArray.tests.ts",".././src/core.packages/test/parsers/jsonPackageParser/extractPackageDependenciesFromJson.fixtures.ts",".././src/core.packages/test/parsers/jsonPackageParser/extractPackageDependenciesFromJson.tests.ts",".././src/core.packages/test/parsers/yamlPackageParser/extractPackageDependenciesFromYaml.fixtures.ts",".././src/core.packages/test/parsers/yamlPackageParser/extractPackageDependenciesFromYaml.tests.ts",".././src/core.providers/index.ts",".././src/core.providers/src/definitions/eProviderSupport.ts",".././src/core.suggestions/index.test.ts",".././src/core.suggestions/index.ts",".././src/core.suggestions/src/definitions/eSuggestionFlags.ts",".././src/core.suggestions/src/definitions/eSuggestionStatus.ts",".././src/core.suggestions/src/suggestionFactory.ts",".././src/core.suggestions/src/suggestionUtils.ts",".././src/core.suggestions/test/suggestionFactory/createFromHttpStatus.tests.ts",".././src/core.suggestions/test/suggestionFactory/createLatest.tests.ts",".././src/core.suggestions/test/suggestionFactory/createSuggestions.tests.ts",".././src/infrastructure.clients/index.test.ts",".././src/infrastructure.clients/index.ts",".././src/infrastructure.clients/src/httpClient.ts",".././src/infrastructure.clients/src/httpClientFactory.ts",".././src/infrastructure.clients/src/processClient.ts",".././src/infrastructure.clients/src/processClientFactory.ts",".././src/infrastructure.clients/test/httpClientRequest.tests.ts",".././src/infrastructure.clients/test/jsonClientRequest.tests.ts",".././src/infrastructure.clients/test/processClientRequest.tests.ts",".././src/infrastructure.clients/test/stubs/processSpawnStub.ts",".././src/infrastructure.clients/test/stubs/requestLightStub.ts",".././src/infrastructure.configuration/index.test.ts",".././src/infrastructure.configuration/index.ts",".././src/infrastructure.configuration/src/vscodeConfig.ts",".././src/infrastructure.configuration/test/stubs/vsCodeWorkspaceStub.ts",".././src/infrastructure.configuration/test/vscodeConfig.tests.ts",".././src/infrastructure.providers/dotnet/index.test.ts",".././src/infrastructure.providers/dotnet/index.ts",".././src/infrastructure.providers/dotnet/src/clients/dotnetCli.ts",".././src/infrastructure.providers/dotnet/src/clients/nugetPackageClient.ts",".././src/infrastructure.providers/dotnet/src/clients/nugetResourceClient.ts",".././src/infrastructure.providers/dotnet/src/definitions/eDotNetContributions.ts",".././src/infrastructure.providers/dotnet/src/definitions/eNugetContributions.ts",".././src/infrastructure.providers/dotnet/src/dotnetConfig.ts",".././src/infrastructure.providers/dotnet/src/dotnetContainer.ts",".././src/infrastructure.providers/dotnet/src/dotnetSuggestionProvider.ts",".././src/infrastructure.providers/dotnet/src/dotnetUtils.ts",".././src/infrastructure.providers/dotnet/src/dotnetXmlParserFactory.ts",".././src/infrastructure.providers/dotnet/src/options/nugetOptions.ts",".././src/infrastructure.providers/dotnet/test/clients/dotnetClient.tests.ts",".././src/infrastructure.providers/dotnet/test/clients/fixtures/dotnetSources.ts",".././src/infrastructure.providers/dotnet/test/clients/fixtures/nugetResources.ts",".././src/infrastructure.providers/dotnet/test/clients/nugetResourceClient.tests.ts",".././src/infrastructure.providers/dotnet/test/dotnetUtils/parseVersionSpec.tests.ts",".././src/infrastructure.providers/dotnet/test/dotnetXmlParserFactory/createDependenciesFromXml.fixtures.ts",".././src/infrastructure.providers/dotnet/test/dotnetXmlParserFactory/createDependenciesFromXml.tests.ts",".././src/infrastructure.providers/npm/index.test.ts",".././src/infrastructure.providers/npm/index.ts",".././src/infrastructure.providers/npm/src/clients/githubClient.ts",".././src/infrastructure.providers/npm/src/clients/npmPackageClient.ts",".././src/infrastructure.providers/npm/src/clients/pacoteClient.ts",".././src/infrastructure.providers/npm/src/definitions/eGitHubContributions.ts",".././src/infrastructure.providers/npm/src/definitions/eNpmContributions.ts",".././src/infrastructure.providers/npm/src/factories/packageFactory.ts",".././src/infrastructure.providers/npm/src/models/npaSpec.ts",".././src/infrastructure.providers/npm/src/npmConfig.ts",".././src/infrastructure.providers/npm/src/npmContainer.ts",".././src/infrastructure.providers/npm/src/npmSuggestionProvider.ts",".././src/infrastructure.providers/npm/src/npmUtils.ts",".././src/infrastructure.providers/npm/src/options/githubOptions.ts",".././src/infrastructure.providers/npm/test/githubClient/fetchGitHub.fixtures.ts",".././src/infrastructure.providers/npm/test/githubClient/fetchGitHub.tests.ts",".././src/infrastructure.providers/npm/test/npmPackageClient/fetchDirectory.tests.ts",".././src/infrastructure.providers/npm/test/npmPackageClient/fetchGit.tests.ts",".././src/infrastructure.providers/npm/test/npmPackageClient/fetchRegistry.tests.ts",".././src/infrastructure.providers/npm/test/npmVersionUtils/replaceGitVersion.tests.ts",".././src/infrastructure.providers/npm/test/pacoteClient/npmrc.tests.ts",".././src/infrastructure.providers/npm/test/pacoteClient/pacoteClient.fixtures.ts",".././src/infrastructure.providers/npm/test/pacoteClient/pacoteClient.tests.ts",".././src/infrastructure.providers/npm/test/stubs/pacoteStub.ts",".././src/infrastructure.testing/index.ts",".././src/infrastructure.testing/src/utils.ts",".././test/runner.ts",".././test/unit.tests.ts","../external \"@npmcli/promise-spawn\"","../external \"assert\"","../external \"awilix\"","../external \"fs\"","../external \"jsonc-parser\"","../external \"libnpmconfig\"","../external \"minimatch\"","../external \"mocha\"","../external \"mocha-ui-esm\"","../external \"npm-package-arg\"","../external \"pacote\"","../external \"path\"","../external \"request-light\"","../external \"semver\"","../external \"source-map-support\"","../external \"ts-mockito\"","../external \"tty\"","../external \"url\"","../external \"xmldoc\"","../external \"yaml\""],"names":[],"mappings":"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","file":"extension.test.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./test/runner.ts\");\n","export * from './test/caching/expiryCacheMap.tests';\nexport * from './test/requests/abstractClientRequest.tests';\nexport * from './test/helpers/urlHelpers.tests';","export * from './src/definitions/clientResponses';\n\nexport * from './src/definitions/eCachingContributions';\nexport * from './src/definitions/eHttpContributions';\nexport * from './src/definitions/eHttpClientRequestMethods';\n\nexport * from './src/definitions/iHttpOptions';\nexport * from './src/definitions/iCachingOptions';\nexport * from './src/definitions/iJsonHttpClient';\nexport * from './src/definitions/iHttpClient';\nexport * from './src/definitions/iProcessClient';\n\nexport * from './src/definitions/tHttpRequestOptions';\n\nexport * from './src/caching/expiryCacheMap';\nexport * from './src/options/cachingOptions';\nexport * from './src/options/httpOptions';\n\nexport * from './src/requests/abstractCachedRequest';\nexport * from './src/requests/jsonHttpClient';\n\n\nexport * as UrlHelpers from './src/helpers/urlHelpers';","import { ICachingOptions } from \"../definitions/iCachingOptions\";\n\nexport type CacheEntry<T> = {\n  expiryTime: number,\n  data: T\n};\n\ntype CacheMap<T> = {\n  [key: string]: CacheEntry<T>;\n};\n\nexport class ExpiryCacheMap<T> {\n\n  cachingOpts: ICachingOptions;\n\n  cacheMap: CacheMap<T>;\n\n  constructor(cachingOpts: ICachingOptions) {\n    this.cachingOpts = cachingOpts;\n    this.cacheMap = {};\n  }\n\n  clear() {\n    this.cacheMap = {};\n  }\n\n  hasExpired(key: string): boolean {\n    const entry = this.cacheMap[key];\n    if (!entry) return true;\n\n    return Date.now() > entry.expiryTime;\n  }\n\n  expire(key: string): T {\n    const entry = this.cacheMap[key];\n    if (entry) delete this.cacheMap[key];\n    return entry.data;\n  }\n\n  get(key: string): T {\n    const entry = this.cacheMap[key];\n    return entry && entry.data;\n  }\n\n  set(key: string, data: T): T {\n    const expiryTime = Date.now() + this.cachingOpts.duration;\n    const newEntry = {\n      expiryTime,\n      data\n    };\n    this.cacheMap[key] = newEntry;\n    return newEntry.data;\n  }\n\n}","import { KeyDictionary } from 'core.generics';\n\nexport enum ClientResponseSource {\n  remote = 'remote',\n  cache = 'cache',\n  local = 'local'\n}\n\nexport type ClientResponse<TStatus, TData> = {\n  source: ClientResponseSource;\n  status: TStatus;\n  data: TData;\n  rejected?: boolean;\n}\n\nexport type HttpClientResponse = ClientResponse<number, string>;\n\nexport type JsonClientResponse = ClientResponse<number, KeyDictionary<any>>;\n\nexport type ProcessClientResponse = ClientResponse<string, string>;","export enum CachingContributions {\n  CacheDuration = 'duration',\n}","export enum HttpClientRequestMethods {\n  get = 'GET',\n  head = 'HEAD'\n}\n","export enum HttpContributions {\n  StrictSSL = 'strictSSL'\n}","import { KeyStringDictionary } from 'core.generics';\n\nexport enum RegistryProtocols {\n  file = 'file:',\n  http = 'http:',\n  https = 'https:',\n}\n\nexport function getProtocolFromUrl(url: string): RegistryProtocols {\n  const { parse } = require('url');\n  const sourceUrl = parse(url);\n  const registryProtocol = sourceUrl.protocol === null ?\n    RegistryProtocols.file :\n    RegistryProtocols[sourceUrl.protocol.substr(0, sourceUrl.protocol.length - 1)];\n\n  return registryProtocol || RegistryProtocols.file;\n}\n\nexport function createUrl(baseUrl: string, queryParams: KeyStringDictionary): string {\n  const query = buildQueryParams(queryParams);\n\n  const slashedUrl = query.length > 0 ?\n    stripEndSlash(baseUrl) :\n    baseUrl;\n\n  return slashedUrl + query;\n}\n\nfunction buildQueryParams(queryParams: KeyStringDictionary): string {\n  let query = '';\n  if (queryParams) {\n    query = Object.keys(queryParams)\n      .map(key => `${key}=${queryParams[key]}`)\n      .join('&');\n    query = (query.length > 0) ? '?' + query : '';\n  }\n  return query;\n}\n\nfunction stripEndSlash(url: string): string {\n  return url.endsWith('/') ? url.substr(url.length - 1) : url;\n}\n\nexport function ensureEndSlash(url: string): string {\n  return url.endsWith('/') ? url : url + '/';\n}","import { IFrozenOptions, OptionsWithFallback } from 'core.configuration';\nimport { Nullable } from 'core.generics';\n\nimport { CachingContributions } from '../definitions/eCachingContributions';\nimport { ICachingOptions } from \"../definitions/iCachingOptions\";\n\nexport class CachingOptions extends OptionsWithFallback\n  implements ICachingOptions {\n\n  constructor(\n    config: IFrozenOptions,\n    section: string,\n    fallbackSection: Nullable<string> = null\n  ) {\n    super(config, section, fallbackSection);\n  }\n\n  get duration(): number {\n    const durationMin = this.getOrDefault<number>(\n      CachingContributions.CacheDuration,\n      0\n    );\n    // convert to milliseconds\n    return durationMin * 60000;\n  }\n\n}","import { IFrozenOptions, OptionsWithFallback } from 'core.configuration';\nimport { IHttpOptions, HttpContributions } from 'core.clients';\nimport { Nullable } from 'core.generics';\n\nexport class HttpOptions extends OptionsWithFallback implements IHttpOptions {\n\n  constructor(\n    config: IFrozenOptions,\n    section: string,\n    fallbackSection: Nullable<string> = null\n  ) {\n    super(config, section, fallbackSection);\n  }\n\n  get strictSSL(): boolean {\n    return this.getOrDefault<boolean>(\n      HttpContributions.StrictSSL,\n      true\n    );\n  }\n\n}","import { ExpiryCacheMap } from '../caching/expiryCacheMap';\n\nimport { ICachingOptions } from \"../definitions/iCachingOptions\";\nimport {\n  ClientResponse,\n  ClientResponseSource\n} from \"../definitions/clientResponses\";\n\nexport abstract class AbstractCachedRequest<TStatus, TData> {\n\n  cache: ExpiryCacheMap<ClientResponse<TStatus, TData>>;\n\n  constructor(cachingOpts: ICachingOptions) {\n    this.cache = new ExpiryCacheMap(cachingOpts);\n  }\n\n  createCachedResponse(\n    cacheKey: string,\n    status: TStatus,\n    data: TData,\n    rejected: boolean = false,\n    source: ClientResponseSource = ClientResponseSource.remote\n  ): ClientResponse<TStatus, TData> {\n    const cacheEnabled = this.cache.cachingOpts.duration > 0;\n\n    if (cacheEnabled) {\n      //  cache reponse (don't return, keep immutable)\n      this.cache.set(\n        cacheKey,\n        {\n          source: ClientResponseSource.cache,\n          status,\n          data,\n          rejected\n        }\n      );\n    }\n\n    // return original fetched data\n    return {\n      source,\n      status,\n      data,\n      rejected\n    };\n  }\n\n}","import { KeyStringDictionary } from 'core.generics';\n\nimport {\n  HttpClientResponse,\n  JsonClientResponse,\n  HttpClientRequestMethods,\n  IJsonHttpClient,\n  IHttpClient\n} from 'core.clients';\n\nexport class JsonHttpClient implements IJsonHttpClient {\n\n  httpClient: IHttpClient;\n\n  constructor(httpClient: IHttpClient) {\n    this.httpClient = httpClient;\n  }\n\n  async request(\n    method: HttpClientRequestMethods,\n    url: string,\n    query: KeyStringDictionary = {},\n    headers: KeyStringDictionary = {}\n  ): Promise<JsonClientResponse> {\n\n    return this.httpClient.request(method, url, query, headers)\n      .then(function (response: HttpClientResponse) {\n        return {\n          source: response.source,\n          status: response.status,\n          data: JSON.parse(response.data),\n        }\n      });\n\n  }\n\n}","import { delay } from 'infrastructure.testing';\n\nimport { ExpiryCacheMap, ICachingOptions } from 'core.clients';\n\nconst assert = require('assert');\n\nlet testCacheMap\n\nexport const ExpiryCacheMapTests = {\n\n  beforeEach: () => {\n    // setup the client cache\n    testCacheMap = new ExpiryCacheMap(<ICachingOptions>{ duration: 30000 })\n  },\n\n  \"hasExpired(key)\": {\n\n    \"returns true when no key exists\": () => {\n      const testKey = 'missing';\n      assert.ok(testCacheMap.hasExpired(testKey), 'ExpiryCacheMap.hasExpired(key): A missing key should be expired');\n    },\n\n    \"returns false when the a cache entry is still within the cache duration\": () => {\n      const testKey = 'key1';\n      testCacheMap.set(testKey, {});\n      const actual = testCacheMap.hasExpired(testKey);\n      assert.ok(actual === false, 'ExpiryCacheMap.hasExpired(key): A cache entry within the cache duration should NOT be expired');\n    },\n\n    \"returns true when the cache entry is beyond the cache duration\": () => {\n      const testKey = 'key1';\n\n      testCacheMap = new ExpiryCacheMap(<ICachingOptions>{ duration: -1 });\n      testCacheMap.set(testKey, {});\n      const actual = testCacheMap.hasExpired(testKey);\n      assert.ok(actual, 'ExpiryCacheMap.hasExpired(key): A cache entry beyond the cache duration should be expired');\n    },\n\n    \"returns true when duration has elapsed\": async () => {\n      const testKey = 'duration';\n      const testDuration = 250;\n\n      testCacheMap = new ExpiryCacheMap(<ICachingOptions>{ duration: testDuration });\n      testCacheMap.set(testKey, \"should of expired\")\n\n      return delay(testDuration + 10)\n        .then(finished => {\n          const actual = testCacheMap.hasExpired(testKey);\n          assert.equal(actual, true);\n        });\n    },\n\n    \"returns false when duration has not elapsed\": async () => {\n      const testKey = 'duration';\n      const testDuration = 250;\n\n      testCacheMap = new ExpiryCacheMap(<ICachingOptions>{ duration: testDuration });\n      testCacheMap.set(testKey, \"should not be expired\")\n\n      return delay(testDuration - 100)\n        .then(finished => {\n          const actual = testCacheMap.hasExpired(testKey);\n          assert.equal(actual, false);\n        });\n    },\n\n  },\n\n  \"get(key)\": {\n\n    \"returns undefined if the key does not exist\": () => {\n      const testKey = 'missing';\n      const actual = testCacheMap.get(testKey);\n      assert.equal(actual, undefined, 'ExpiryCacheMap.get(key): Should return undefined when the key doesnt exist');\n    },\n\n    \"returns the data by the key\": () => {\n      const testKey = 'key1';\n      const testData = {};\n\n      testCacheMap = new ExpiryCacheMap(<ICachingOptions>{ duration: -1 });\n      testCacheMap.set(testKey, testData);\n      const actual = testCacheMap.get(testKey);\n      assert.equal(actual, testData, 'ExpiryCacheMap.set(key, data): Should store the data by the key');\n    }\n\n  },\n\n  \"set(key, data)\": {\n\n    \"stores the data by the key\": () => {\n      const testKey = 'key1';\n      const testData = {};\n      testCacheMap.set(testKey, testData);\n      const actual = testCacheMap.get(testKey);\n      assert.equal(actual, testData, 'ExpiryCacheMap.set(key, data): Should store the data by the key');\n    },\n\n    \"returns the data that was set\": () => {\n      const testKey = 'key1';\n      const testData = {};\n      const actual = testCacheMap.set(testKey, testData);\n      assert.equal(actual, testData, 'ExpiryCacheMap.set(key, data): Should return the data');\n    }\n\n  },\n\n  \"expire(key)\": {\n\n    \"expires items in the cache\": () => {\n      const testKey = 'key1';\n      const testData = \"initial data\";\n\n      testCacheMap.set(testKey, testData);\n      testCacheMap.expire(testKey);\n      assert.ok(testCacheMap.hasExpired(testKey), true, 'ExpiryCacheMap.expire(key): Should expiry the item');\n\n      testCacheMap.set(testKey, \"new data\");\n      assert.ok(testCacheMap.get(testKey), \"new data\", 'ExpiryCacheMap.get(key): Should contain new data');\n    }\n\n  }\n\n}","import { UrlHelpers } from 'core.clients';\n\nconst assert = require('assert')\n\nexport const UrlHelpersTests = {\n\n  \"getProtocolFromUrl\": {\n\n    \"parses http and https protocols\": () => {\n      const testUrls = [\n        'https://test.url.example/path',\n        'http://test.url.example/path'\n      ]\n\n      const expectedProtocols = [\n        UrlHelpers.RegistryProtocols.https,\n        UrlHelpers.RegistryProtocols.http\n      ]\n\n      testUrls.forEach((testUrl, testIndex) => {\n        const actual = UrlHelpers.getProtocolFromUrl(testUrl)\n        assert.equal(actual, expectedProtocols[testIndex], \"Protocol did not match\")\n      })\n\n    },\n\n    \"parses file protocols\": () => {\n      const testFolders = [\n        'd:\\\\some\\\\path',\n        '/d/some/path'\n      ]\n\n      testFolders.forEach((testFolder, testIndex) => {\n        const actual = UrlHelpers.getProtocolFromUrl(testFolder)\n        assert.equal(actual, UrlHelpers.RegistryProtocols.file, \"Protocol did not match\")\n      })\n\n    },\n\n  },\n\n  \"ensureEndSlash\": {\n\n    \"appends missing slashes\": () => {\n      const testUrls = [\n        'https://test.url.example',\n        'https://test.url.example/'\n      ]\n\n      const expectedUrls = [\n        'https://test.url.example/',\n        'https://test.url.example/'\n      ]\n\n      testUrls.forEach((testUrl, testIndex) => {\n        const actual = UrlHelpers.ensureEndSlash(testUrl)\n        assert.equal(actual, expectedUrls[testIndex], \"End slash did not match\")\n      })\n\n    },\n\n  },\n\n};","import {\n  ClientResponseSource,\n  AbstractCachedRequest,\n  ICachingOptions\n} from 'core.clients'\n\nconst assert = require('assert')\n\nclass TestClientRequest extends AbstractCachedRequest<number, string> { }\n\nexport const AbstractClientRequestTests = {\n\n  \"createCachedResponse\": {\n\n    \"caches responses\": () => {\n      const testKey = 'https://test.url.example/path';\n      const testStatus = 123;\n      const testSource = ClientResponseSource.local;\n      const testCache = \"cached test\";\n\n      const expectedFirstResponse = {\n        source: testSource,\n        status: testStatus,\n        data: testCache,\n        rejected: false\n      };\n\n      const expectedCacheResponse = {\n        source: ClientResponseSource.cache,\n        status: testStatus,\n        data: testCache,\n        rejected: false\n      };\n\n      const rut = new TestClientRequest(<ICachingOptions>{\n        duration: 30000\n      });\n\n      const actualFirstResp = rut.createCachedResponse(\n        testKey,\n        testStatus,\n        testCache,\n        false,\n        testSource,\n      )\n      assert.deepEqual(actualFirstResp, expectedFirstResponse)\n\n      // assert cache\n      const actualCacheResp = rut.cache.get(testKey);\n      assert.deepEqual(actualCacheResp, expectedCacheResponse)\n    },\n\n    \"doesnt cache when duration is 0\": () => {\n      const testKey = 'https://test.url.example/path';\n      const testStatus = 123;\n      const testSource = ClientResponseSource.local;\n      const testCache = \"cached test\";\n\n      const expectedResponse = {\n        source: testSource,\n        status: testStatus,\n        data: testCache,\n        rejected: false\n      };\n\n      const rut = new TestClientRequest(<ICachingOptions>{\n        duration: 0\n      });\n\n      const actualFirstResp = rut.createCachedResponse(\n        testKey,\n        testStatus,\n        testCache,\n        false,\n        testSource,\n      )\n      assert.deepEqual(actualFirstResp, expectedResponse)\n\n      // assert cache\n      const actualCacheResp = rut.cache.get(testKey);\n      assert.deepEqual(actualCacheResp, undefined)\n\n    },\n\n  },\n\n};","export * from './test/optionsWithFallback.tests';\n","export * from './src/definitions/iConfig';\nexport * from './src/definitions/iOptions';\nexport * from './src/options';\nexport * from './src/optionsWithFallback';","import { IFrozenOptions, IOptions } from 'core.configuration';\n\nexport abstract class Options implements IOptions {\n\n  protected section: string;\n\n  config: IFrozenOptions;\n\n  constructor(config: IFrozenOptions, section: string) {\n    this.config = config;\n    this.section = (section.length > 0) ? section + '.' : '';\n  }\n\n  get<T>(key: string): T {\n    return this.config.get(`${this.section}${key}`);\n  }\n\n  defrost(): void {\n    this.config.defrost();\n  }\n\n}","import { Nullable } from 'core.generics';\nimport { IFrozenOptions, Options, IOptionsWithDefaults } from 'core.configuration';\n\nexport class OptionsWithFallback extends Options\n  implements IOptionsWithDefaults {\n\n  protected fallbackSection: Nullable<string>;\n\n  constructor(config: IFrozenOptions, section: string, fallbackSection: Nullable<string> = null) {\n    super(config, section);\n    this.fallbackSection = fallbackSection;\n  }\n\n  get<T>(key: string): T {\n    // attempt to get the section value\n    const sectionValue: T = this.config.get(`${this.section}${key}`);\n\n    // return section value\n    if (sectionValue !== null && sectionValue !== undefined) return sectionValue;\n\n    // attempt to get fallback section value\n    let fallbackSectionValue: T;\n    if (this.fallbackSection !== null) {\n      fallbackSectionValue = this.config.get(`${this.fallbackSection}.${key}`);\n    }\n\n    // return fallback key value\n    return fallbackSectionValue;\n  }\n\n  getOrDefault<T>(key: string, defaultValue: T): T {\n    // attempt to get the section value\n    const value: T = this.get(key);\n\n    // return key value\n    if (value !== null && value !== undefined) return value;\n\n    // return default value\n    return defaultValue;\n  }\n\n}","import { OptionsWithFallback } from 'core.configuration'\n\nconst assert = require('assert')\n\nexport const OptionsWithFallbackTests = {\n\n  \"get\": {\n\n    \"returns section.key value, fallback.key value\": () => {\n      const testMap = {\n        'caching.duration': null,\n        'dotnet.caching.duration': 1,\n\n        'logging.level': 2,\n        'dotnet.logging.level': null\n      }\n\n      const tests = [\n        {\n          section: 'dotnet.caching',\n          fallback: 'caching',\n          key: 'duration',\n          expected: 1\n        },\n        {\n          section: 'dotnet.logging',\n          fallback: 'logging',\n          key: 'level',\n          expected: 2\n        }\n      ]\n\n      tests.forEach(test => {\n\n        const cot = new OptionsWithFallback(\n          {\n            get: k => testMap[k],\n            defrost: () => null\n          },\n          test.section,\n          test.fallback\n        );\n\n        const actual = cot.get(test.key);\n\n        assert.equal(actual, test.expected);\n      })\n    },\n\n  },\n\n  \"getOrDefault\": {\n\n    \"returns section.key value, fallback.key value, default arg value\": () => {\n      const testMap = {\n        'caching.duration': null,\n        'dotnet.caching.duration': 1,\n\n        'logging.level': 2,\n        'dotnet.logging.level': null,\n\n        'nuget.feeds': null,\n        'dotnet.nuget.feeds': null\n      }\n\n      const tests = [\n        {\n          section: 'dotnet.caching',\n          fallback: 'caching',\n          key: 'duration',\n          expected: 1\n        },\n        {\n          section: 'dotnet.logging',\n          fallback: 'logging',\n          key: 'level',\n          expected: 2\n        },\n        {\n          section: 'dotnet.nuget',\n          fallback: 'nuget',\n          key: 'feeds',\n          expected: 'default arg'\n        }\n      ]\n\n      tests.forEach(test => {\n\n        const cot = new OptionsWithFallback(\n          {\n            get: k => testMap[k],\n            defrost: () => null\n          },\n          test.section,\n          test.fallback\n        );\n\n        const actual = cot.getOrDefault(test.key, 'default arg');\n\n        assert.equal(actual, test.expected);\n      })\n\n    },\n\n  }\n\n}","export * from './test/stubs/loggerStub'","import { KeyDictionary } from 'core.generics';\nimport { ILogger, LogLevelTypes, TChildLoggerOptions } from 'core.logging';\n\nexport class LoggerStub implements ILogger {\n\n  log(\n    level: LogLevelTypes,\n    message: string,\n    splats: KeyDictionary<any>\n  ): void { }\n\n  info(message: string, ...splats: any): void { }\n\n  debug(message: string, ...splats: any): void { }\n\n  error(message: string, ...splats: any): void { }\n\n  child(options: TChildLoggerOptions): ILogger {\n    return this;\n  }\n\n}","\n// VersionHelperTests\nimport extractTaggedVersions from './test/helpers/versionHelpers/extractTaggedVersions.tests';\nimport rollupPrereleases from './test/helpers/versionHelpers/filterPrereleasesGtMinRange.tests';\nimport splitReleasesFromArray from './test/helpers/versionHelpers/splitReleasesFromArray.tests';\nimport removeFourSegmentVersionsFromArray from './test/helpers/versionHelpers/removeFourSegmentVersionsFromArray.tests';\nimport friendlifyPrereleaseName from './test/helpers/versionHelpers/friendlifyPrereleaseName.tests';\nimport filterSemverVersions from './test/helpers/versionHelpers/filterSemverVersions.tests';\nimport isFixedVersion from './test/helpers/versionHelpers/isFixedVersion.tests';\nimport lteFromArray from './test/helpers/versionHelpers/lteFromArray.tests'\n\nexport const VersionHelperTests = {\n  extractTaggedVersions,\n  rollupPrereleases,\n  splitReleasesFromArray,\n  removeFourSegmentVersionsFromArray,\n  friendlifyPrereleaseName,\n  filterSemverVersions,\n  isFixedVersion,\n  lteFromArray,\n}\n\n// Package Parser Tests\nimport extractPackageDependenciesFromJson from './test/parsers/jsonPackageParser/extractPackageDependenciesFromJson.tests';\nimport extractPackageDependenciesFromYaml from './test/parsers/yamlPackageParser/extractPackageDependenciesFromYaml.tests';\n\nexport const PackageParserTests = {\n  extractPackageDependenciesFromJson,\n  extractPackageDependenciesFromYaml,\n}","export * from './src/definitions/ePackageResponseErrors';\nexport * from './src/definitions/ePackageSourceTypes';\nexport * from './src/definitions/ePackageVersionTypes';\n\nexport * from './src/definitions/iPackageClient';\nexport * from './src/definitions/iPackageDependency';\n\nexport * from './src/definitions/tPackageDependencyRange';\nexport * from './src/definitions/tPackageDocument';\nexport * from './src/definitions/tPackageIdentifier';\nexport * from './src/definitions/tPackageNameVersion';\nexport * from \"./src/definitions/tPackageRequest\";\nexport * from \"./src/definitions/tPackageResponseStatus\";\nexport * from './src/definitions/tSemverSpec';\n\nexport * as DocumentFactory from './src/factories/packageDocumentFactory';\nexport * as RequestFactory from './src/factories/packageRequestFactory';\nexport * as ResponseFactory from './src/factories/packageResponseFactory';\nexport * as VersionHelpers from './src/helpers/versionHelpers';\n\nexport * from './src/models/packageResponse';\n\nexport * from \"./src/parsers/jsonPackageParser\";\nexport * from \"./src/parsers/yamlPackageParser\";","export enum PackageResponseErrors {\n  None,\n  NotFound,\n  NotSupported,\n  GitNotFound,\n  InvalidVersion,\n  Unexpected\n};\n","export enum PackageSourceTypes {\n  Directory = 'directory',\n  File = 'file',\n  Git = 'git',\n  Github = 'github',\n  Registry = 'registry'\n}","export enum PackageVersionTypes {\n  Version = 'version',\n  Range = 'range',\n  Tag = 'tag',\n  Alias = 'alias',\n  Committish = 'committish'\n}\n","import { TPackageDependencyRange } from \"./tPackageDependencyRange\";\nimport { TPackageNameVersion } from \"./tPackageNameVersion\";\n\nexport interface IPackageDependency {\n\n  nameRange: TPackageDependencyRange;\n\n  versionRange: TPackageDependencyRange;\n\n  packageInfo: TPackageNameVersion;\n\n};","import { TPackageSuggestion, SuggestionFactory } from 'core.suggestions'\n\nimport { PackageSourceTypes } from \"../definitions/ePackageSourceTypes\";\nimport { PackageVersionTypes } from \"../definitions/ePackageVersionTypes\";\nimport { TPackageDocument } from \"../definitions/tPackageDocument\";\nimport { TPackageIdentifier } from \"../definitions/tPackageIdentifier\";\nimport { TPackageResponseStatus } from \"../definitions/tPackageResponseStatus\";\nimport { TPackageRequest } from '../definitions/tPackageRequest';\n\nexport function create(\n  source: PackageSourceTypes,\n  request: TPackageRequest<any>,\n  response: TPackageResponseStatus,\n  suggestions: Array<TPackageSuggestion>\n): TPackageDocument {\n\n  const { providerName, package: requested } = request;\n\n  return {\n    providerName,\n    source,\n    type: null,\n    requested,\n    resolved: null,\n    response,\n    suggestions\n  };\n\n}\n\nexport function createInvalidVersion(\n  providerName: string,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  type: PackageVersionTypes\n): TPackageDocument {\n  const source: PackageSourceTypes = PackageSourceTypes.Registry;\n  const suggestions: Array<TPackageSuggestion> = [\n    SuggestionFactory.createInvalid(''),\n    SuggestionFactory.createLatest(),\n  ];\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved: null,\n    suggestions\n  };\n}\n\nexport function createNoMatch(\n  providerName: string,\n  source: PackageSourceTypes,\n  type: PackageVersionTypes,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  latestVersion?: string\n): TPackageDocument {\n\n  const suggestions: Array<TPackageSuggestion> = [\n    SuggestionFactory.createNoMatch(),\n    SuggestionFactory.createLatest(latestVersion),\n  ];\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved: null,\n    suggestions\n  };\n}\n\nexport function createFixed(\n  providerName: string,\n  source: PackageSourceTypes,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  type: PackageVersionTypes,\n  fixedVersion: string\n): TPackageDocument {\n\n  const suggestions: Array<TPackageSuggestion> = [\n    SuggestionFactory.createFixedStatus(fixedVersion)\n  ];\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved: null,\n    suggestions\n  };\n}","import {\n  RequestFactory,\n  ResponseFactory,\n  IPackageDependency,\n  TPackageRequest,\n  IPackageClient,\n  PackageResponse,\n} from 'core.packages';\n\nexport async function executeDependencyRequests<TClientData>(\n  packagePath: string,\n  client: IPackageClient<TClientData>,\n  clientData: TClientData,\n  dependencies: Array<IPackageDependency>,\n): Promise<Array<PackageResponse>> {\n\n  const { providerName } = client.config;\n\n  const results = [];\n  const promises = dependencies.map(\n    function (dependency) {\n\n      // build the client request\n      const { name, version } = dependency.packageInfo;\n      const clientRequest: TPackageRequest<TClientData> = {\n        providerName,\n        clientData,\n        dependency,\n        package: {\n          name,\n          version,\n          path: packagePath,\n        },\n        attempt: 0\n      };\n\n      // execute request\n      const promisedDependency = RequestFactory.executePackageRequest(\n        client,\n        clientRequest\n      );\n\n      // flatten responses\n      return promisedDependency.then(\n        function (responses) {\n          if (Array.isArray(responses))\n            results.push(...responses)\n          else\n            results.push(responses);\n        }\n      );\n\n    }\n\n  );\n\n  return Promise.all(promises).then(_ => results)\n}\n\nexport async function executePackageRequest<TClientData>(\n  client: IPackageClient<TClientData>,\n  request: TPackageRequest<TClientData>,\n): Promise<Array<PackageResponse> | PackageResponse> {\n\n  client.logger.debug(`Queued package: %s`, request.package.name);\n\n  return client.fetchPackage(request)\n    .then(function (response) {\n\n      client.logger.info(\n        'Fetched %s package from %s: %s@%s',\n        response.providerName,\n        response.response.source,\n        request.package.name,\n        request.package.version\n      );\n\n      return ResponseFactory.createSuccess(request, response);\n    })\n    .catch(function (error: PackageResponse) {\n\n      client.logger.error(\n        `%s caught an exception.\\n Package: %j\\n Error: %j`,\n        executePackageRequest.name,\n        request.package,\n        error\n      );\n\n      return Promise.reject(error);\n    })\n}","import { ClientResponseSource } from 'core.clients';\nimport { TPackageSuggestion } from \"core.suggestions\";\n\nimport { TPackageResponseStatus } from \"../definitions/tPackageResponseStatus\";\nimport { TPackageRequest } from \"../definitions/tPackageRequest\";\nimport { TPackageDocument } from \"../definitions/tPackageDocument\";\nimport { PackageResponse } from \"../models/packageResponse\";\n\nexport function createResponseStatus(source: ClientResponseSource, status: number): TPackageResponseStatus {\n  return {\n    source,\n    status\n  };\n}\n\nexport function createSuccess<TClientData>(\n  request: TPackageRequest<TClientData>,\n  response: TPackageDocument\n): Array<PackageResponse> {\n  // map the documents to responses\n  return response.suggestions.map(\n    function (suggestion: TPackageSuggestion, order: number): PackageResponse {\n      return {\n        providerName: response.providerName,\n        source: response.source,\n        type: response.type,\n        nameRange: request.dependency.nameRange,\n        versionRange: request.dependency.versionRange,\n        order,\n        requested: response.requested,\n        resolved: response.resolved,\n        suggestion,\n      };\n    }\n  );\n}\n","import { KeyStringArrayDictionary } from 'core.generics';\n\nimport { TSemverSpec } from \"../definitions/tSemverSpec\";\nimport { TPackageNameVersion } from \"../definitions/tPackageNameVersion\";\nimport { PackageVersionTypes } from \"../definitions/ePackageVersionTypes\";\n\nexport const formatTagNameRegex = /^[^0-9\\-]*/;\nexport const loosePrereleases = { loose: true, includePrerelease: true };\n\nexport function filterPrereleasesFromDistTags(distTags: { [key: string]: string }): Array<string> {\n  const { prerelease } = require(\"semver\");\n  const prereleases: Array<string> = [];\n  Object.keys(distTags)\n    .forEach((key: string) => {\n      if (prerelease(distTags[key])) prereleases.push(distTags[key]);\n    });\n\n  return prereleases;\n}\n\nexport function extractVersionsFromMap(versions: Array<TPackageNameVersion>): Array<string> {\n  return versions.map(function (pnv: TPackageNameVersion) {\n    return pnv.version;\n  });\n}\n\nexport function extractTaggedVersions(versions: Array<string>): Array<TPackageNameVersion> {\n  const { prerelease } = require('semver');\n\n  const results: Array<TPackageNameVersion> = [];\n  versions.forEach(function (version) {\n    const prereleaseComponents = prerelease(version);\n    const isPrerelease = !!prereleaseComponents && prereleaseComponents.length > 0;\n    if (isPrerelease) {\n      const regexResult = formatTagNameRegex.exec(prereleaseComponents[0]);\n\n      let name = regexResult[0].toLowerCase();\n\n      // capture cases like x.x.x-x.x.x\n      if (!name) name = prereleaseComponents.join('.');\n\n      results.push({\n        name,\n        version\n      })\n    }\n  });\n\n  return results;\n}\n\nexport function splitReleasesFromArray(versions: Array<string>): { releases: Array<string>, prereleases: Array<string> } {\n  const { prerelease } = require('semver');\n  const releases: Array<string> = [];\n  const prereleases: Array<string> = [];\n\n  versions.forEach(function (version: string) {\n    if (prerelease(version))\n      prereleases.push(version);\n    else\n      releases.push(version);\n  });\n\n  return { releases, prereleases };\n}\n\nexport function lteFromArray(versions: Array<string>, version: string) {\n  const { lte } = require('semver');\n  return versions.filter(\n    function (testVersion: string) {\n      return lte(testVersion, version);\n    }\n  );\n}\n\nexport function removeFourSegmentVersionsFromArray(versions: Array<string>): Array<string> {\n  return versions.filter(function (version: string) {\n    return isFourSegmentedVersion(version) === false;\n  });\n}\n\nexport function isFixedVersion(versionToCheck: string): boolean {\n  const { Range, valid } = require('semver');\n  const testRange = new Range(versionToCheck, loosePrereleases);\n  return valid(versionToCheck) !== null && testRange.set[0][0].operator === \"\";\n}\n\nconst isfourSegmentVersionRegex = /^(\\d+\\.)(\\d+\\.)(\\d+\\.)(\\*|\\d+)$/g;\nexport function isFourSegmentedVersion(versionToCheck: string): boolean {\n  return isfourSegmentVersionRegex.test(versionToCheck);\n}\n\nconst commonReleaseIdentities = [\n  ['legacy'],\n  ['alpha', 'preview', 'a'],\n  ['beta', 'b'],\n  ['next'],\n  ['milestone', 'm'],\n  ['rc', 'cr'],\n  ['snapshot'],\n  ['release', 'final', 'ga'],\n  ['sp']\n];\nexport function friendlifyPrereleaseName(prereleaseName: string): string {\n  const filteredNames = [];\n  commonReleaseIdentities.forEach(\n    function (group) {\n      return group.forEach(\n        commonName => {\n          const exp = new RegExp(`(.+-)${commonName}`, 'i');\n          if (exp.test(prereleaseName.toLowerCase())) {\n            filteredNames.push(commonName);\n          }\n        }\n      );\n    }\n  );\n\n  return (filteredNames.length === 0) ?\n    null :\n    filteredNames[0];\n}\n\nexport function parseSemver(packageVersion: string): TSemverSpec {\n  const { valid, validRange } = require('semver');\n  const isVersion = valid(packageVersion, loosePrereleases);\n  const isRange = validRange(packageVersion, loosePrereleases);\n  return {\n    rawVersion: packageVersion,\n    type: !!isVersion ?\n      PackageVersionTypes.Version :\n      !!isRange ? PackageVersionTypes.Range :\n        null,\n  };\n}\n\nexport function filterPrereleasesGtMinRange(versionRange: string, prereleases: Array<string>): Array<string> {\n  const {\n    SemVer,\n    gt,\n    maxSatisfying,\n    minVersion,\n    validRange,\n  } = require('semver');\n\n  const prereleaseGroupMap: KeyStringArrayDictionary = {};\n\n  // for each prerelease version;\n  // group prereleases by x.x.x-{name}*.x\n  prereleases.forEach(function (prereleaseVersion) {\n    const spec = new SemVer(prereleaseVersion, loosePrereleases)\n    const prereleaseKey = friendlifyPrereleaseName(prereleaseVersion) ||\n      spec.prerelease[0];\n\n    prereleaseGroupMap[prereleaseKey] = prereleaseGroupMap[prereleaseKey] || [];\n    prereleaseGroupMap[prereleaseKey].push(prereleaseVersion);\n  });\n\n  // check we have a valid range (handles non-semver errors)\n  const isValidRange = validRange(versionRange, loosePrereleases) !== null;\n  const minVersionFromRange = isValidRange ?\n    minVersion(versionRange, loosePrereleases) :\n    versionRange;\n\n  const gtfn = isValidRange ? gt : maxSatisfying;\n\n  // for each group;\n  // extract versions that are greater than the min-range (one from each group)\n  const filterPrereleases = [];\n  Object.keys(prereleaseGroupMap)\n    .forEach(function (prereleaseKey) {\n      const versions = prereleaseGroupMap[prereleaseKey];\n      const testMaxVersion = versions[versions.length - 1];\n      const isPrereleaseGt = gtfn(testMaxVersion, minVersionFromRange, loosePrereleases);\n      if (isPrereleaseGt) filterPrereleases.push(testMaxVersion)\n    });\n\n  return filterPrereleases;\n}\n\nexport function filterSemverVersions(versions: Array<string>): Array<string> {\n  const { validRange } = require('semver');\n  const semverVersions = [];\n  versions.forEach(version => {\n    if (validRange(version, loosePrereleases)) semverVersions.push(version);\n  });\n  return semverVersions;\n}\n\nexport const extractSymbolFromVersionRegex = /^([^0-9]*)?.*$/;\nexport const semverLeadingChars = ['^', '~', '<', '<=', '>', '>=', '~>'];\nexport function formatWithExistingLeading(existingVersion, newVersion) {\n  const regExResult = extractSymbolFromVersionRegex.exec(existingVersion);\n  const leading = regExResult && regExResult[1];\n  if (!leading || !semverLeadingChars.includes(leading))\n    return newVersion;\n\n  return `${leading}${newVersion}`;\n}","import { TPackageSuggestion } from 'core.suggestions';\n\nimport { PackageSourceTypes } from '../definitions/ePackageSourceTypes';\nimport { PackageVersionTypes } from '../definitions/ePackageVersionTypes';\nimport { PackageResponseErrors } from '../definitions/ePackageResponseErrors';\nimport { TPackageNameVersion } from '../definitions/tPackageNameVersion';\nimport { TPackageIdentifier } from '../definitions/tPackageIdentifier';\nimport { TPackageResponseStatus } from '../definitions/tPackageResponseStatus';\nimport { TPackageDependencyRange } from '../definitions/tPackageDependencyRange';\n\nexport class PackageResponse {\n  providerName: string;\n  requested: TPackageIdentifier;\n\n  nameRange: TPackageDependencyRange;\n  versionRange: TPackageDependencyRange;\n  order: number;\n\n  error?: PackageResponseErrors;\n  errorMessage?: string;\n  source?: PackageSourceTypes;\n  response?: TPackageResponseStatus;\n  type?: PackageVersionTypes;\n  resolved?: TPackageNameVersion;\n  suggestion?: TPackageSuggestion;\n}","// vscode references\nimport { IPackageDependency } from \"../definitions/iPackageDependency\";\n\nexport function extractPackageDependenciesFromJson(\n  json: string, filterPropertyNames: Array<string>\n): Array<IPackageDependency> {\n  const jsonErrors = [];\n  const jsonParser = require(\"jsonc-parser\");\n  const jsonTree = jsonParser.parseTree(json, jsonErrors);\n  if (!jsonTree || jsonTree.children.length === 0 || jsonErrors.length > 0) return [];\n  return extractFromNodes(jsonTree.children, filterPropertyNames);\n}\n\nexport function extractFromNodes(topLevelNodes, includePropertyNames: string[]): IPackageDependency[] {\n  const collector = [];\n\n  topLevelNodes.forEach(\n    function (node) {\n      const [keyEntry, valueEntry] = node.children;\n      if (includePropertyNames.includes(keyEntry.value) === false) return;\n      collectDependencyNodes(valueEntry.children, null, '', collector);\n    }\n  )\n\n  return collector\n}\n\nfunction collectDependencyNodes(nodes, parentKey, filterName: string, collector = []) {\n  nodes.forEach(\n    function (node) {\n      const [keyEntry, valueEntry] = node.children;\n\n      if (valueEntry.type == \"string\" &&\n        (filterName.length === 0 || keyEntry.value === filterName)) {\n        const dependencyLens = createFromProperty(parentKey || keyEntry, valueEntry);\n        collector.push(dependencyLens);\n      } else if (valueEntry.type == \"object\") {\n        collectDependencyNodes(valueEntry.children, keyEntry, 'version', collector)\n      }\n    }\n  )\n}\n\nfunction createFromProperty(keyEntry, valueEntry): IPackageDependency {\n  const nameRange = {\n    start: keyEntry.offset,\n    end: keyEntry.offset,\n  }\n\n  // +1 and -1 to be inside quotes\n  const versionRange = {\n    start: valueEntry.offset + 1,\n    end: valueEntry.offset + valueEntry.length - 1,\n  }\n\n  const packageInfo = {\n    name: keyEntry.value,\n    version: valueEntry.value\n  }\n\n  return {\n    nameRange,\n    versionRange,\n    packageInfo\n  }\n}\n","import { IPackageDependency } from \"../definitions/iPackageDependency\";\n\ntype YamlOptions = {\n  hasCrLf: boolean,\n  filterPropertyNames: Array<string>,\n}\n\nexport function extractPackageDependenciesFromYaml(\n  yaml: string,\n  filterPropertyNames: Array<string>\n): Array<IPackageDependency> {\n  const { Document, parseCST } = require('yaml');\n\n  // verbose parsing to handle CRLF scenarios\n  const cst = parseCST(yaml)\n\n  // create and parse the document\n  const yamlDoc = new Document({ keepCstNodes: true }).parse(cst[0])\n  if (!yamlDoc || !yamlDoc.contents || yamlDoc.errors.length > 0) return [];\n\n  const opts = {\n    hasCrLf: yaml.indexOf('\\r\\n') > 0,\n    filterPropertyNames,\n    yaml,\n  };\n\n  return extractDependenciesFromNodes(yamlDoc.contents.items, opts);\n}\n\nexport function extractDependenciesFromNodes(topLevelNodes, opts: YamlOptions): IPackageDependency[] {\n  const collector = [];\n\n  topLevelNodes.forEach(\n    function (pair) {\n      if (opts.filterPropertyNames.includes(pair.key.value) === false) return;\n      if (pair.value === null) return;\n      collectDependencyNodes(pair.value.items, opts, collector);\n    }\n  )\n\n  return collector\n}\n\nfunction collectDependencyNodes(nodes, opts: YamlOptions, collector: Array<IPackageDependency>) {\n  nodes.forEach(\n    function (pair) {\n      // node may be in the form \"no_version_dep:\", which we will indicate as the latest\n      if (!pair.value || (pair.value.type === 'PLAIN' && !pair.value.value)) {\n        const keyRange = getRangeFromCstNode(pair.key.cstNode, opts);\n        pair.value = {\n          range: [\n            keyRange.end + 2,\n            keyRange.end + 2,\n          ],\n          value: '',\n          type: null\n        }\n      }\n\n      if (pair.value.type === 'MAP') {\n        createDependencyLensFromMapType(pair.value.items, pair.key, opts, collector);\n      } else if (typeof pair.value.value === 'string') {\n        const dependencyLens = createDependencyLensFromPlainType(pair, opts);\n        collector.push(dependencyLens);\n      }\n    }\n  )\n}\n\nexport function createDependencyLensFromMapType(\n  nodes, parentKey, opts: YamlOptions, collector: Array<IPackageDependency>\n) {\n  nodes.forEach(\n    function (pair) {\n      // ignore empty entries\n      if (!pair.value) return;\n\n      if (pair.key.value === \"version\") {\n        const keyRange = getRangeFromCstNode(parentKey.cstNode, opts);\n        const nameRange = createRange(\n          keyRange.start,\n          keyRange.start,\n          null\n        );\n        const valueRange = getRangeFromCstNode(pair.value.cstNode, opts);\n        const versionRange = createRange(\n          valueRange.start,\n          valueRange.end,\n          pair.value.type\n        );\n        const packageInfo = {\n          name: parentKey.value,\n          version: pair.value.value\n        };\n        collector.push({\n          nameRange,\n          versionRange,\n          packageInfo\n        });\n      }\n    }\n  )\n\n}\n\nexport function createDependencyLensFromPlainType(pair, opts: YamlOptions): IPackageDependency {\n  const keyRange = getRangeFromCstNode(pair.key.cstNode, opts);\n  const nameRange = createRange(\n    keyRange.start,\n    keyRange.start,\n    null\n  );\n\n  let valueRange\n  if (pair.value.cstNode) {\n    valueRange = getRangeFromCstNode(pair.value.cstNode, opts);\n  } else {\n    // handle blank values\n    const start = pair.value.range[0];\n    valueRange = { start, end: start }\n  }\n\n  const versionRange = createRange(\n    valueRange.start,\n    valueRange.end,\n    pair.value.type\n  );\n\n  const packageInfo = {\n    name: pair.key.value,\n    version: pair.value.value\n  };\n\n  return {\n    nameRange,\n    versionRange,\n    packageInfo\n  }\n}\n\nfunction createRange(start, end, valueType: string) {\n  // +1 and -1 to be inside quotes\n  const quoted = valueType === \"QUOTE_SINGLE\" || valueType === \"QUOTE_DOUBLE\";\n  return {\n    start: start + (quoted ? 1 : 0),\n    end: end - (quoted ? 1 : 0),\n  }\n}\n\nfunction getRangeFromCstNode(cstNode, opts: YamlOptions) {\n  const crLfLineOffset = opts.hasCrLf ?\n    cstNode.rangeAsLinePos.start.line : 0;\n\n  const start = cstNode.range.start + crLfLineOffset;\n  const end = cstNode.range.end + crLfLineOffset;\n\n  return { start, end }\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nconst testVersions = [\n  \"2.0.0-preview.1\",\n  \"2.0.0\",\n  \"2.1.0-preview.2\",\n  \"2.1.0\",\n  \"2.2.0-preview.3\",\n  \"2.2.0-preview.4\",\n  \"2.2.0-preview.5\",\n  \"2.2.0\",\n  \"2.2.1\",\n];\n\nexport default {\n\n  \"returns empty when no matches found\": () => {\n    const results = VersionHelpers.extractTaggedVersions([]);\n    assert.equal(results.length, 0);\n  },\n\n  \"extracts prerelease tags\": () => {\n\n    const expected = [\n      '2.0.0-preview.1',\n      '2.1.0-preview.2',\n      '2.2.0-preview.3',\n      '2.2.0-preview.4',\n      '2.2.0-preview.5',\n    ]\n\n    const results = VersionHelpers.extractTaggedVersions(testVersions);\n    assert.equal(results.length, expected.length);\n    expected.forEach((expectedValue, index) => {\n      assert.equal(results[index].name, expectedValue.substr(6, 7));\n      assert.equal(results[index].version, expectedValue);\n    })\n  }\n\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nconst testPrereleases = [\n  '2.0.0-preview1.12141.1',\n  '2.0.0-preview2.45112.2',\n  '2.0.0-preview3.13311.9',\n  '2.0.0-preview4.17421.6',\n  '2.1.0-preview1-final',\n  '2.1.0-legacy.1',\n  '2.1.0-legacy.2',\n  '2.1.0-legacy.3',\n  '2.5.0-tag.1',\n  '2.5.0-tag.2',\n  '2.5.0-tag.3',\n  '2.1.0-beta1',\n  '2.1.0-beta2',\n  '2.1.0-beta3',\n];\n\nexport default {\n\n  \"returns empty when no matches found\": () => {\n    const results = VersionHelpers.filterPrereleasesGtMinRange('*', []);\n    assert.equal(Object.keys(results).length, 0);\n  },\n\n  \"handles non semver versions without error\": () => {\n    const tests = [\n      '2.1.0.RELEASE',\n      '2.1.0.3',\n    ]\n\n    tests.forEach(testVersion => {\n      const results = VersionHelpers.filterPrereleasesGtMinRange(testVersion, testPrereleases);\n      assert.deepEqual(results.length, 0, testVersion);\n    });\n  },\n\n  \"groups prereleases by name\": () => {\n    const expected = [\n      '2.1.0-preview1-final',\n      '2.1.0-legacy.3',\n      '2.5.0-tag.3',\n      '2.1.0-beta3',\n    ]\n    const results = VersionHelpers.filterPrereleasesGtMinRange('2.*', testPrereleases);\n    assert.equal(results.length, expected.length);\n    expected.forEach((expectedValue, index) => {\n      assert.equal(results[index], expectedValue);\n    })\n  },\n\n  \"returns empty when prereleases are <= specified versions\": () => {\n\n    const tests = [\n      // greater\n      '3.*',\n      '~2.6.1',\n      '2.5.9',\n\n      // equals\n      '2.5.0-tag.3',\n    ]\n\n    tests.forEach(testVersion => {\n      const results = VersionHelpers.filterPrereleasesGtMinRange(testVersion, testPrereleases);\n      assert.deepEqual(results.length, 0, testVersion);\n    });\n  },\n\n  \"returns prereleases > specified versions\": () => {\n    const expected = [\n      '2.1.0-preview1-final',\n      '2.1.0-legacy.3',\n      '2.5.0-tag.3',\n      '2.1.0-beta3',\n    ]\n\n    const tests = [\n      // less than\n      '2.*',\n      '~2.0.1',\n      '2.0.9'\n    ]\n\n    tests.forEach(testVersion => {\n      const results = VersionHelpers.filterPrereleasesGtMinRange(testVersion, testPrereleases);\n      assert.deepEqual(results, expected);\n    });\n  },\n\n\n}\n","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nconst testVersions = [\n  '1.0.0.5',\n  '2.0.0.33333',\n  '2.0.0-beta.1',\n  '9.5.12',\n  '11.1.9',\n  '12.0.0-next.1',\n  '~master',\n]\n\nexport default {\n\n  \"returns empty when versions is empty\": () => {\n    const results = VersionHelpers.filterSemverVersions([]);\n    assert.equal(results.length, 0);\n  },\n\n  \"returns empty when no matches found\": () => {\n    const results = VersionHelpers.filterSemverVersions(['1.2.3.4', '5.6.7.8']);\n    assert.equal(results.length, 0);\n  },\n\n  \"returns semver versions only\": () => {\n    const expected = [\n      '2.0.0-beta.1',\n      '9.5.12',\n      '11.1.9',\n      '12.0.0-next.1',\n    ]\n    const results = VersionHelpers.filterSemverVersions(testVersions);\n    assert.equal(results.length, expected.length);\n    expected.forEach((expectedValue, index) => {\n      assert.equal(results[index], expectedValue);\n    })\n  },\n\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nconst testPrereleases = [\n  '4.1.0-beta.1',\n  '2.1.0-legacy.1',\n  '2.5.0-release.1',\n]\n\nexport default {\n\n  \"returns null name when no matches found\": () => {\n    const result = VersionHelpers.friendlifyPrereleaseName('2.5.0-tag.1');\n    assert.equal(result, null);\n  },\n\n  \"returns common prerelease name when match found\": () => {\n    const expected = [\n      'beta',\n      'legacy',\n      'release',\n    ]\n    expected.forEach((expectedValue, index) => {\n      const actual = VersionHelpers.friendlifyPrereleaseName(testPrereleases[index])\n      assert.equal(actual, expectedValue);\n    })\n  },\n\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"returns false when not fixed\": () => {\n    const testVersions = [\n      '~1.2.3',\n      '^4.5.6-beta',\n      '1.2.*',\n      '>=1.2',\n      '*',\n    ]\n\n    testVersions.forEach(testVersion => {\n      const actual = VersionHelpers.isFixedVersion(testVersion)\n      assert.equal(actual, false);\n    })\n  },\n\n  \"returns true for fixed versions\": () => {\n    const testVersions = [\n      '1.2.3',\n      '4.5.6-beta',\n    ]\n    testVersions.forEach(testVersion => {\n      const actual = VersionHelpers.isFixedVersion(testVersion)\n      assert.equal(actual, true);\n    })\n  },\n\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"returns empty when versions is empty\": () => {\n    const results = VersionHelpers.lteFromArray([], '1.2.3');\n    assert.equal(results.length, 0);\n  },\n\n  \"returns lte versions for version inputs\": () => {\n\n    const testVersion = '0.8.19'\n\n    const testReleases = [\n      '0.0.1',\n      '0.4.23',\n      '0.6.23',\n      '0.8.19',\n      '1.0.0',\n      '4.0.0',\n    ]\n\n    const expected = [\n      '0.0.1',\n      '0.4.23',\n      '0.6.23',\n      '0.8.19',\n    ]\n\n    const results = VersionHelpers.lteFromArray(testReleases, testVersion);\n    assert.deepEqual(results, expected);\n  },\n\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nconst testVersions = [\n  '1.0.0',\n  '2.0.0',\n  '2.0.0-beta.1',\n  '2.0.0.1',\n  '9.5.12',\n  '11.1.9',\n  '11.1.9.1',\n  '12.0.0-next.1',\n]\n\nexport default {\n\n  \"returns versions when no matches found\": () => {\n    const expected = [\n      '1.0.0',\n      '2.0.0',\n    ]\n    const results = VersionHelpers.removeFourSegmentVersionsFromArray(expected);\n    assert.equal(results.length, expected.length);\n    expected.forEach((expectedVersion, index) => {\n      assert.equal(results[index], expectedVersion);\n    })\n  },\n\n  \"returns versions without four segment versions\": () => {\n    const expected = [\n      '1.0.0',\n      '2.0.0',\n      '2.0.0-beta.1',\n      '9.5.12',\n      '11.1.9',\n      '12.0.0-next.1',\n    ]\n    const results = VersionHelpers.removeFourSegmentVersionsFromArray(testVersions);\n    assert.equal(results.length, expected.length);\n    expected.forEach((expectedVersion, index) => {\n      assert.equal(results[index], expectedVersion);\n    })\n  }\n\n}","import { VersionHelpers } from 'core.packages';\n\nconst assert = require('assert');\n\nconst testVersions = [\n  '1.0.0',\n  '2.0.0',\n  '2.0.0-beta.1',\n  '9.5.12',\n  '11.1.9',\n  '12.0.0-next.1',\n]\n\nexport default {\n\n  \"returns empty when no matches found\": () => {\n    const { releases, prereleases } = VersionHelpers.splitReleasesFromArray([]);\n    assert.equal(releases.length, 0);\n    assert.equal(prereleases.length, 0);\n  },\n\n  \"returns mapped PackageNameVersion array\": () => {\n    const expectedReleases = [\n      '1.0.0',\n      '2.0.0',\n      '9.5.12',\n      '11.1.9',\n    ]\n    const expectedPrereleases = [\n      '2.0.0-beta.1',\n      '12.0.0-next.1',\n    ]\n    const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(testVersions);\n    assert.equal(releases.length, expectedReleases.length);\n\n    expectedReleases.forEach((expectedVersion, index) => {\n      assert.equal(releases[index], expectedVersion);\n    })\n\n    expectedPrereleases.forEach((expectedVersion, index) => {\n      assert.equal(prereleases[index], expectedVersion);\n    })\n  }\n\n}","export default {\n\n  \"extractDependencyEntries\": {\n\n    \"test\": {\n\n      \"dependencies\": {\n        \"Package1\": \"1.0.0\",\n        \"Package2\": \"github:repo/project#semver:1.2.3\",\n        \"Package3\": \"*\",\n        \"ComplexPackage1\": {\n          \"version\": \"1.2.3\"\n        }\n      },\n\n      \"scripts\": {\n        \"script1\": \"run me\",\n      }\n    },\n\n    \"expected\": [\n      {\n        \"nameRange\": {\n          \"start\": 17,\n          \"end\": 17\n        },\n        \"versionRange\": {\n          \"start\": 29,\n          \"end\": 34\n        },\n        \"packageInfo\": {\n          \"name\": \"Package1\",\n          \"version\": \"1.0.0\"\n        }\n      },\n      {\n        \"nameRange\": {\n          \"start\": 36,\n          \"end\": 36\n        },\n        \"versionRange\": {\n          \"start\": 48,\n          \"end\": 80\n        },\n        \"packageInfo\": {\n          \"name\": \"Package2\",\n          \"version\": \"github:repo/project#semver:1.2.3\"\n        }\n      },\n      {\n        \"nameRange\": {\n          \"start\": 82,\n          \"end\": 82\n        },\n        \"versionRange\": {\n          \"start\": 94,\n          \"end\": 95\n        },\n        \"packageInfo\": {\n          \"name\": \"Package3\",\n          \"version\": \"*\"\n        }\n      },\n      {\n        \"nameRange\": {\n          \"start\": 97,\n          \"end\": 97\n        },\n        \"versionRange\": {\n          \"start\": 127,\n          \"end\": 132\n        },\n        \"packageInfo\": {\n          \"name\": \"ComplexPackage1\",\n          \"version\": \"1.2.3\"\n        }\n      }\n    ]\n\n  }\n\n}","import { extractPackageDependenciesFromJson } from 'core.packages';\n\nimport Fixtures from './extractPackageDependenciesFromJson.fixtures';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"returns empty when no matches found\": () => {\n    const includeNames = []\n    const results = extractPackageDependenciesFromJson('', includeNames);\n    assert.equal(results.length, 0);\n  },\n\n  \"returns empty when no dependency entry names match\": () => {\n    const includeNames = [\"non-dependencies\"]\n    const results = extractPackageDependenciesFromJson(\n      JSON.stringify(Fixtures.extractDependencyEntries.test),\n      includeNames\n    );\n    assert.equal(results.length, 0);\n  },\n\n  \"extracts dependency entries from json\": () => {\n    const includeNames = [\"dependencies\"]\n    const results = extractPackageDependenciesFromJson(\n      JSON.stringify(Fixtures.extractDependencyEntries.test),\n      includeNames\n    );\n    assert.deepEqual(results, Fixtures.extractDependencyEntries.expected);\n  }\n\n}","export default {\n\n  \"extractDependencyEntries\": {\n\n    \"test\": `\nname: newtify\nversion: 1.2.3\ndescription: >-\n  Have you been turned into a newt?  Would you like to be?\n  This package can help. It has all of the\n  newt-transmogrification functionality you have been looking\n  for.\nhomepage: https://example-pet-store.com/newtify\ndocumentation: https://example-pet-store.com/newtify/docs\nenvironment:\n  sdk: '>=2.0.0 <3.0.0'\ndependencies:\n  efts: ^2.0.4\n  http: # black with comments\n  transmogrify:\n    version: ^0.4.0 # complex version with comments\n`,\n\n    \"expected\": [\n      {\n        \"nameRange\": {\n          \"start\": 376,\n          \"end\": 376\n        },\n        \"versionRange\": {\n          \"start\": 382,\n          \"end\": 388\n        },\n        \"packageInfo\": {\n          \"name\": \"efts\",\n          \"version\": \"^2.0.4\"\n        }\n      },\n      {\n        \"nameRange\": {\n          \"start\": 391,\n          \"end\": 391\n        },\n        \"versionRange\": {\n          \"start\": 397,\n          \"end\": 397\n        },\n        \"packageInfo\": {\n          \"name\": \"http\",\n          \"version\": \"\"\n        }\n      },\n      {\n        \"nameRange\": {\n          \"start\": 421,\n          \"end\": 421\n        },\n        \"versionRange\": {\n          \"start\": 448,\n          \"end\": 486\n        },\n        \"packageInfo\": {\n          \"name\": \"transmogrify\",\n          \"version\": \"^0.4.0\"\n        }\n      }\n    ]\n\n  }\n\n}","import { extractPackageDependenciesFromYaml } from 'core.packages';\n\nimport Fixtures from './extractPackageDependenciesFromYaml.fixtures';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"returns empty when no matches found\": () => {\n    const includeNames = []\n    const results = extractPackageDependenciesFromYaml('', includeNames);\n    assert.equal(results.length, 0);\n  },\n\n  \"returns empty when no dependency entry names match\": () => {\n    const includeNames = [\"non-dependencies\"]\n    const results = extractPackageDependenciesFromYaml(\n      Fixtures.extractDependencyEntries.test,\n      includeNames\n    );\n    assert.equal(results.length, 0);\n  },\n\n  \"extracts dependency entries from yaml\": () => {\n    const includeNames = [\"dependencies\"]\n    const results = extractPackageDependenciesFromYaml(\n      Fixtures.extractDependencyEntries.test,\n      includeNames\n    );\n    assert.deepEqual(results, Fixtures.extractDependencyEntries.expected);\n  }\n\n}","export * from './src/definitions/iProviderConfig';\nexport * from './src/definitions/eProviderSupport';\nexport * from './src/definitions/tProviderFileMatcher';\nexport * from './src/definitions/iProviderModule';","export enum ProviderSupport {\n  Releases = 'releases',\n  Prereleases = 'prereleases',\n  InstalledStatuses = 'installedStatuses'\n}","// SuggestionFactoryTests\nimport createSuggestions from './test/suggestionFactory/createSuggestions.tests';\nimport createFromHttpStatus from './test/suggestionFactory/createFromHttpStatus.tests';\nimport createLatest from './test/suggestionFactory/createLatest.tests';\n\nexport const PackageSuggestionFactoryTests = {\n  createSuggestions,\n  createFromHttpStatus,\n  createLatest\n}","export * from './src/definitions/eSuggestionFlags';\nexport * from './src/definitions/eSuggestionStatus';\nexport * from './src/definitions/iSuggestionProvider';\nexport * from './src/definitions/tSuggestion';\nexport * from './src/definitions/tSuggestionReplaceFunction';\n\nexport * from './src/suggestionUtils';\nexport * as SuggestionFactory from './src/suggestionFactory';","export enum SuggestionFlags {\n  // bitwise\n  status = 1,\n  release = 2,\n  prerelease = 4,\n  tag = 8\n}\n","export enum SuggestionStatus {\n  BadRequest = '400 bad request',\n  NotAuthorized = '401 not authorized',\n  Forbidden = '403 forbidden',\n  NotFound = 'package not found',\n  InternalServerError = '500 internal server error',\n  NotSupported = 'not supported',\n  ConnectionRefused = 'connection refused',\n  Invalid = 'invalid entry',\n  NoMatch = 'no match',\n  Satisfies = 'satisfies',\n  Latest = 'latest',\n  LatestIsPrerelease = 'latest prerelease',\n  Fixed = 'fixed'\n}","import {\n  SuggestionFactory,\n  TPackageSuggestion,\n  SuggestionStatus,\n  SuggestionFlags\n} from \"core.suggestions\";\n\nimport { VersionHelpers } from \"core.packages\";\n\nexport function createSuggestions(\n  versionRange: string,\n  releases: string[],\n  prereleases: string[],\n  suggestedLatestVersion: string = null\n): Array<TPackageSuggestion> {\n  const { maxSatisfying, compareLoose } = require(\"semver\");\n  const suggestions: Array<TPackageSuggestion> = [];\n\n  // check for a release\n  let satisfiesVersion = maxSatisfying(\n    releases,\n    versionRange,\n    VersionHelpers.loosePrereleases\n  );\n  if (!satisfiesVersion && versionRange.indexOf('-') > -1) {\n    // lookup prereleases\n    satisfiesVersion = maxSatisfying(\n      prereleases,\n      versionRange,\n      VersionHelpers.loosePrereleases\n    );\n  }\n\n  // get the latest release\n  const latestVersion = suggestedLatestVersion || releases[releases.length - 1];\n  const isLatest = latestVersion === satisfiesVersion;\n\n  const noSuggestionNeeded = versionRange.includes(satisfiesVersion) ||\n    versionRange.includes(suggestedLatestVersion);\n\n  if (releases.length === 0 && prereleases.length === 0)\n    // no match\n    suggestions.push(createNoMatch())\n  else if (!satisfiesVersion)\n    // no match\n    suggestions.push(\n      createNoMatch(),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    )\n  else if (isLatest && noSuggestionNeeded)\n    // latest\n    suggestions.push(createMatchesLatest(versionRange));\n  else if (isLatest)\n    suggestions.push(\n      // satisfies latest\n      createSatisifiesLatest(),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    );\n  else if (satisfiesVersion && VersionHelpers.isFixedVersion(versionRange))\n    suggestions.push(\n      // fixed\n      createFixedStatus(versionRange),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    );\n  else if (satisfiesVersion)\n    suggestions.push(\n      // satisfies >x.y.z <x.y.z\n      createSuggestion(\n        SuggestionStatus.Satisfies,\n        satisfiesVersion,\n        noSuggestionNeeded ?\n          SuggestionFlags.status :\n          SuggestionFlags.release\n      ),\n      // suggest latestVersion\n      createLatest(latestVersion),\n    );\n\n  // roll up prereleases\n  const maxSatisfyingPrereleases = VersionHelpers.filterPrereleasesGtMinRange(\n    versionRange,\n    prereleases\n  ).sort(compareLoose);\n\n  // group prereleases (latest first)\n  const taggedVersions = VersionHelpers.extractTaggedVersions(maxSatisfyingPrereleases);\n  for (let index = taggedVersions.length - 1; index > -1; index--) {\n    const pvn = taggedVersions[index];\n    if (pvn.name === 'latest') break;\n    if (pvn.version === satisfiesVersion) break;\n    if (pvn.version === latestVersion) break;\n    if (versionRange.includes(pvn.version)) break;\n\n    suggestions.push({\n      name: pvn.name,\n      version: pvn.version,\n      flags: SuggestionFlags.prerelease\n    });\n  }\n\n  return suggestions;\n}\n\nexport function createFromHttpStatus(status: number | string): TPackageSuggestion {\n\n  if (status == 400)\n    return SuggestionFactory.createBadRequest();\n  else if (status == 401)\n    return SuggestionFactory.createNotAuthorized();\n  else if (status == 403)\n    return SuggestionFactory.createForbidden();\n  else if (status == 404)\n    return SuggestionFactory.createNotFound();\n  else if (status == 500)\n    return SuggestionFactory.createInternalServerError();\n\n  return null;\n}\n\nexport function createNotFound(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NotFound,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createInternalServerError(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.InternalServerError,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createConnectionRefused(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.ConnectionRefused,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createForbidden(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.Forbidden,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createNotAuthorized(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NotAuthorized,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createBadRequest(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.BadRequest,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createInvalid(requestedVersion: string): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.Invalid,\n    version: requestedVersion,\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createNotSupported(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NotSupported,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createNoMatch(): TPackageSuggestion {\n  return {\n    name: SuggestionStatus.NoMatch,\n    version: '',\n    flags: SuggestionFlags.status\n  };\n}\n\nexport function createLatest(requestedVersion?: string): TPackageSuggestion {\n  const isPrerelease = requestedVersion && requestedVersion.indexOf('-') !== -1;\n\n  const name = isPrerelease ?\n    SuggestionStatus.LatestIsPrerelease :\n    SuggestionStatus.Latest;\n\n  // treats requestedVersion as latest version\n  // if no requestedVersion then uses the 'latest' tag instead\n  return {\n    name,\n    version: requestedVersion || 'latest',\n    flags:\n      isPrerelease ?\n        SuggestionFlags.prerelease :\n        requestedVersion ?\n          SuggestionFlags.release :\n          SuggestionFlags.tag\n  };\n}\n\nexport function createMatchesLatest(latestVersion: string): TPackageSuggestion {\n  const isPrerelease = latestVersion && latestVersion.indexOf('-') !== -1;\n\n  const name = isPrerelease ?\n    SuggestionStatus.LatestIsPrerelease :\n    SuggestionStatus.Latest;\n\n  return {\n    name,\n    version: isPrerelease ? latestVersion : '',\n    flags: SuggestionFlags.status\n  };\n\n\n}\n\nexport function createSatisifiesLatest(): TPackageSuggestion {\n  return createSuggestion(\n    SuggestionStatus.Satisfies,\n    'latest',\n    SuggestionFlags.status\n  )\n}\n\nexport function createFixedStatus(version: string): TPackageSuggestion {\n  return createSuggestion(\n    SuggestionStatus.Fixed,\n    version,\n    SuggestionFlags.status\n  );\n}\n\nexport function createSuggestion(\n  name: string, version: string, flags: SuggestionFlags\n): TPackageSuggestion {\n  return { name, version, flags };\n}","import { basename } from 'path';\nimport * as  minimatch from 'minimatch';\n\nimport { PackageResponse, VersionHelpers } from 'core.packages';\n\nimport { ISuggestionProvider } from './definitions/iSuggestionProvider';\n\nexport function defaultReplaceFn(packageResponse: PackageResponse, newVersion: string): string {\n  return VersionHelpers.formatWithExistingLeading(\n    packageResponse.requested.version,\n    newVersion\n  );\n}\n\nexport function filtersProvidersByFileName(\n  fileName: string,\n  providers: Array<ISuggestionProvider>\n): Array<ISuggestionProvider> {\n\n  const filename = basename(fileName);\n\n  const filtered = providers.filter(\n    provider => minimatch(filename, provider.config.fileMatcher.pattern)\n  );\n\n  if (filtered.length === 0) return [];\n\n  return filtered;\n}","import {\n  SuggestionFactory,\n  SuggestionStatus,\n  SuggestionFlags\n} from 'core.suggestions';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"createFromHttpStatus\": {\n\n    \"returns suggestions from implemented http statuses\": () => {\n\n      const tests = [\n        {\n          testStatus: 401,\n          expected: {\n            name: '401 not authorized',\n            version: '',\n            flags: SuggestionFlags.status\n          }\n        },\n        {\n          testStatus: 404,\n          expected: {\n            name: 'package not found',\n            version: '',\n            flags: SuggestionFlags.status\n          }\n        }\n      ]\n\n      tests.forEach(\n        test => {\n          const actual = SuggestionFactory.createFromHttpStatus(test.testStatus)\n          assert.deepEqual(actual, test.expected)\n        }\n      )\n\n    },\n\n    \"returns null when http status not implemented\": () => {\n      const actual = SuggestionFactory.createFromHttpStatus(501)\n      assert.deepEqual(actual, null)\n    }\n\n  },\n\n}","import {\n  SuggestionFactory,\n  SuggestionStatus,\n  SuggestionFlags\n} from 'core.suggestions';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"createLatest\": {\n\n    \"when version param is undefined then returns 'latest' tagged package suggestion\": () => {\n      const actual = SuggestionFactory.createLatest()\n      assert.deepEqual(\n        actual,\n        {\n          name: SuggestionStatus.Latest,\n          version: SuggestionStatus.Latest,\n          flags: SuggestionFlags.tag\n        });\n    },\n\n    \"when version param is a release then returns 'latest' version package suggestion\": () => {\n      const testRelease = '1.0.0';\n      const actual = SuggestionFactory.createLatest(testRelease)\n      assert.deepEqual(\n        actual,\n        {\n          name: SuggestionStatus.Latest,\n          version: testRelease,\n          flags: SuggestionFlags.release\n        });\n    },\n\n    \"when version param is a prerelease then returns 'latest' version package suggestion\": () => {\n      const testRelease = '1.0.0-beta.1';\n      const actual = SuggestionFactory.createLatest(testRelease)\n      assert.deepEqual(\n        actual,\n        {\n          name: SuggestionStatus.LatestIsPrerelease,\n          version: testRelease,\n          flags: SuggestionFlags.prerelease\n        });\n    },\n\n  },\n\n}","import {\n  SuggestionFactory,\n  SuggestionStatus,\n  SuggestionFlags\n} from 'core.suggestions';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"returns PackageVersionStatus.nomatch\": {\n\n    \"when releases and prereleases are empty\": () => {\n      const expected = [\n        {\n          name: SuggestionStatus.NoMatch,\n          version: '',\n          flags: SuggestionFlags.status\n        }\n      ]\n\n      const testRange = '*'\n      const testReleases = []\n      const testPrereleases = []\n      const results = SuggestionFactory.createSuggestions(\n        testRange,\n        testReleases,\n        testPrereleases\n      );\n      assert.equal(results.length, expected.length);\n      assert.equal(results[0].name, expected[0].name);\n      assert.equal(results[0].version, expected[0].version);\n      assert.equal(results[0].flags, expected[0].flags);\n    },\n\n    \"when releases or prereleases do not contain a matching version\": () => {\n\n      const expected = [\n        {\n          name: SuggestionStatus.NoMatch,\n          version: '',\n          flags: SuggestionFlags.status\n        },\n        {\n          name: SuggestionStatus.Latest,\n          version: '1.0.0',\n          flags: SuggestionFlags.release\n        }\n      ]\n\n      const testRange = '2.0.0'\n      const testReleases = ['1.0.0']\n      const testPrereleases = ['1.1.0-alpha.1']\n      const results = SuggestionFactory.createSuggestions(\n        testRange,\n        testReleases,\n        testPrereleases\n      );\n      assert.deepEqual(results, expected);\n    },\n\n    \"when using a release range\": () => {\n      const expected = [\n        {\n          name: SuggestionStatus.NoMatch,\n          version: '',\n          flags: SuggestionFlags.status\n        },\n        {\n          name: SuggestionStatus.Latest,\n          version: '1.0.3-1.2.3',\n          flags: SuggestionFlags.release\n        }\n      ]\n\n      const testRange = '^1.0.0'\n      const testReleases = ['0.0.6']\n      const testPrereleases = ['1.0.1-1.2.3', '1.0.2-1.2.3', '1.0.3-1.2.3']\n      const results = SuggestionFactory.createSuggestions(\n        testRange,\n        testReleases,\n        testPrereleases,\n        '1.0.3-1.2.3'\n      );\n      assert.equal(results.length, expected.length);\n    },\n\n  },\n\n  \"returns PackageVersionStatus.Latest\": {\n\n    \"when versionRange matches the latest release\": () => {\n\n      const expected = [\n        {\n          name: SuggestionStatus.Latest,\n          version: '',\n          flags: SuggestionFlags.status\n        },\n        {\n          name: 'next',\n          version: '4.0.0-next',\n          flags: SuggestionFlags.prerelease\n        }\n      ]\n\n      const testReleases = ['1.0.0', '2.0.0', '2.1.0', '3.0.0']\n      const testPrereleases = ['1.1.0-alpha.1', '4.0.0-next']\n      const testRanges = [\n        '3.0.0',\n        '^3.0.0'\n      ]\n\n      testRanges.forEach(testRange => {\n        const results = SuggestionFactory.createSuggestions(\n          testRange,\n          testReleases,\n          testPrereleases\n        );\n        assert.deepEqual(results, expected);\n      })\n\n    },\n\n    \"when suggestedVersion is the latest release\": () => {\n      const testSuggestedVersion = '5.0.0';\n\n      const expected = [\n        {\n          name: SuggestionStatus.Latest,\n          version: '',\n          flags: SuggestionFlags.status\n        }\n      ]\n\n      const testReleases = ['0.0.5', '2.0.0', '5.0.0']\n      const testPrereleases = ['1.1.0-alpha.1', '4.0.0-next']\n      const testRange = testSuggestedVersion\n\n      const results = SuggestionFactory.createSuggestions(\n        testRange,\n        testReleases,\n        testPrereleases,\n        testSuggestedVersion\n      );\n      assert.deepEqual(results, expected);\n    },\n\n  },\n\n  \"returns PackageVersionStatus.LatestIsPrerelease\": {\n\n    \"when suggestedVersion is not the latest release\": () => {\n      const testDistTagLatest = '4.0.0-next';\n\n      const expected = [\n        {\n          name: SuggestionStatus.NoMatch,\n          version: '',\n          flags: SuggestionFlags.status\n        },\n        {\n          name: SuggestionStatus.LatestIsPrerelease,\n          version: '4.0.0-next',\n          flags: SuggestionFlags.prerelease\n        }\n      ]\n\n      const testReleases = ['0.0.5', '0.0.6']\n      const testPrereleases = ['1.1.0-alpha.1', '4.0.0-next']\n      const testRange = '4.0.0'\n\n      const results = SuggestionFactory.createSuggestions(\n        testRange,\n        testReleases,\n        testPrereleases,\n        testDistTagLatest\n      );\n      assert.deepEqual(results, expected);\n    },\n\n  },\n\n  \"returns PackageVersionStatus.satisfies\": {\n\n    \"when versionRange satisfies the latest release\": () => {\n\n      const expected = [\n        {\n          name: SuggestionStatus.Satisfies,\n          version: 'latest',\n          flags: SuggestionFlags.status\n        },\n        {\n          name: SuggestionStatus.Latest,\n          version: '3.0.0',\n          flags: SuggestionFlags.release\n        },\n        {\n          name: 'next',\n          version: '4.0.0-next',\n          flags: SuggestionFlags.prerelease\n        }\n      ]\n\n      const testReleases = ['1.0.0', '2.0.0', '2.1.0', '3.0.0']\n      const testPrereleases = ['1.1.0-alpha.1', '4.0.0-next']\n\n      const results = SuggestionFactory.createSuggestions(\n        '>=2',\n        testReleases,\n        testPrereleases\n      );\n\n      assert.deepEqual(results, expected);\n    },\n\n    \"when versionRange satisfies the latest tagged release\": () => {\n      const testLatest = '7.10.1'\n\n      const expected = [\n        {\n          name: SuggestionStatus.Satisfies,\n          version: 'latest',\n          flags: SuggestionFlags.status\n        },\n        {\n          name: SuggestionStatus.Latest,\n          version: testLatest,\n          flags: SuggestionFlags.release\n        },\n        {\n          name: 'next',\n          version: '8.0.0-next',\n          flags: SuggestionFlags.prerelease\n        }\n      ]\n\n      const testReleases = ['1.0.0', '2.0.0', '2.1.0', '7.9.6', '7.9.7', testLatest]\n      const testPrereleases = ['1.1.0-alpha.1', '8.0.0-next']\n\n      const results = SuggestionFactory.createSuggestions(\n        '^7.9.1',\n        testReleases,\n        testPrereleases,\n        testLatest\n      );\n\n      assert.deepEqual(results, expected);\n    },\n    \"when versionRange satisfies a range in the releases\": () => {\n\n      const expected = [\n        {\n          name: SuggestionStatus.Satisfies,\n          version: '2.1.0',\n          flags: SuggestionFlags.release\n        },\n        {\n          name: SuggestionStatus.Latest,\n          version: '3.0.0',\n          flags: SuggestionFlags.release\n        },\n        {\n          name: 'next',\n          version: '4.0.0-next',\n          flags: SuggestionFlags.prerelease\n        }\n      ]\n\n      const testReleases = ['1.0.0', '2.0.0', '2.1.0', '3.0.0']\n      const testPrereleases = ['1.1.0-alpha.1', '4.0.0-next']\n      const testRanges = [\n        '2.*'\n      ]\n\n      testRanges.forEach(testRange => {\n        const results = SuggestionFactory.createSuggestions(\n          testRange,\n          testReleases,\n          testPrereleases\n        );\n        assert.deepEqual(results, expected);\n      })\n\n    },\n\n  },\n\n}","export * from './test/httpClientRequest.tests';\nexport * from './test/jsonClientRequest.tests';\nexport * from './test/processClientRequest.tests';","export * from './src/definitions/iXhrResponse';\nexport * from './src/definitions/iPromiseSpawn';\n\nexport * from './src/httpClient';\nexport * from './src/httpClientFactory';\nexport * from './src/processClient';\nexport * from './src/processClientFactory';","import { KeyStringDictionary } from 'core.generics';\nimport { ILogger } from 'core.logging';\nimport {\n  AbstractCachedRequest,\n  HttpClientResponse,\n  IHttpClient,\n  HttpClientRequestMethods,\n  HttpRequestOptions,\n  UrlHelpers,\n} from 'core.clients';\n\nimport { IXhrResponse } from './definitions/iXhrResponse';\n\n\nimport { XHRRequest } from 'request-light'\n\nexport class HttpClient extends AbstractCachedRequest<number, string>\n  implements IHttpClient {\n\n  logger: ILogger;\n\n  options: HttpRequestOptions;\n\n  xhr: XHRRequest;\n\n  constructor(xhr: XHRRequest, requestOptions: HttpRequestOptions, requestLogger: ILogger) {\n    super(requestOptions.caching);\n    this.logger = requestLogger;\n    this.options = requestOptions;\n    this.xhr = xhr;\n  }\n\n  async request(\n    method: HttpClientRequestMethods,\n    baseUrl: string,\n    query: KeyStringDictionary = {},\n    headers: KeyStringDictionary = {}\n  ): Promise<HttpClientResponse> {\n\n    const url = UrlHelpers.createUrl(baseUrl, query);\n    const cacheKey = method + '_' + url;\n\n    if (this.cache.cachingOpts.duration > 0 &&\n      this.cache.hasExpired(cacheKey) === false) {\n      const cachedResp = this.cache.get(cacheKey);\n      if (cachedResp.rejected) return Promise.reject(cachedResp);\n      return Promise.resolve(cachedResp);\n    }\n\n    return this.xhr({\n      url,\n      type: method,\n      headers,\n      strictSSL: this.options.http.strictSSL\n    })\n      .then((response: IXhrResponse) => {\n        return this.createCachedResponse(\n          cacheKey,\n          response.status,\n          response.responseText,\n          false\n        );\n      })\n      .catch((response: IXhrResponse) => {\n        const result = this.createCachedResponse(\n          cacheKey,\n          response.status,\n          response.responseText,\n          true\n        );\n        return Promise.reject<HttpClientResponse>(result);\n      });\n  }\n\n}","import {\n  HttpRequestOptions,\n  IHttpClient,\n  IJsonHttpClient,\n  JsonHttpClient\n} from \"core.clients\";\nimport { ILogger } from \"core.logging\";\nimport { HttpClient } from \"./httpClient\";\n\nexport function createHttpClient(\n  options: HttpRequestOptions, logger: ILogger\n): IHttpClient {\n  return new HttpClient(require('request-light').xhr, options, logger);\n}\n\nexport function createJsonClient(\n  options: HttpRequestOptions, logger: ILogger\n): IJsonHttpClient {\n  return new JsonHttpClient(createHttpClient(options, logger));\n}","import {\n  AbstractCachedRequest,\n  ClientResponseSource,\n  ProcessClientResponse,\n  IProcessClient,\n  ICachingOptions\n} from 'core.clients';\nimport { ILogger } from 'core.logging';\n\nimport { IPromiseSpawnFn } from './definitions/iPromiseSpawn';\n\nexport class ProcessClient extends AbstractCachedRequest<string, string>\n  implements IProcessClient {\n\n  promiseSpawn: IPromiseSpawnFn;\n\n  logger: ILogger;\n\n  constructor(promiseSpawnFn: IPromiseSpawnFn, processOpts: ICachingOptions, processLogger: ILogger) {\n    super(processOpts);\n    this.logger = processLogger;\n    this.promiseSpawn = promiseSpawnFn;\n  }\n\n  async request(\n    cmd: string, args: Array<string>, cwd: string\n  ): Promise<ProcessClientResponse> {\n\n    const cacheKey = `${cmd} ${args.join(' ')}`;\n\n    if (this.cache.cachingOpts.duration > 0 &&\n      this.cache.hasExpired(cacheKey) === false) {\n      this.logger.debug('cached - %s', cacheKey);\n\n      const cachedResp = this.cache.get(cacheKey);\n      if (cachedResp.rejected) return Promise.reject(cachedResp);\n      return Promise.resolve(cachedResp);\n    }\n\n    this.logger.debug('executing - %s', cacheKey);\n\n    return this.promiseSpawn(cmd, args, { cwd, stdioString: true })\n      .then(result => {\n        return this.createCachedResponse(\n          cacheKey,\n          result.code,\n          result.stdout,\n          false,\n          ClientResponseSource.local\n        );\n      }).catch(error => {\n        const result = this.createCachedResponse(\n          cacheKey,\n          error.code,\n          error.message,\n          true,\n          ClientResponseSource.local\n        );\n        return Promise.reject<ProcessClientResponse>(result);\n      });\n\n  }\n\n}","import { IProcessClient, ICachingOptions } from \"core.clients\";\nimport { ILogger } from \"core.logging\";\nimport { ProcessClient } from \"./processClient\";\n\nexport function createProcessClient(\n  cachingOpts: ICachingOptions, logger: ILogger\n): IProcessClient {\n\n  return new ProcessClient(require('@npmcli/promise-spawn'), cachingOpts, logger);\n}\n\n","import { LoggerStub } from 'test.core.logging'\n\nimport { ILogger } from 'core.logging';\nimport { KeyStringDictionary } from 'core.generics'\nimport {\n  ClientResponseSource,\n  UrlHelpers,\n  HttpClientRequestMethods,\n  HttpRequestOptions,\n  ICachingOptions,\n  IHttpOptions,\n  CachingOptions,\n  HttpOptions\n} from 'core.clients'\n\nimport { HttpClient } from 'infrastructure.clients'\n\nimport { RequestLightStub } from './stubs/requestLightStub';\n\nconst {\n  mock,\n  instance,\n  when,\n  capture,\n  anything\n} = require('ts-mockito');\n\nconst assert = require('assert')\n\nlet cachingOptsMock: ICachingOptions;\nlet httpOptsMock: IHttpOptions;\nlet loggerMock: ILogger;\nlet requestLightMock: RequestLightStub;\n\nlet rut: HttpClient;\n\nexport const HttpRequestTests = {\n\n  beforeEach: () => {\n    cachingOptsMock = mock(CachingOptions);\n    httpOptsMock = mock(HttpOptions);\n    loggerMock = mock(LoggerStub);\n    requestLightMock = mock(RequestLightStub);\n\n    rut = new HttpClient(\n      instance(requestLightMock).xhr,\n      <HttpRequestOptions>{\n        caching: instance(cachingOptsMock),\n        http: instance(httpOptsMock)\n      },\n      instance(loggerMock)\n    );\n\n    when(cachingOptsMock.duration).thenReturn(30000);\n    when(httpOptsMock.strictSSL).thenReturn(true);\n  },\n\n  \"request\": {\n\n    \"passes options to xhr\": async () => {\n\n      const testFlags = [\n        { testStrictSSL: true, testDuration: 3000 },\n        { testStrictSSL: false, testDuration: 0 },\n      ];\n\n      when(requestLightMock.xhr(anything()))\n        .thenResolve({\n          responseText: '{}',\n          status: 200\n        })\n\n      const promised = []\n\n      testFlags.forEach(async (test, testIndex) => {\n        when(cachingOptsMock.duration).thenReturn(test.testDuration);\n        when(httpOptsMock.strictSSL).thenReturn(test.testStrictSSL);\n\n        const rut = new HttpClient(\n          instance(requestLightMock).xhr,\n          <HttpRequestOptions>{\n            caching: instance(cachingOptsMock),\n            http: instance(httpOptsMock)\n          },\n          instance(loggerMock)\n        );\n\n        promised.push(\n          rut.request(HttpClientRequestMethods.get, 'anywhere')\n            .then(() => {\n              const [actualOpts] = capture(requestLightMock.xhr).byCallIndex(testIndex);\n              assert.equal(actualOpts.strictSSL, test.testStrictSSL);\n            })\n        )\n      })\n\n      return Promise.all(promised)\n    },\n\n    \"generates the expected url with query params\": async () => {\n      const testUrl = 'https://test.url.example/path';\n\n      const testQueryParams = [\n        {},\n        { param1: 1, param2: 2 }\n      ]\n\n      when(requestLightMock.xhr(anything()))\n        .thenResolve({\n          status: 200,\n          responseText: null\n        })\n\n      await Promise.all(\n\n        testQueryParams.map(\n          async function (query: KeyStringDictionary, index) {\n            const expectedUrl = UrlHelpers.createUrl(testUrl, query);\n\n            await rut.request(\n              HttpClientRequestMethods.get,\n              testUrl,\n              query\n            ).then(() => {\n              const [actualOpts] = capture(requestLightMock.xhr).byCallIndex(index);\n              assert.equal(actualOpts.url, expectedUrl);\n              assert.equal(actualOpts.type, HttpClientRequestMethods.get);\n            })\n\n          }\n        )\n      )\n\n    },\n\n    \"caches url response on success\": async () => {\n      const testUrl = 'https://test.url.example/path';\n      const testQueryParams = {}\n      const testResponse = {\n        source: ClientResponseSource.remote,\n        status: 200,\n        responseText: \"cached test\",\n      };\n\n      const expectedCacheData = {\n        source: ClientResponseSource.cache,\n        status: testResponse.status,\n        data: testResponse.responseText,\n        rejected: false\n      }\n\n      when(requestLightMock.xhr(anything())).thenResolve(testResponse)\n\n      await rut.request(\n        HttpClientRequestMethods.get,\n        testUrl,\n        testQueryParams\n      ).then(response => {\n        const cachedData = rut.cache.get('GET_' + testUrl);\n        assert.deepEqual(cachedData, expectedCacheData);\n      })\n    },\n\n    \"caches url response when rejected\": async () => {\n      const testUrl = 'https://test.url.example/path';\n      const testQueryParams = {}\n      const testResponse = {\n        status: 404,\n        responseText: \"not found\",\n        source: ClientResponseSource.remote\n      };\n\n      const expectedCacheData = {\n        status: testResponse.status,\n        data: testResponse.responseText,\n        source: ClientResponseSource.cache,\n        rejected: true,\n      }\n\n      when(requestLightMock.xhr(anything())).thenResolve(testResponse)\n\n      // first request\n      await rut.request(\n        HttpClientRequestMethods.get,\n        testUrl,\n        testQueryParams\n      ).catch(response => {\n        const cachedData = rut.cache.get('GET_' + testUrl);\n        assert.deepEqual(cachedData, expectedCacheData);\n      })\n\n      // accessing a cached rejection should also reject\n      await rut.request(\n        HttpClientRequestMethods.get,\n        testUrl,\n        testQueryParams\n      ).catch(response => {\n        const cachedData = rut.cache.get('GET_' + testUrl);\n        assert.deepEqual(cachedData, expectedCacheData);\n      })\n\n    },\n\n    \"does not cache when duration is 0\": async () => {\n      const testUrl = 'https://test.url.example/path';\n      const testQueryParams = {}\n      const expectedCacheData = undefined;\n\n      when(requestLightMock.xhr(anything()))\n        .thenResolve({\n          status: 200,\n          responseText: JSON.stringify({ \"message\": \"cached test\" })\n        });\n\n      when(cachingOptsMock.duration).thenReturn(0);\n      when(httpOptsMock.strictSSL).thenReturn(true);\n\n      await rut.request(\n        HttpClientRequestMethods.get,\n        testUrl,\n        testQueryParams\n      ).then(response => {\n        const cachedData = rut.cache.get('GET_' + testUrl);\n        assert.equal(cachedData, expectedCacheData);\n      })\n    },\n\n  },\n\n};","import { LoggerStub } from 'test.core.logging'\n\nimport { ILogger } from 'core.logging'\nimport {\n  ClientResponseSource,\n  HttpClientRequestMethods,\n  JsonHttpClient,\n  CachingOptions,\n  HttpOptions,\n  IHttpOptions,\n  ICachingOptions,\n  IHttpClient,\n} from 'core.clients'\n\nimport { HttpClient } from 'infrastructure.clients';\n\nconst { mock, instance, when, anything } = require('ts-mockito');\n\nconst assert = require('assert')\n\nlet cachingOptsMock: ICachingOptions;\nlet httpOptsMock: IHttpOptions;\nlet httpClientMock: IHttpClient;\nlet loggerMock: ILogger;\n\nexport const JsonClientRequestTests = {\n\n  beforeEach: () => {\n    cachingOptsMock = mock(CachingOptions);\n    httpOptsMock = mock(HttpOptions);\n    loggerMock = mock(LoggerStub);\n    httpClientMock = mock(HttpClient);\n\n    when(cachingOptsMock.duration).thenReturn(30000);\n    when(httpOptsMock.strictSSL).thenReturn(true);\n  },\n\n  \"requestJson\": {\n\n    \"returns response as an object\": async () => {\n      const testUrl = 'https://test.url.example/path';\n      const testQueryParams = {}\n      const testResponse = {\n        source: ClientResponseSource.remote,\n        status: 404,\n        data: '{ \"item1\": \"not found\" }',\n      }\n\n      const expectedCacheData = {\n        source: ClientResponseSource.remote,\n        status: testResponse.status,\n        data: JSON.parse(testResponse.data),\n      }\n\n      when(\n        httpClientMock.request(\n          anything(),\n          anything(),\n          anything(),\n          anything()\n        )\n      ).thenResolve(testResponse)\n\n      const rut = new JsonHttpClient(instance(httpClientMock));\n      await rut.request(\n        HttpClientRequestMethods.get,\n        testUrl,\n        testQueryParams\n      ).then(response => {\n        assert.deepEqual(response, expectedCacheData);\n      })\n    },\n\n  },\n\n};","import { LoggerStub } from 'test.core.logging';\n\nimport { ILogger } from 'core.logging';\nimport { ClientResponseSource, CachingOptions, ICachingOptions } from 'core.clients'\n\nimport { ProcessClient } from 'infrastructure.clients'\nimport { ProcessSpawnStub } from './stubs/processSpawnStub';\n\nconst { mock, instance, when, anything } = require('ts-mockito');\n\nconst assert = require('assert')\n\nlet psMock: ProcessSpawnStub;\nlet cachingMock: ICachingOptions;\nlet loggerMock: ILogger;\n\nexport const ProcessClientRequestTests = {\n\n  beforeEach: () => {\n    cachingMock = mock(CachingOptions)\n    loggerMock = mock(LoggerStub)\n    psMock = mock(ProcessSpawnStub)\n  },\n\n  \"requestJson\": {\n\n    \"returns <ProcessClientResponse> when error occurs\": async () => {\n\n      when(cachingMock.duration).thenReturn(30000)\n\n      when(psMock.promiseSpawn(anything(), anything(), anything()))\n        .thenReject({\n          code: \"ENOENT\",\n          message: \"spawn missing ENOENT\"\n        })\n\n      const rut = new ProcessClient(\n        instance(psMock).promiseSpawn,\n        instance(cachingMock),\n        instance(loggerMock)\n      );\n\n      return await rut.request(\n        'missing',\n        ['--ooppss'],\n        '/'\n      ).catch(response => {\n        assert.equal(response.status, \"ENOENT\")\n        assert.equal(response.data, \"spawn missing ENOENT\")\n      })\n\n    },\n\n    \"returns <ProcessClientResponse> and caches response\": async () => {\n      const testResponse = {\n        source: ClientResponseSource.local,\n        status: 0,\n        data: '123\\n',\n        rejected: false\n      }\n\n      const expectedCacheData = {\n        source: ClientResponseSource.cache,\n        status: testResponse.status,\n        data: testResponse.data,\n        rejected: false\n      }\n\n      when(psMock.promiseSpawn(anything(), anything(), anything()))\n        .thenResolve({\n          code: 0,\n          stdout: testResponse.data\n        })\n\n      when(cachingMock.duration).thenReturn(30000)\n\n      const rut = new ProcessClient(\n        instance(psMock).promiseSpawn,\n        instance(cachingMock),\n        instance(loggerMock)\n      )\n\n      await rut.request(\n        'echo',\n        ['123'],\n        'd:\\\\'\n      ).then(response => {\n        assert.deepEqual(response, testResponse)\n      })\n\n      await rut.request(\n        'echo',\n        ['123'],\n        'd:\\\\'\n      ).then(response => {\n        assert.deepEqual(response, expectedCacheData)\n      })\n\n    },\n\n    \"doesn't cache when duration is 0\": async () => {\n      const testKey = 'echo 123';\n      const testResponse = {\n        source: ClientResponseSource.local,\n        status: 0,\n        data: '123\\n',\n        rejected: false,\n      }\n\n      when(psMock.promiseSpawn(anything(), anything(), anything()))\n        .thenResolve({\n          code: 0,\n          stdout: testResponse.data\n        })\n\n      when(cachingMock.duration).thenReturn(0)\n\n      const rut = new ProcessClient(\n        instance(psMock).promiseSpawn,\n        instance(cachingMock),\n        instance(loggerMock)\n      )\n\n      await rut.request(\n        'echo',\n        ['123'],\n        'd:\\\\'\n      ).then(response => {\n        assert.deepEqual(response, testResponse)\n      })\n\n      await rut.request(\n        'echo',\n        ['123'],\n        'd:\\\\'\n      ).then(response => {\n        assert.deepEqual(response, testResponse)\n\n        const cachedData = rut.cache.get(testKey);\n        assert.equal(cachedData, undefined);\n      })\n\n    },\n\n  },\n\n};","import { TPromiseSpawnOptions, TPromiseSpawnResult } from \"infrastructure.clients\";\n\nexport class ProcessSpawnStub {\n\n  promiseSpawn(\n    cmd: string,\n    args?: Array<string>,\n    opts?: TPromiseSpawnOptions,\n    // extra?: any\n  ): Promise<TPromiseSpawnResult> {\n    return Promise.resolve() as any;\n  }\n\n}","import { IXhrResponse } from \"infrastructure.clients\";\n\nexport class RequestLightStub {\n  xhr(opts): Promise<IXhrResponse> {\n    return Promise.resolve({\n      responseText: '',\n      status: 0,\n      headers: {}\n    });\n  }\n}","export * from './test/vscodeConfig.tests';","export * from './src/definitions/iVsCodeConfig';\nexport * from './src/vscodeConfig';","import { IConfig, IFrozenOptions } from 'core.configuration';\n\nimport { IVsCodeWorkspace } from './definitions/iVsCodeConfig';\n\n// allows vscode configuration to be defrosted\n// Useful for accessing hot changing values from settings.json\n// Stays frozen until defrost() is called and then refrosts\nexport class VsCodeConfig implements IFrozenOptions {\n\n  protected frozen: IConfig;\n\n  section: string;\n\n  workspace: IVsCodeWorkspace;\n\n  constructor(workspace: IVsCodeWorkspace, section: string) {\n    this.workspace = workspace;\n    this.section = section;\n    this.frozen = null;\n  }\n\n  protected get repo(): IConfig {\n    return this.workspace.getConfiguration(this.section);\n  }\n\n  get<T>(key: string): T {\n    if (this.frozen === null) {\n      this.frozen = this.repo;\n    }\n\n    return this.frozen.get(key);\n  }\n\n  defrost() {\n    this.frozen = null;\n  }\n\n}","import { IVsCodeWorkspace } from 'infrastructure.configuration';\nimport { IConfig } from 'core.configuration';\n\nexport class VsCodeWorkspaceStub implements IVsCodeWorkspace {\n  getConfiguration(section: any): IConfig {\n    return {\n      get: (key: string) => { throw new Error(\"Not implemented\"); }\n    };\n  }\n}\n","import { VsCodeConfig } from 'infrastructure.configuration'\nimport { IVsCodeWorkspace } from 'infrastructure.configuration';\n\nimport { VsCodeWorkspaceStub } from './stubs/vsCodeWorkspaceStub';\n\nconst assert = require('assert')\nconst { mock, instance, when } = require('ts-mockito');\n\nlet workspaceMock: IVsCodeWorkspace;\n\nexport const VsCodeFrozenConfigTests = {\n\n  beforeAll: () => {\n    workspaceMock = mock(VsCodeWorkspaceStub);\n  },\n\n  \"get\": {\n\n    \"accesses frozen repo after first call\": () => {\n      const testSection = 'testsection'\n      const testKey = 'some_property';\n      let expectedFrozenValue = 'test value';\n\n      when(workspaceMock.getConfiguration(testSection))\n        .thenReturn({\n          get: section => expectedFrozenValue\n        })\n\n      // get hot value\n      const cut = new VsCodeConfig(instance(workspaceMock), testSection);\n      const first = cut.get(testKey);\n      assert.equal(first, expectedFrozenValue)\n\n      // change value\n      when(workspaceMock.getConfiguration(testSection)).thenReturn('hot value')\n\n      // should still return frozen value\n      const actualFrozen = cut.get(testKey);\n\n      assert.equal(actualFrozen, expectedFrozenValue)\n    },\n\n    \"returns hot value after defrost is called\": () => {\n      const testSection = 'testsection'\n      const testKey = 'some_property';\n      let initialValue = 'test value';\n\n      when(workspaceMock.getConfiguration(testSection))\n        .thenReturn({\n          get: section => initialValue\n        })\n\n      // get hot value\n      const cut = new VsCodeConfig(instance(workspaceMock), testSection);\n      const first = cut.get(testKey);\n      assert.equal(first, initialValue)\n\n      // change expected hot value\n      const expectedHotValue = 'hot value';\n      when(workspaceMock.getConfiguration(testSection))\n        .thenReturn({\n          get: section => expectedHotValue\n        })\n\n      // should return hot value\n      cut.defrost();\n      const actualFrozen = cut.get(testKey);\n\n      assert.equal(actualFrozen, expectedHotValue)\n    }\n\n  }\n\n}","import parseVersionSpec from './test/dotnetUtils/parseVersionSpec.tests';\nexport const DotNetUtils = {\n  parseVersionSpec,\n}\n\nexport * from './test/clients/dotnetClient.tests';\nexport * from './test/clients/nugetResourceClient.tests';\n\n// Package Parser Tests\nimport createDependenciesFromXml from './test/dotnetXmlParserFactory/createDependenciesFromXml.tests';\n\nexport const DotnetParserTests = {\n  createDependenciesFromXml,\n}","export * from './src/clients/dotnetCli'\nexport * from './src/clients/nugetPackageClient'\nexport * from './src/clients/nugetResourceClient'\n\nexport * from './src/definitions/dotnet'\nexport * from './src/definitions/nuget'\nexport * from './src/definitions/iNugetOptions'\n\nexport * from './src/dotnetConfig'\nexport * from './src/dotnetSuggestionProvider'\nexport * from './src/dotnetUtils'\nexport * from './src/dotnetXmlParserFactory'\n\nexport * from './src/options/nugetOptions'\n\nexport * from './src/dotnetContainer'\n","import { ILogger } from 'core.logging';\nimport { UrlHelpers, IProcessClient } from 'core.clients';\nimport { DotNetSource } from '../definitions/dotnet';\nimport { DotNetConfig } from '../dotnetConfig';\n\nexport class DotNetCli {\n\n  config: DotNetConfig;\n\n  client: IProcessClient;\n\n  logger: ILogger;\n\n  constructor(config: DotNetConfig, client: IProcessClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchSources(cwd: string): Promise<Array<DotNetSource>> {\n\n    const promisedCli = this.client.request(\n      'dotnet',\n      ['nuget', 'list', 'source', '--format', 'short'],\n      cwd\n    );\n\n    return await promisedCli.then(result => {\n      const { data } = result;\n\n      // reject when data contains \"error\"\n      if (data.indexOf(\"error\") > -1) return Promise.reject(result);\n\n      // check we have some data\n      if (data.length === 0 || data.indexOf('E') === -1) {\n        return [];\n      }\n\n      // extract sources\n      const hasCrLf = data.indexOf(crLf) > 0;\n      const splitChar = hasCrLf ? crLf : '\\n';\n      let lines = data.split(splitChar);\n\n      // pop any blank entries\n      if (lines[lines.length - 1] === '') lines.pop();\n\n      return parseSourcesArray(lines).filter(s => s.enabled);\n    }).then(sources => {\n      // combine the sources where feed take precedent\n      const feedSources = convertFeedsToSources(this.config.nuget.sources);\n      return [\n        ...feedSources,\n        ...sources\n      ]\n    }).catch(error => {\n      // return the fallback source for dotnet clients < 5.5\n      return [\n        <DotNetSource>{\n          enabled: true,\n          machineWide: false,\n          protocol: UrlHelpers.RegistryProtocols.https,\n          url: this.config.fallbackNugetSource,\n        }\n      ]\n    })\n  }\n}\n\nconst crLf = '\\r\\n';\nfunction parseSourcesArray(lines: Array<string>): Array<DotNetSource> {\n  return lines.map(function (line) {\n    const enabled = line.substring(0, 1) === 'E';\n    const machineWide = line.substring(1, 2) === 'M';\n    const offset = machineWide ? 3 : 2;\n    const url = line.substring(offset);\n    const protocol = UrlHelpers.getProtocolFromUrl(url);\n    return {\n      enabled,\n      machineWide,\n      url,\n      protocol\n    };\n  });\n}\n\nfunction convertFeedsToSources(feeds: Array<string>): Array<DotNetSource> {\n  return feeds.map(function (url: string) {\n    const protocol = UrlHelpers.getProtocolFromUrl(url);\n    const machineWide = (protocol === UrlHelpers.RegistryProtocols.file);\n    return {\n      enabled: true,\n      machineWide,\n      url,\n      protocol\n    };\n  });\n}\n","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  DocumentFactory,\n  TPackageDocument,\n  PackageSourceTypes,\n  PackageVersionTypes,\n  TPackageRequest,\n  VersionHelpers,\n  IPackageClient,\n  ResponseFactory,\n} from 'core.packages';\n\nimport {\n  HttpClientResponse,\n  HttpClientRequestMethods,\n  UrlHelpers,\n  IJsonHttpClient,\n} from 'core.clients';\n\nimport { NuGetClientData } from '../definitions/nuget';\nimport { DotNetVersionSpec } from '../definitions/dotnet';\nimport { parseVersionSpec } from '../dotnetUtils';\nimport { DotNetConfig } from '../dotnetConfig';\n\nexport class NuGetPackageClient implements IPackageClient<NuGetClientData> {\n\n  config: DotNetConfig;\n\n  client: IJsonHttpClient;\n\n  logger: ILogger;\n\n  constructor(config: DotNetConfig, client: IJsonHttpClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchPackage(request: TPackageRequest<NuGetClientData>): Promise<TPackageDocument> {\n    const dotnetSpec = parseVersionSpec(request.package.version);\n    return this.fetchPackageRetry(request, dotnetSpec);\n  }\n\n  async fetchPackageRetry(\n    request: TPackageRequest<NuGetClientData>,\n    dotnetSpec: DotNetVersionSpec\n  ): Promise<TPackageDocument> {\n    const urls = request.clientData.serviceUrls;\n    const autoCompleteUrl = urls[request.attempt];\n\n    return this.createRemotePackageDocument(autoCompleteUrl, request, dotnetSpec)\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.debug(\n          \"Caught exception from %s: %O\",\n          PackageSourceTypes.Registry,\n          error\n        );\n\n        // increase the attempt number\n        request.attempt++;\n\n        // only retry if 404 and we have more urls to try\n        if (error.status === 404 && request.attempt < urls.length) {\n          // retry\n          return this.fetchPackageRetry(request, dotnetSpec)\n        }\n\n        const suggestion = SuggestionFactory.createFromHttpStatus(error.status);\n        if (suggestion != null) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            error,\n            [suggestion]\n          )\n        }\n\n        // unexpected\n        return Promise.reject(error);\n      });\n\n  }\n\n  async createRemotePackageDocument(\n    url: string,\n    request: TPackageRequest<NuGetClientData>,\n    dotnetSpec: DotNetVersionSpec\n  ): Promise<TPackageDocument> {\n\n    const query = {};\n    const headers = {};\n    const packageUrl = UrlHelpers.ensureEndSlash(url) + `${request.package.name}/index.json`;\n\n    return this.client.request(\n      HttpClientRequestMethods.get,\n      packageUrl,\n      query,\n      headers\n    )\n      .then(function (httpResponse) {\n\n        const { data } = httpResponse;\n\n        const source = PackageSourceTypes.Registry;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const packageInfo = data;\n\n        const response = {\n          source: httpResponse.source,\n          status: httpResponse.status,\n        };\n\n        // sanitize to semver only versions\n        const rawVersions = VersionHelpers.filterSemverVersions(packageInfo.versions);\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(rawVersions)\n\n        // four segment is not supported\n        if (dotnetSpec.spec && dotnetSpec.spec.hasFourSegments) {\n          return DocumentFactory.create(\n            PackageSourceTypes.Registry,\n            request,\n            httpResponse,\n            [],\n          )\n        }\n\n        // no match if null type\n        if (dotnetSpec.type === null) {\n          return DocumentFactory.createNoMatch(\n            providerName,\n            source,\n            PackageVersionTypes.Version,\n            requested,\n            ResponseFactory.createResponseStatus(httpResponse.source, 404),\n            // suggest the latest release if available\n            releases.length > 0 ? releases[releases.length - 1] : null,\n          )\n        }\n\n        const versionRange = dotnetSpec.resolvedVersion;\n\n        const resolved = {\n          name: requested.name,\n          version: versionRange,\n        };\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type: dotnetSpec.type,\n          requested,\n          resolved,\n          suggestions,\n        };\n      });\n  }\n\n}","import { ILogger } from 'core.logging';\nimport {\n  HttpClientResponse,\n  HttpClientRequestMethods,\n  IJsonHttpClient\n} from 'core.clients';\n\nimport { NugetServiceIndexResponse } from '../definitions/nuget';\nimport { DotNetSource } from '../definitions/dotnet';\n\nexport class NuGetResourceClient {\n\n  logger: any;\n\n  client: IJsonHttpClient;\n\n  constructor(client: IJsonHttpClient, logger: ILogger) {\n    this.client = client;\n    this.logger = logger;\n  }\n\n  async fetchResource(source: DotNetSource): Promise<string> {\n    const query = {};\n    const headers = {};\n\n    this.logger.debug(\"Requesting PackageBaseAddressService from %s\", source.url)\n\n    return await this.client.request(\n      HttpClientRequestMethods.get,\n      source.url,\n      query,\n      headers\n    )\n      .then((response: NugetServiceIndexResponse) => {\n        const packageBaseAddressServices = response.data.resources\n          .filter(res => res[\"@type\"].indexOf('PackageBaseAddress') > -1);\n\n        // just take one service for now\n        const foundPackageBaseAddressServices = packageBaseAddressServices[0][\"@id\"];\n\n        this.logger.debug(\n          \"Resolved PackageBaseAddressService endpoint: %O\",\n          foundPackageBaseAddressServices\n        );\n\n        return foundPackageBaseAddressServices;\n      })\n      .catch((error: HttpClientResponse) => {\n\n        this.logger.error(\n          \"Could not resolve nuget service index. %O\",\n          error\n        )\n\n        return \"\";\n      });\n\n  }\n\n}","export enum DotNetContributions {\n  Caching = 'dotnet.caching',\n  Http = 'dotnet.http',\n  Nuget = 'dotnet.nuget',\n  DependencyProperties = 'dotnet.dependencyProperties',\n  TagFilter = 'dotnet.tagFilter',\n}","export enum NugetContributions {\n  Sources = 'sources',\n}","import { IFrozenOptions } from 'core.configuration';\nimport { ICachingOptions, IHttpOptions } from 'core.clients';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { INugetOptions } from \"./definitions/iNugetOptions\";\nimport { DotNetContributions } from './definitions/eDotNetContributions';\n\nexport class DotNetConfig implements IProviderConfig {\n\n  constructor(\n    config: IFrozenOptions,\n    dotnetCachingOpts: ICachingOptions,\n    dotnetHttpOpts: IHttpOptions,\n    nugetOpts: INugetOptions,\n  ) {\n    this.config = config;\n    this.caching = dotnetCachingOpts;\n    this.http = dotnetHttpOpts;\n    this.nuget = nugetOpts;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'dotnet';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'xml',\n    scheme: 'file',\n    pattern: '**/*.{csproj,fsproj,targets,props}',\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  nuget: INugetOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(DotNetContributions.DependencyProperties);\n  }\n\n  get tagFilter(): Array<string> {\n    return this.config.get(DotNetContributions.TagFilter);\n  }\n\n  get fallbackNugetSource(): string {\n    return 'https://api.nuget.org/v3/index.json';\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient, createProcessClient } from 'infrastructure.clients';\n\nimport { IDotNetContainerMap } from './definitions/iDotNetContainerMap';\nimport { DotNetContributions } from './definitions/eDotNetContributions';\nimport { NugetOptions } from './options/nugetOptions';\nimport { DotNetCli } from './clients/dotnetCli';\nimport { NuGetResourceClient } from './clients/nugetResourceClient';\nimport { NuGetPackageClient } from './clients/nugetPackageClient';\nimport { DotNetSuggestionProvider } from './dotnetSuggestionProvider';\nimport { DotNetConfig } from './dotnetConfig';\n\nexport function configureContainer(\n  container: AwilixContainer<IDotNetContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    nugetOpts: asFunction(\n      rootConfig => new NugetOptions(\n        rootConfig,\n        DotNetContributions.Nuget\n      )\n    ).singleton(),\n\n    dotnetCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        DotNetContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    dotnetHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        DotNetContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    // config\n    dotnetConfig: asFunction(\n      (rootConfig, dotnetCachingOpts, dotnetHttpOpts, nugetOpts) =>\n        new DotNetConfig(\n          rootConfig,\n          dotnetCachingOpts,\n          dotnetHttpOpts,\n          nugetOpts\n        )\n    ).singleton(),\n\n    // cli\n    dotnetProcess: asFunction(\n      (dotnetCachingOpts, logger) =>\n        createProcessClient(\n          dotnetCachingOpts,\n          logger.child({ namespace: 'dotnet process' })\n        )\n    ).singleton(),\n\n    dotnetCli: asFunction(\n      (dotnetConfig, dotnetProcess, logger) =>\n        new DotNetCli(\n          dotnetConfig,\n          dotnetProcess,\n          logger.child({ namespace: 'dotnet cli' })\n        )\n    ).singleton(),\n\n    // clients\n    dotnetJsonClient: asFunction(\n      (dotnetCachingOpts, dotnetHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: dotnetCachingOpts,\n            http: dotnetHttpOpts\n          },\n          logger.child({ namespace: 'dotnet request' })\n        )\n    ).singleton(),\n\n    nugetClient: asFunction(\n      (dotnetConfig, dotnetJsonClient, logger) =>\n        new NuGetPackageClient(\n          dotnetConfig,\n          dotnetJsonClient,\n          logger.child({ namespace: 'dotnet client' })\n        )\n    ).singleton(),\n\n    nugetResClient: asFunction(\n      (dotnetJsonClient, logger) =>\n        new NuGetResourceClient(\n          dotnetJsonClient,\n          logger.child({ namespace: 'dotnet resource service' })\n        )\n    ).singleton(),\n\n    // provider\n    dotnetProvider: asFunction(\n      (dotnetCli, nugetClient, nugetResClient, logger) =>\n        new DotNetSuggestionProvider(\n          dotnetCli,\n          nugetClient,\n          nugetResClient,\n          logger.child({ namespace: 'dotnet provider' })\n        )\n    ).singleton(),\n  };\n\n  container.register(containerMap);\n\n  return container.cradle.dotnetProvider;\n}","import { ILogger } from 'core.logging';\nimport { UrlHelpers } from 'core.clients';\nimport {\n  ISuggestionProvider,\n  defaultReplaceFn,\n  TSuggestionReplaceFunction\n} from 'core.suggestions';\nimport {\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { DotNetCli } from './clients/dotnetCli';\nimport { NuGetPackageClient } from './clients/nugetPackageClient';\nimport { NuGetResourceClient } from './clients/nugetResourceClient';\nimport { NuGetClientData } from './definitions/nuget';\nimport { DotNetConfig } from './dotnetConfig';\nimport { createDependenciesFromXml } from './dotnetXmlParserFactory'\n\nexport class DotNetSuggestionProvider implements ISuggestionProvider {\n\n  dotnetClient: DotNetCli;\n\n  nugetPackageClient: NuGetPackageClient;\n\n  nugetResClient: NuGetResourceClient;\n\n  config: DotNetConfig;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(\n    dotnetCli: DotNetCli,\n    nugetClient: NuGetPackageClient,\n    nugetResClient: NuGetResourceClient,\n    logger: ILogger\n  ) {\n    this.dotnetClient = dotnetCli;\n    this.nugetPackageClient = nugetClient;\n    this.nugetResClient = nugetResClient;\n    this.config = nugetClient.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = defaultReplaceFn\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = createDependenciesFromXml(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    // ensure latest nuget sources from settings\n    this.config.nuget.defrost();\n\n    // get each service index source from the dotnet cli\n    const sources = await this.dotnetClient.fetchSources(packagePath)\n\n    // remote sources only\n    const remoteSources = sources.filter(\n      s => s.protocol === UrlHelpers.RegistryProtocols.https ||\n        s.protocol === UrlHelpers.RegistryProtocols.http\n    );\n\n    // resolve each service url\n    const promised = remoteSources.map(\n      async (remoteSource) => {\n        return await this.nugetResClient.fetchResource(remoteSource);\n      }\n    );\n\n    const serviceUrls = (await Promise.all(promised))\n      .filter(url => url.length > 0);\n\n    if (serviceUrls.length === 0) {\n      this.logger.error(\"Could not resolve any nuget service urls\")\n      return null;\n    }\n\n    const clientData: NuGetClientData = { serviceUrls: serviceUrls }\n\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.nugetPackageClient,\n      clientData,\n      packageDependencies,\n    );\n\n  }\n\n}","import { PackageVersionTypes, VersionHelpers } from 'core.packages';\n\nimport { DotNetVersionSpec } from './definitions/dotnet';\nimport { NugetVersionSpec } from './definitions/nuget';\n\nexport function expandShortVersion(value) {\n  if (!value ||\n    value.indexOf('[') !== -1 ||\n    value.indexOf('(') !== -1 ||\n    value.indexOf(',') !== -1 ||\n    value.indexOf(')') !== -1 ||\n    value.indexOf(']') !== -1 ||\n    value.indexOf('*') !== -1)\n    return value;\n\n  let dotCount = 0;\n  for (let i = 0; i < value.length; i++) {\n    const c = value[i];\n    if (c === '.')\n      dotCount++;\n    else if (isNaN(parseInt(c)))\n      return value;\n  }\n\n  let fmtValue = '';\n  if (dotCount === 0)\n    fmtValue = value + '.0.0';\n  else if (dotCount === 1)\n    fmtValue = value + '.0';\n  else\n    return value;\n\n  return fmtValue;\n}\n\nexport function parseVersionSpec(rawVersion: string): DotNetVersionSpec {\n  const spec = buildVersionSpec(rawVersion);\n\n  let version: string;\n  let isValidVersion = false;\n  let isValidRange = false;\n\n  if (spec && !spec.hasFourSegments) {\n    // convert spec to semver\n    const { valid, validRange } = require('semver');\n    version = convertVersionSpecToString(spec);\n    isValidVersion = valid(version, VersionHelpers.loosePrereleases);\n    isValidRange = !isValidVersion && validRange(version, VersionHelpers.loosePrereleases) !== null;\n  }\n\n  const type: PackageVersionTypes = isValidVersion ?\n    PackageVersionTypes.Version :\n    isValidRange ? PackageVersionTypes.Range : null\n\n  const resolvedVersion = spec ? version : '';\n\n  return {\n    type,\n    rawVersion,\n    resolvedVersion,\n    spec\n  };\n}\n\nexport function buildVersionSpec(value): NugetVersionSpec {\n  let formattedValue = expandShortVersion(value.trim());\n  if (!formattedValue) return null;\n\n  // test if the version is in semver format\n  const semver = require('semver');\n  const parsedSemver = semver.parse(formattedValue, { includePrereleases: true });\n  if (parsedSemver) {\n    return {\n      version: formattedValue,\n      isMinInclusive: true,\n      isMaxInclusive: true,\n      hasFourSegments: false,\n    };\n  }\n\n  try {\n    // test if the version is a semver range format\n    const parsedNodeRange = semver.validRange(formattedValue, { includePrereleases: true });\n    if (parsedNodeRange) {\n      return {\n        version: parsedNodeRange,\n        isMinInclusive: true,\n        isMaxInclusive: true,\n        hasFourSegments: false,\n      };\n    }\n  } catch { }\n\n  // fail if the string is too short\n  if (formattedValue.length < 3) return null;\n\n  const versionSpec: NugetVersionSpec = {};\n\n  // first character must be [ or (\n  const first = formattedValue[0];\n  if (first === '[')\n    versionSpec.isMinInclusive = true;\n  else if (first === '(')\n    versionSpec.isMinInclusive = false;\n  else if (VersionHelpers.isFourSegmentedVersion(formattedValue))\n    return { hasFourSegments: true }\n  else\n    return null;\n\n  // last character must be ] or )\n  const last = formattedValue[formattedValue.length - 1];\n  if (last === ']')\n    versionSpec.isMaxInclusive = true;\n  else if (last === ')')\n    versionSpec.isMaxInclusive = false;\n\n  // remove any [] or ()\n  formattedValue = formattedValue.substr(1, formattedValue.length - 2);\n\n  // split by comma\n  const parts = formattedValue.split(',');\n\n  // more than 2 is invalid\n  if (parts.length > 2)\n    return null;\n  else if (parts.every(x => !x))\n    // must be (,]\n    return null;\n\n  // if only one entry then use it for both min and max\n  const minVersion = parts[0];\n  const maxVersion = (parts.length == 2) ? parts[1] : parts[0];\n\n  // parse the min version\n  if (minVersion) {\n    const parsedVersion = buildVersionSpec(minVersion);\n    if (!parsedVersion) return null;\n\n    versionSpec.minVersionSpec = parsedVersion;\n    versionSpec.hasFourSegments = parsedVersion.hasFourSegments;\n  }\n\n  // parse the max version\n  if (maxVersion) {\n    const parsedVersion = buildVersionSpec(maxVersion);\n    if (!parsedVersion) return null;\n\n    versionSpec.maxVersionSpec = parsedVersion;\n    versionSpec.hasFourSegments = parsedVersion.hasFourSegments;\n  }\n\n  return versionSpec;\n}\n\nfunction convertVersionSpecToString(versionSpec: NugetVersionSpec) {\n  // x.x.x cases\n  if (versionSpec.version\n    && versionSpec.isMinInclusive\n    && versionSpec.isMaxInclusive)\n    return versionSpec.version;\n\n  // [x.x.x] cases\n  if (versionSpec.minVersionSpec\n    && versionSpec.maxVersionSpec\n    && versionSpec.minVersionSpec.version === versionSpec.maxVersionSpec.version\n    && versionSpec.isMinInclusive\n    && versionSpec.isMaxInclusive)\n    return versionSpec.minVersionSpec.version;\n\n  let rangeBuilder = '';\n\n  if (versionSpec.minVersionSpec) {\n    rangeBuilder += '>';\n    if (versionSpec.isMinInclusive)\n      rangeBuilder += '=';\n    rangeBuilder += versionSpec.minVersionSpec.version\n  }\n\n  if (versionSpec.maxVersionSpec) {\n    rangeBuilder += rangeBuilder.length > 0 ? ' ' : '';\n    rangeBuilder += '<';\n    if (versionSpec.isMaxInclusive)\n      rangeBuilder += '=';\n    rangeBuilder += versionSpec.maxVersionSpec.version\n  }\n\n  return rangeBuilder;\n}","import { Nullable } from 'core.generics';\nimport { IPackageDependency, TPackageDependencyRange } from 'core.packages';\n\nexport function createDependenciesFromXml(\n  xml: string, includePropertyNames: Array<string>\n): Array<IPackageDependency> {\n\n  const xmldoc = require('xmldoc');\n  let document = null\n\n  try {\n    document = new xmldoc.XmlDocument(xml);\n  } catch {\n    document = null;\n  }\n\n  if (!document) return [];\n  return extractPackageLensDataFromNodes(document, xml, includePropertyNames);\n}\n\nfunction extractPackageLensDataFromNodes(\n  topLevelNodes, xml: string, includePropertyNames: Array<string>\n) {\n  const collector = [];\n\n  topLevelNodes.eachChild(\n    function (node) {\n      if (node.name !== \"ItemGroup\") return;\n      node.eachChild(\n        function (itemGroupNode) {\n          if (includePropertyNames.includes(itemGroupNode.name) == false) return;\n          const dependencyLens = createFromAttribute(itemGroupNode, xml);\n          if (dependencyLens) collector.push(dependencyLens);\n        }\n      )\n    }\n  )\n\n  return collector\n}\n\nfunction createFromAttribute(node, xml: string): IPackageDependency {\n  const nameRange = {\n    start: node.startTagPosition,\n    end: node.startTagPosition,\n  };\n\n  // xmldoc doesn't report attribute ranges so this gets them manually\n  const versionRange = getAttributeRange(node, ' version=\"', xml);\n  if (versionRange === null) return null;\n\n  const packageInfo = {\n    name: node.attr.Include || node.attr.Update,\n    version: node.attr.Version,\n  }\n\n  return {\n    nameRange,\n    versionRange,\n    packageInfo,\n  }\n}\n\nfunction getAttributeRange(\n  node, attributeName: string, xml: string\n): Nullable<TPackageDependencyRange> {\n  const lineText = xml.substring(node.startTagPosition, node.position);\n\n  let start = lineText.toLowerCase().indexOf(attributeName);\n  if (start === -1) return null;\n  start += attributeName.length\n\n  const end = lineText.indexOf('\"', start);\n\n  return {\n    start: node.startTagPosition + start,\n    end: node.startTagPosition + end,\n  };\n}","import { IFrozenOptions, Options } from 'core.configuration';\nimport { NugetContributions } from '../definitions/eNugetContributions';\nimport { INugetOptions } from '../definitions/iNugetOptions';\n\nexport class NugetOptions extends Options implements INugetOptions {\n\n  constructor(config: IFrozenOptions, section: string) {\n    super(config, section);\n  }\n\n  get sources(): Array<string> {\n    return this.get<Array<string>>(NugetContributions.Sources);\n  }\n\n}","import Fixtures from './fixtures/dotnetSources'\n\nimport { LoggerStub } from 'test.core.logging';\n\nimport { ILogger } from 'core.logging';\n\nimport {\n  UrlHelpers,\n  ICachingOptions,\n  CachingOptions,\n  IHttpOptions,\n  HttpOptions,\n  IProcessClient\n} from 'core.clients';\n\nimport {\n  DotNetConfig,\n  DotNetCli,\n  INugetOptions,\n  NugetOptions\n} from 'infrastructure.providers.dotnet';\n\nimport { ProcessClient } from 'infrastructure.clients';\n\nconst { mock, instance, when, anything } = require('ts-mockito');\n\nconst assert = require('assert');\n\nlet cacheOptsMock: ICachingOptions;\nlet httpOptsMock: IHttpOptions;\nlet nugetOptsMock: INugetOptions;\nlet configMock: DotNetConfig;\nlet loggerMock: ILogger;\n\nlet clientMock: IProcessClient;\n\nexport const DotnetClientRequestTests = {\n\n  beforeEach: () => {\n    cacheOptsMock = mock(CachingOptions);\n    httpOptsMock = mock(HttpOptions);\n    nugetOptsMock = mock(NugetOptions);\n    configMock = mock(DotNetConfig);\n    loggerMock = mock(LoggerStub)\n    clientMock = mock(ProcessClient)\n\n    when(configMock.caching).thenReturn(instance(cacheOptsMock))\n    when(configMock.http).thenReturn(instance(httpOptsMock))\n    when(configMock.nuget).thenReturn(instance(nugetOptsMock))\n  },\n\n  \"fetchSources\": {\n\n    \"returns an Array<DotNetSource> of enabled sources\": async () => {\n      const testFeeds = [\n        'https://test.feed/v3/index.json',\n      ];\n\n      const expected = [\n        {\n          enabled: true,\n          machineWide: false,\n          url: testFeeds[0],\n          protocol: UrlHelpers.RegistryProtocols.https\n        },\n        {\n          enabled: true,\n          machineWide: false,\n          url: 'https://api.nuget.org/v3/index.json',\n          protocol: UrlHelpers.RegistryProtocols.https\n        },\n        {\n          enabled: true,\n          machineWide: false,\n          url: 'http://non-ssl/v3/index.json',\n          protocol: UrlHelpers.RegistryProtocols.http\n        },\n        {\n          enabled: true,\n          machineWide: true,\n          url: 'C:\\\\Program Files (x86)\\\\Microsoft SDKs\\\\NuGetPackages\\\\',\n          protocol: UrlHelpers.RegistryProtocols.file\n        },\n      ]\n\n      when(clientMock.request(anything(), anything(), anything()))\n        .thenResolve({\n          data: Fixtures.enabledSources\n        })\n\n      when(nugetOptsMock.sources).thenReturn(testFeeds)\n\n      const cut = new DotNetCli(\n        instance(configMock),\n        instance(clientMock),\n        instance(loggerMock)\n      );\n      return cut.fetchSources('.')\n        .then(actualSources => {\n          assert.deepEqual(actualSources, expected);\n        });\n\n    },\n\n    \"return 0 items when no sources are enabled\": async () => {\n      const testFeeds = [];\n\n      when(clientMock.request(\n        anything(),\n        anything(),\n        anything()\n      )).thenResolve({\n        data: Fixtures.disabledSource\n      })\n\n      when(nugetOptsMock.sources).thenReturn(testFeeds)\n\n      const cut = new DotNetCli(\n        instance(configMock),\n        instance(clientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchSources('.')\n        .then(actualSources => {\n          assert.equal(actualSources.length, 0);\n        });\n    },\n\n    \"returns only enabled sources when some sources are disabled\": async () => {\n      const expected = [\n        {\n          enabled: true,\n          machineWide: false,\n          url: 'https://api.nuget.org/v3/index.json',\n          protocol: UrlHelpers.RegistryProtocols.https\n        },\n      ]\n\n      when(clientMock.request(\n        anything(),\n        anything(),\n        anything()\n      )).thenResolve({\n        data: Fixtures.enabledAndDisabledSources\n      })\n\n      when(nugetOptsMock.sources).thenReturn([])\n\n      const cut = new DotNetCli(\n        instance(configMock),\n        instance(clientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchSources('.')\n        .then(actualSources => {\n          assert.deepEqual(actualSources, expected);\n        });\n    },\n\n    \"returns fallback url on error\": async () => {\n      const expectedFallbackNugetSource = 'http://fallbackurl.test.net'\n\n      when(clientMock.request(\n        anything(),\n        anything(),\n        anything()\n      )).thenReject({\n        data: Fixtures.invalidSources\n      })\n\n      when(configMock.fallbackNugetSource).thenReturn(expectedFallbackNugetSource)\n\n      const cut = new DotNetCli(\n        instance(configMock),\n        instance(clientMock),\n        instance(loggerMock)\n      );\n\n      const expectedErrorResp = {\n        enabled: true,\n        machineWide: false,\n        protocol: 'https:',\n        url: expectedFallbackNugetSource,\n      }\n\n      return cut.fetchSources('.')\n        .then(actual => {\n          assert.deepEqual(actual, [expectedErrorResp]);\n        });\n    },\n\n  }\n\n}","export default {\n\n  enabledSources: `E https://api.nuget.org/v3/index.json\nE http://non-ssl/v3/index.json\nEM C:\\\\Program Files (x86)\\\\Microsoft SDKs\\\\NuGetPackages\\\\`,\n\n  disabledSource: `D https://api.nuget.org/v3/index.json`,\n\n  enabledAndDisabledSources: `D http://non-ssl/v3/index.json\nE https://api.nuget.org/v3/index.json`,\n\n  invalidSources: 'error: invalid value'\n\n}","export default {\n\n  success: {\n    \"resources\": [\n      {\n        \"@id\": \"https://unit-test-search-ussc.nuget.org/query\",\n        \"@type\": \"SearchQueryService\",\n      },\n      {\n        \"@id\": \"https://api.nuget.org/v3-flatcontainer1/\",\n        \"@type\": \"PackageBaseAddress\",\n      },\n      {\n        \"@id\": \"https://api.nuget.org/v3-flatcontainer2/\",\n        \"@type\": \"PackageBaseAddress/3.0.0\",\n      },\n      {\n        \"@id\": \"https://unit-test-usnc.nuget.org/\",\n        \"@type\": \"SearchGalleryQueryService/3.0.0-rc\",\n      }\n    ]\n  }\n\n}","import { LoggerStub } from 'test.core.logging'\n\nimport { ILogger } from 'core.logging';\n\nimport {\n  UrlHelpers,\n  IJsonHttpClient,\n  JsonHttpClient,\n  HttpClientRequestMethods\n} from 'core.clients';\n\nimport { NuGetResourceClient } from 'infrastructure.providers.dotnet';\n\nimport Fixtures from './fixtures/nugetResources'\n\nconst assert = require('assert');\nconst { mock, instance, when, anything, capture } = require('ts-mockito');\n\nlet jsonClientMock: IJsonHttpClient;\nlet loggerMock: ILogger;\n\nexport const NuGetResourceClientTests = {\n\n  beforeEach: () => {\n    jsonClientMock = mock(JsonHttpClient);\n    loggerMock = mock(LoggerStub);\n  },\n\n  \"fetchResource\": {\n\n    \"returns the package resource from a list of resources\": async () => {\n      const testSource = {\n        enabled: true,\n        machineWide: false,\n        url: 'https://test',\n        protocol: UrlHelpers.RegistryProtocols.https\n      };\n\n      const mockResponse = {\n        status: 200,\n        data: Fixtures.success,\n      };\n\n      const expected = 'https://api.nuget.org/v3-flatcontainer1/';\n\n      when(jsonClientMock.request(anything(), anything(), anything(), anything()))\n        .thenResolve(mockResponse)\n\n      const cut = new NuGetResourceClient(\n        instance(jsonClientMock),\n        instance(loggerMock)\n      )\n\n      return cut.fetchResource(testSource)\n        .then(actualSources => {\n          assert.equal(actualSources, expected)\n\n          const [actualMethod, actualUrl] = capture(jsonClientMock.request).first();\n          assert.equal(actualMethod, HttpClientRequestMethods.get);\n          assert.equal(actualUrl, testSource.url);\n        });\n    },\n\n    \"returns empty when the resource cannot be obtained\": async () => {\n\n      const testSource = {\n        enabled: true,\n        machineWide: false,\n        url: 'https://test',\n        protocol: UrlHelpers.RegistryProtocols.https\n      };\n\n      const errorResponse = {\n        source: 'remote',\n        status: 404,\n        data: 'an error occurred',\n        rejected: true\n      };\n\n      const expectedUrl = \"\";\n\n      when(jsonClientMock.request(anything(), anything(), anything(), anything()))\n        .thenReject(errorResponse)\n\n      const cut = new NuGetResourceClient(\n        instance(jsonClientMock),\n        instance(loggerMock)\n      )\n\n      await cut.fetchResource(testSource)\n        .then(actualUrl => {\n          assert.equal(actualUrl, expectedUrl)\n        })\n        .catch(err => {\n          assert.fail();\n        });\n\n    },\n\n  }\n\n}","import { parseVersionSpec } from 'infrastructure.providers.dotnet';\n\nconst assert = require('assert');\n\nexport default {\n\n  'converts basic nuget ranges to node ranges': () => {\n    const expectedList = [\n      // basic\n      \"1.0.0\", \"1.0.0\",\n      \"(1.0.0,)\", \">1.0.0\",\n      \"[1.0.0]\", \"1.0.0\",\n      \"(,1.0.0]\", \"<=1.0.0\",\n      \"[1.0.0,2.0.0]\", \">=1.0.0 <=2.0.0\",\n      \"(1.0.0,2.0.0)\", \">1.0.0 <2.0.0\",\n      \"[1.0.0,2.0.0)\", \">=1.0.0 <2.0.0\"\n    ];\n\n    for (let i = 0; i < expectedList.length; i += 2) {\n      const test = expectedList[i];\n      const expected = expectedList[i + 1];\n      const specTest = parseVersionSpec(test);\n      assert.equal(specTest.resolvedVersion, expected, \"nuget range did not convert to node range at \" + i);\n    }\n  },\n\n  'converts partial nuget ranges to node ranges': () => {\n    const expectedList = [\n      \"1\", \"1.0.0\",\n      \"1.0\", \"1.0.0\",\n      \"[1,2]\", \">=1.0.0 <=2.0.0\",\n      \"(1,2)\", \">1.0.0 <2.0.0\",\n    ];\n\n    for (let i = 0; i < expectedList.length; i += 2) {\n      const test = expectedList[i];\n      const expected = expectedList[i + 1];\n      const specTest = parseVersionSpec(test);\n      assert.equal(specTest.resolvedVersion, expected, `nuget range did not convert ${expected} to ${specTest.resolvedVersion} at ${i}`);\n    }\n  },\n\n  'returns null for invalid ranges': () => {\n    const results = [\n      parseVersionSpec(\"1.\").spec,\n      parseVersionSpec(\"1.0.\").spec,\n      parseVersionSpec(\"s.2.0\").spec,\n      parseVersionSpec(\"beta\").spec,\n    ];\n\n    results.forEach(x => {\n      assert.ok(!x, \"Should not parse range\")\n    })\n  },\n\n  'handles floating ranges': () => {\n    const expectedList = [\n      \"1.*\", \">=1.0.0 <2.0.0-0\",\n      \"1.0.*\", \">=1.0.0 <1.1.0-0\"\n    ];\n\n    for (let i = 0; i < expectedList.length; i += 2) {\n      const test = expectedList[i];\n      const expected = expectedList[i + 1];\n      const specTest = parseVersionSpec(test);\n      assert.equal(specTest.resolvedVersion, expected, `nuget floating range did not convert ${expected} to ${specTest.resolvedVersion} at ${i}`);\n    }\n  },\n\n  'No nulls from valid notations': () => {\n    // spec https://docs.microsoft.com/en-us/nuget/create-packages/dependency-versions#version-ranges\n    const results = [\n      parseVersionSpec(\"1.0.0\").spec,\n      parseVersionSpec(\"(1.0.0,)\").spec,\n      parseVersionSpec(\"[1.0.0]\").spec,\n      parseVersionSpec(\"(,1.0.0]\").spec,\n      parseVersionSpec(\"(,1.0.0)\").spec,\n      parseVersionSpec(\"[1.0.0,2.0.0]\").spec,\n      parseVersionSpec(\"(1.0.0,2.0.0)\").spec,\n      parseVersionSpec(\"[1.0.0,2.0.0)\").spec,\n      parseVersionSpec(\"(1.0.0)\").spec   // should be null though\n    ];\n\n    results.forEach(x => {\n      assert.ok(!!x, \"Could not parse range\")\n    })\n  },\n\n  'returns nulls from invalid notations': () => {\n    const results = [\n      parseVersionSpec(\"1.\").spec,\n      parseVersionSpec(\"1.0.\").spec,\n      parseVersionSpec(\"s.2.0\").spec,\n      parseVersionSpec(\"beta\").spec\n    ];\n\n    results.forEach(x => {\n      assert.ok(!x, \"Could not parse range\")\n    })\n  },\n\n  'returns true for four segment versions': () => {\n    const results = [\n      parseVersionSpec(\"1.0.0.1\").spec,\n    ];\n\n    results.forEach(x => {\n      assert.ok(x.hasFourSegments)\n    })\n  }\n\n\n}","export default {\n\n  \"createDependenciesFromXml\": {\n\n    \"test\": `\n    <Project>\n    <ItemGroup>\n        <PackageReference Include=\"Microsoft.Extensions.DependencyInjection.Abstractions\" Version=\"2.0.0\" />\n        <PackageReference Include=\"Microsoft.Extensions.Logging.Abstractions\" Version=\"2.0.1\" />\n    </ItemGroup>\n</Project>\n`,\n\n    \"expected\": [\n      {\n        \"nameRange\": {\n          \"start\": 35,\n          \"end\": 35\n        },\n        \"versionRange\": {\n          \"start\": 130,\n          \"end\": 34\n        },\n        \"packageInfo\": {\n          \"name\": \"Microsoft.Extensions.DependencyInjection.Abstractions\",\n          \"version\": \"2.0.0\"\n        }\n      },\n      {\n        \"nameRange\": {\n          \"start\": 144,\n          \"end\": 144\n        },\n        \"versionRange\": {\n          \"start\": 227,\n          \"end\": 143\n        },\n        \"packageInfo\": {\n          \"name\": \"Microsoft.Extensions.Logging.Abstractions\",\n          \"version\": \"2.0.1\"\n        }\n      }\n    ]\n\n  }\n\n}","import { createDependenciesFromXml } from 'infrastructure.providers.dotnet';\n\nimport Fixtures from './createDependenciesFromXml.fixtures';\n\nconst assert = require('assert');\n\nexport default {\n\n  \"returns empty when no matches found\": () => {\n    const includeNames = []\n    const results = createDependenciesFromXml('', includeNames);\n    assert.equal(results.length, 0);\n  },\n\n  \"returns empty when no dependency entry names match\": () => {\n    const includeNames = [\"non-dependencies\"]\n    const results = createDependenciesFromXml(\n      Fixtures.createDependenciesFromXml.test,\n      includeNames\n    );\n    assert.equal(results.length, 0);\n  },\n\n  \"extracts dependency entries from dotnet xml\": () => {\n    const includeNames = [\"PackageReference\"]\n    const results = createDependenciesFromXml(\n      Fixtures.createDependenciesFromXml.test,\n      includeNames\n    );\n    assert.deepEqual(results, Fixtures.createDependenciesFromXml.expected);\n  }\n\n}","// pacoteClientApi tests\nimport * as PacoteApiClient from './test/pacoteClient/pacoteClient.tests';\nimport * as PacoteNpmRc from './test/pacoteClient/npmrc.tests';\nexport const PacoteApiClientTests = {\n  PacoteApiClient,\n  PacoteNpmRc,\n}\n\nimport * as fetchGitHub from './test/githubClient/fetchGitHub.tests';\nexport const GitHubClientTests = {\n  fetchGitHub,\n}\n\nimport * as fetchRegistry from './test/npmPackageClient/fetchRegistry.tests';\nimport * as fetchDirectory from './test/npmPackageClient/fetchDirectory.tests';\nimport * as fetchGit from './test/npmPackageClient/fetchGit.tests';\n\nexport const NpmPackageClientTests = {\n  fetchRegistry,\n  fetchDirectory,\n  fetchGit\n}\n\nimport * as replaceGitVersion from './test/npmVersionUtils/replaceGitVersion.tests'\nexport const NpmVersionUtilsTests = {\n  replaceGitVersion,\n}","export * from './src/definitions/eNpmContributions'\nexport * from './src/definitions/iPacote'\nexport * from './src/clients/githubClient'\nexport * from './src/clients/npmPackageClient'\nexport * from './src/clients/pacoteClient'\nexport * from './src/factories/packageFactory'\nexport * from './src/models/npaSpec'\nexport * from './src/options/githubOptions'\nexport * from './src/npmConfig'\nexport * from './src/npmSuggestionProvider'\nexport * from './src/npmUtils'\nexport * from './src/npmContainer'","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  HttpClientRequestMethods,\n  JsonClientResponse,\n  IJsonHttpClient\n} from 'core.clients';\nimport {\n  TPackageRequest,\n  PackageSourceTypes,\n  PackageVersionTypes,\n  VersionHelpers,\n  TPackageDocument,\n  DocumentFactory\n} from 'core.packages';\n\nimport { NpmConfig } from \"../npmConfig\";\nimport { NpaSpec } from \"../models/npaSpec\";\n\nconst defaultHeaders = {\n  accept: 'application\\/vnd.github.v3+json',\n  'user-agent': 'vscode-contrib/vscode-versionlens'\n};\n\nexport class GitHubClient {\n\n  config: NpmConfig;\n\n  logger: ILogger;\n\n  client: IJsonHttpClient;\n\n  constructor(config: NpmConfig, client: IJsonHttpClient, logger: ILogger) {\n    this.config = config;\n    this.client = client;\n    this.logger = logger;\n  }\n\n  fetchGithub(request: TPackageRequest<null>, npaSpec: NpaSpec): Promise<TPackageDocument> {\n    const { validRange } = require('semver');\n\n    if (npaSpec.gitRange) {\n      // we have a semver:x.x.x\n      return this.fetchTags(request, npaSpec);\n    }\n\n    if (validRange(npaSpec.gitCommittish, VersionHelpers.loosePrereleases)) {\n      // we have a #x.x.x\n      npaSpec.gitRange = npaSpec.gitCommittish;\n      return this.fetchTags(request, npaSpec);\n    }\n\n    // we have a #commit\n    return this.fetchCommits(request, npaSpec);\n  }\n\n  fetchTags(request: TPackageRequest<null>, npaSpec: NpaSpec): Promise<TPackageDocument> {\n    // todo pass in auth\n    const { user, project } = npaSpec.hosted;\n    const tagsRepoUrl = `https://api.github.com/repos/${user}/${project}/tags`;\n    const query = {};\n    const headers = this.getHeaders();\n\n    return this.client.request(\n      HttpClientRequestMethods.get,\n      tagsRepoUrl,\n      query,\n      headers\n    )\n      .then(function (response: JsonClientResponse): TPackageDocument {\n        const { compareLoose } = require(\"semver\");\n\n        // extract versions\n        const tags = <[]>response.data;\n\n        const rawVersions = tags.map((tag: any) => tag.name);\n\n        const allVersions = VersionHelpers.filterSemverVersions(rawVersions).sort(compareLoose);\n\n        const source: PackageSourceTypes = PackageSourceTypes.Github;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const type: PackageVersionTypes = npaSpec.gitRange ?\n          PackageVersionTypes.Range :\n          PackageVersionTypes.Version;\n\n        const versionRange = npaSpec.gitRange;\n\n        const resolved = {\n          name: project,\n          version: versionRange,\n        };\n\n        // seperate versions to releases and prereleases\n        const { releases, prereleases } = VersionHelpers.splitReleasesFromArray(\n          allVersions\n        );\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type,\n          requested,\n          resolved,\n          suggestions\n        };\n\n      });\n\n  }\n\n  fetchCommits(request: TPackageRequest<null>, npaSpec: NpaSpec): Promise<TPackageDocument> {\n    // todo pass in auth\n    const { user, project } = npaSpec.hosted;\n    const commitsRepoUrl = `https://api.github.com/repos/${user}/${project}/commits`;\n    const query = {};\n    const headers = this.getHeaders();\n\n    return this.client.request(\n      HttpClientRequestMethods.get,\n      commitsRepoUrl,\n      query,\n      headers\n    )\n      .then((response: JsonClientResponse) => {\n\n        const commitInfos = <[]>response.data\n\n        const commits = commitInfos.map((commit: any) => commit.sha);\n\n        const source: PackageSourceTypes = PackageSourceTypes.Github;\n\n        const { providerName } = request;\n\n        const requested = request.package;\n\n        const type = PackageVersionTypes.Committish;\n\n        const versionRange = npaSpec.gitCommittish;\n\n        if (commits.length === 0) {\n          // no commits found\n          return DocumentFactory.create(\n            PackageSourceTypes.Github,\n            request,\n            response,\n            [SuggestionFactory.createNotFound()]\n          )\n        }\n\n        const commitIndex = commits.findIndex(\n          commit => commit.indexOf(versionRange) > -1\n        );\n\n        const latestCommit = commits[commits.length - 1].substr(0, 8);\n\n        const noMatch = commitIndex === -1;\n\n        const isLatest = versionRange === latestCommit;\n\n        const resolved = {\n          name: project,\n          version: versionRange,\n        };\n\n        const suggestions = [];\n\n        if (noMatch) {\n          suggestions.push(\n            SuggestionFactory.createNoMatch(),\n            SuggestionFactory.createLatest(latestCommit)\n          );\n        } else if (isLatest) {\n          suggestions.push(\n            SuggestionFactory.createMatchesLatest(versionRange)\n          );\n        } else if (commitIndex > 0) {\n          suggestions.push(\n            SuggestionFactory.createFixedStatus(versionRange),\n            SuggestionFactory.createLatest(latestCommit)\n          );\n        }\n\n        return {\n          providerName,\n          source,\n          response,\n          type,\n          requested,\n          resolved,\n          suggestions,\n          gitSpec: npaSpec.saveSpec\n        };\n\n      });\n\n  }\n\n  getHeaders() {\n    const userHeaders = {};\n    if (this.config.github.accessToken && this.config.github.accessToken.length > 0) {\n      (<any>userHeaders).authorization = `token ${this.config.github.accessToken}`;\n    }\n    return Object.assign({}, userHeaders, defaultHeaders);\n  }\n\n}","import { ILogger } from 'core.logging';\nimport { SuggestionFactory, TPackageSuggestion } from 'core.suggestions';\nimport { ClientResponseSource } from 'core.clients';\nimport {\n  DocumentFactory,\n  ResponseFactory,\n  IPackageClient,\n  TPackageRequest,\n  TPackageDocument,\n  PackageVersionTypes,\n  PackageSourceTypes\n} from 'core.packages';\n\nimport * as PackageFactory from '../factories/packageFactory';\nimport { NpaSpec, NpaTypes } from '../models/npaSpec';\nimport * as NpmUtils from '../npmUtils';\nimport { NpmConfig } from '../npmConfig';\nimport { PacoteClient } from './pacoteClient';\nimport { GitHubClient } from './githubClient';\n\nexport class NpmPackageClient implements IPackageClient<null> {\n\n  logger: ILogger;\n\n  config: NpmConfig;\n\n  pacoteClient: PacoteClient;\n\n  githubClient: GitHubClient;\n\n  constructor(\n    config: NpmConfig,\n    pacoteClient: PacoteClient,\n    githubClient: GitHubClient,\n    logger: ILogger\n  ) {\n    this.config = config;\n\n    this.pacoteClient = pacoteClient;\n    this.githubClient = githubClient;\n    this.logger = logger;\n  }\n\n  async fetchPackage(request: TPackageRequest<null>): Promise<TPackageDocument> {\n    const npa = require('npm-package-arg');\n    let source: PackageSourceTypes;\n\n    return new Promise<TPackageDocument>((resolve, reject) => {\n      let npaSpec: NpaSpec;\n\n      // try parse the package\n      try {\n        npaSpec = npa.resolve(\n          request.package.name,\n          request.package.version,\n          request.package.path\n        );\n      }\n      catch (error) {\n        return reject(NpmUtils.convertNpmErrorToResponse(error, ClientResponseSource.local));\n      }\n\n      // return if directory or file document\n      if (npaSpec.type === NpaTypes.Directory || npaSpec.type === NpaTypes.File) {\n        source = PackageSourceTypes.Directory;\n        return resolve(\n          PackageFactory.createDirectory(\n            request.providerName,\n            request.package,\n            ResponseFactory.createResponseStatus(ClientResponseSource.local, 200),\n            npaSpec,\n          )\n        );\n      }\n\n      if (npaSpec.type === NpaTypes.Git) {\n\n        source = PackageSourceTypes.Git;\n\n        if (!npaSpec.hosted) {\n          // could not resolve\n          return reject({\n            status: 'EUNSUPPORTEDPROTOCOL',\n            data: 'Git url could not be resolved',\n            source: ClientResponseSource.local\n          });\n        }\n\n        if (!npaSpec.gitCommittish && npaSpec.hosted.default !== 'shortcut') {\n          return resolve(\n            DocumentFactory.createFixed(\n              request.providerName,\n              PackageSourceTypes.Git,\n              request.package,\n              ResponseFactory.createResponseStatus(ClientResponseSource.local, 0),\n              PackageVersionTypes.Committish,\n              'git repository'\n            )\n          );\n        }\n\n        // resolve tags, committishes\n        source = PackageSourceTypes.Github;\n        return resolve(this.githubClient.fetchGithub(request, npaSpec));\n      }\n\n      // otherwise return registry result\n      source = PackageSourceTypes.Registry;\n      return resolve(this.pacoteClient.fetchPackage(request, npaSpec));\n\n    }).catch(response => {\n\n      this.logger.debug(\"Caught exception from %s: %O\", source, response);\n\n      if (!response.data) {\n        response = NpmUtils.convertNpmErrorToResponse(\n          response,\n          ClientResponseSource.remote\n        );\n      }\n\n      const status = response.status &&\n        !Number.isInteger(response.status) &&\n        response.status.startsWith('E') ?\n        response.status.substr(1) :\n        response.status;\n\n      let suggestions: Array<TPackageSuggestion>;\n\n      if (status == 'CONNREFUSED')\n        suggestions = [SuggestionFactory.createConnectionRefused()];\n      else if (status == 'UNSUPPORTEDPROTOCOL' || response.data == 'Not implemented yet')\n        suggestions = [SuggestionFactory.createNotSupported()];\n      else if (status == 'INVALIDTAGNAME' || response.data.includes('Invalid comparator:'))\n        suggestions = [\n          SuggestionFactory.createInvalid(''),\n          SuggestionFactory.createLatest()\n        ];\n      else if (status == 128)\n        suggestions = [SuggestionFactory.createNotFound()]\n      else\n        suggestions = [SuggestionFactory.createFromHttpStatus(status)];\n\n      if (suggestions === null) return Promise.reject(response);\n\n      return DocumentFactory.create(\n        source,\n        request,\n        ResponseFactory.createResponseStatus(response.source, response.status),\n        suggestions\n      );\n\n    });\n\n  }\n\n}\n","import { ILogger } from 'core.logging';\nimport { SuggestionFactory } from 'core.suggestions';\nimport {\n  DocumentFactory,\n  TPackageRequest,\n  VersionHelpers,\n  TPackageDocument,\n  PackageVersionTypes,\n  PackageSourceTypes\n} from 'core.packages';\nimport { ClientResponseSource, AbstractCachedRequest } from 'core.clients';\n\nimport { NpmConfig } from '../npmConfig';\nimport { NpaSpec, NpaTypes } from '../models/npaSpec';\nimport * as NpmUtils from '../npmUtils';\n\nexport class PacoteClient extends AbstractCachedRequest<number, TPackageDocument> {\n\n  config: NpmConfig;\n\n  logger: ILogger;\n\n  pacote: any;\n\n  libnpmconfig: any;\n\n  constructor(config: NpmConfig, logger: ILogger) {\n    super(config.caching);\n    this.config = config;\n    this.logger = logger;\n\n    this.pacote = require('pacote');\n    this.libnpmconfig = require('libnpmconfig');\n  }\n\n  async fetchPackage(\n    request: TPackageRequest<null>, npaSpec: NpaSpec\n  ): Promise<TPackageDocument> {\n\n    const cacheKey = `${request.package.name}@${request.package.version}_${request.package.path}`;\n    if (this.cache.cachingOpts.duration > 0 && this.cache.hasExpired(cacheKey) === false) {\n      this.logger.debug(\"Fetching from cache using key: %s\", cacheKey);\n      const cachedResp = this.cache.get(cacheKey);\n      if (cachedResp.rejected) return Promise.reject(cachedResp);\n\n      cachedResp.data.response.source = ClientResponseSource.cache;\n      return Promise.resolve(cachedResp.data);\n    }\n\n    // get npm config\n    const npmOpts = this.libnpmconfig.read(\n      {\n        where: request.package.path,\n        fullMetadata: false,\n        retry: {\n          retries: 0\n        }\n      },\n      {\n        cwd: request.package.path,\n      }\n    );\n\n    return this.pacote.packument(npaSpec, npmOpts)\n      .then(function (packumentResponse): TPackageDocument {\n\n        const { compareLoose } = require(\"semver\");\n\n        const { providerName } = request;\n\n        const source: PackageSourceTypes = PackageSourceTypes.Registry;\n\n        const type: PackageVersionTypes = <any>npaSpec.type;\n\n        let versionRange: string = (type === PackageVersionTypes.Alias) ?\n          npaSpec.subSpec.rawSpec :\n          npaSpec.rawSpec;\n\n        const resolved = {\n          name: (type === PackageVersionTypes.Alias) ?\n            npaSpec.subSpec.name :\n            npaSpec.name,\n          version: versionRange,\n        };\n\n        // extract raw versions and sort\n        const rawVersions = Object.keys(packumentResponse.versions || {}).sort(compareLoose);\n\n        // seperate versions to releases and prereleases\n        let { releases, prereleases } = VersionHelpers.splitReleasesFromArray(\n          rawVersions\n        );\n\n        // extract prereleases from dist tags\n        const distTags = packumentResponse['dist-tags'] || {};\n        const latestTaggedVersion = distTags['latest'];\n\n        // extract releases\n        if (latestTaggedVersion) {\n          // cap the releases to the latest tagged version\n          releases = VersionHelpers.lteFromArray(\n            releases,\n            latestTaggedVersion\n          );\n        }\n\n        const response = {\n          source: ClientResponseSource.remote,\n          status: 200,\n        };\n\n        // use 'latest' tagged version from author?\n        const suggestLatestVersion = latestTaggedVersion || (\n          releases.length > 0 ?\n            // suggest latest release?\n            releases[releases.length - 1] :\n            // no suggestion\n            null\n        );\n\n        const requested = request.package;\n        if (npaSpec.type === NpaTypes.Tag) {\n\n          // get the tagged version. eg latest|next\n          versionRange = distTags[requested.version];\n          if (!versionRange) {\n\n            // No match\n            return DocumentFactory.createNoMatch(\n              providerName,\n              source,\n              type,\n              requested,\n              response,\n              suggestLatestVersion\n            );\n\n          }\n\n        }\n\n        // analyse suggestions\n        const suggestions = SuggestionFactory.createSuggestions(\n          versionRange,\n          releases,\n          prereleases,\n          suggestLatestVersion\n        );\n\n        return {\n          providerName,\n          source,\n          response,\n          type,\n          requested,\n          resolved,\n          suggestions,\n        };\n\n      }).then(document => {\n        this.createCachedResponse(\n          cacheKey,\n          200,\n          document,\n          false\n        );\n        return document;\n      }).catch(response => {\n        this.createCachedResponse(\n          cacheKey,\n          response.code,\n          response.message,\n          true\n        );\n        return Promise.reject(\n          NpmUtils.convertNpmErrorToResponse(\n            response,\n            ClientResponseSource.remote\n          )\n        );\n      });\n\n  }\n\n}","export enum GitHubContributions {\n  AccessToken = 'accessToken',\n}","export enum NpmContributions {\n  Caching = 'npm.caching',\n  Http = 'npm.http',\n\n  Github = 'npm.github',\n  DependencyProperties = 'npm.dependencyProperties',\n  DistTagFilter = 'npm.distTagFilter',\n}","import {\n  DocumentFactory,\n  TPackageIdentifier,\n  TPackageResponseStatus,\n  TPackageDocument,\n  PackageVersionTypes,\n  PackageSourceTypes\n} from 'core.packages';\nimport { TPackageSuggestion, SuggestionFlags } from 'core.suggestions';\n\nimport { NpaSpec } from '../models/npaSpec';\n\nexport const fileDependencyRegex = /^file:(.*)$/;\n\nexport function createDirectory(\n  providerName: string,\n  requested: TPackageIdentifier,\n  response: TPackageResponseStatus,\n  npaSpec: NpaSpec\n): TPackageDocument {\n\n  const fileRegExpResult = fileDependencyRegex.exec(requested.version);\n  if (!fileRegExpResult) {\n    return DocumentFactory.createInvalidVersion(\n      providerName,\n      requested,\n      response,\n      <any>npaSpec.type // todo create a converter\n    );\n  }\n\n  const source = PackageSourceTypes.Directory;\n  const type = PackageVersionTypes.Version;\n\n  const resolved = {\n    name: npaSpec.name,\n    version: fileRegExpResult[1],\n  };\n\n  const suggestions: Array<TPackageSuggestion> = [\n    {\n      name: 'file://',\n      version: resolved.version,\n      flags: SuggestionFlags.release\n    },\n  ]\n\n  return {\n    providerName,\n    source,\n    type,\n    requested,\n    response,\n    resolved,\n    suggestions\n  };\n}","export enum NpaTypes {\n  Git = 'git',\n  Remote = 'remote',\n  File = 'file',\n  Directory = 'directory',\n\n  Tag = 'tag',\n  Version = 'version',\n  Range = 'range',\n  Alias = 'alias',\n}\n\nexport type NpaSpec = {\n  type: NpaTypes;\n  registry: boolean,\n  name: string,\n  scope: string,\n  escapedName: string,\n  rawSpec: any,\n  saveSpec: any,\n  fetchSpec: any,\n  subSpec: any,\n  gitRange: any,\n  gitCommittish: string,\n  hosted: any,\n  raw: string,\n}","import { ICachingOptions, IHttpOptions } from 'core.clients';\nimport { IFrozenOptions } from 'core.configuration';\nimport { ProviderSupport, IProviderConfig, TProviderFileMatcher } from 'core.providers';\n\nimport { GitHubOptions } from './options/githubOptions';\nimport { NpmContributions } from './definitions/eNpmContributions';\n\nexport class NpmConfig implements IProviderConfig {\n\n  constructor(\n    config: IFrozenOptions,\n    caching: ICachingOptions,\n    http: IHttpOptions,\n    github: GitHubOptions,\n  ) {\n    this.config = config;\n    this.caching = caching;\n    this.http = http;\n    this.github = github;\n  }\n\n  config: IFrozenOptions;\n\n  providerName: string = 'npm';\n\n  supports: Array<ProviderSupport> = [\n    ProviderSupport.Releases,\n    ProviderSupport.Prereleases,\n    ProviderSupport.InstalledStatuses,\n  ];\n\n  fileMatcher: TProviderFileMatcher = {\n    language: 'json',\n    scheme: 'file',\n    pattern: '**/package.json',\n  };\n\n  caching: ICachingOptions;\n\n  http: IHttpOptions;\n\n  github: GitHubOptions;\n\n  get dependencyProperties(): Array<string> {\n    return this.config.get(NpmContributions.DependencyProperties);\n  }\n\n  get distTagFilter(): Array<string> {\n    return this.config.get(NpmContributions.DistTagFilter);\n  }\n\n}","import { AwilixContainer, asFunction } from 'awilix';\n\nimport { CachingOptions, HttpOptions } from 'core.clients';\nimport { ISuggestionProvider } from 'core.suggestions';\n\nimport { createJsonClient } from 'infrastructure.clients';\n\nimport { NpmContributions } from './definitions/eNpmContributions';\nimport { INpmContainerMap } from './definitions/iNpmContainerMap';\nimport { GitHubOptions } from './options/githubOptions';\nimport { NpmPackageClient } from './clients/npmPackageClient';\nimport { PacoteClient } from './clients/pacoteClient';\nimport { GitHubClient } from './clients/githubClient';\nimport { NpmSuggestionProvider } from './npmSuggestionProvider'\nimport { NpmConfig } from './npmConfig';\n\nexport function configureContainer(\n  container: AwilixContainer<INpmContainerMap>\n): ISuggestionProvider {\n\n  const containerMap = {\n\n    // options\n    npmCachingOpts: asFunction(\n      rootConfig => new CachingOptions(\n        rootConfig,\n        NpmContributions.Caching,\n        'caching'\n      )\n    ).singleton(),\n\n    npmHttpOpts: asFunction(\n      rootConfig => new HttpOptions(\n        rootConfig,\n        NpmContributions.Http,\n        'http'\n      )\n    ).singleton(),\n\n    npmGitHubOpts: asFunction(\n      rootConfig => new GitHubOptions(\n        rootConfig,\n        NpmContributions.Github,\n        'github'\n      )\n    ).singleton(),\n\n    // config\n    npmConfig: asFunction(\n      (rootConfig, npmCachingOpts, npmHttpOpts, npmGitHubOpts) =>\n        new NpmConfig(rootConfig, npmCachingOpts, npmHttpOpts, npmGitHubOpts)\n    ).singleton(),\n\n    // clients\n    githubJsonClient: asFunction(\n      (npmCachingOpts, npmHttpOpts, logger) =>\n        createJsonClient(\n          {\n            caching: npmCachingOpts,\n            http: npmHttpOpts\n          },\n          logger.child({ namespace: 'npm request' })\n        )\n    ).singleton(),\n\n    githubClient: asFunction(\n      (npmConfig, githubJsonClient, logger) =>\n        new GitHubClient(\n          npmConfig,\n          githubJsonClient,\n          logger.child({ namespace: 'npm github' })\n        )\n    ).singleton(),\n\n    pacoteClient: asFunction(\n      (npmConfig, logger) =>\n        new PacoteClient(\n          npmConfig,\n          logger.child({ namespace: 'npm pacote' })\n        )\n    ).singleton(),\n\n    npmClient: asFunction(\n      (npmConfig, githubClient, pacoteClient, logger) =>\n        new NpmPackageClient(\n          npmConfig,\n          pacoteClient,\n          githubClient,\n          logger.child({ namespace: 'npm client' })\n        )\n    ).singleton(),\n\n    // provider\n    npmProvider: asFunction(\n      (npmClient, logger) =>\n        new NpmSuggestionProvider(\n          npmClient,\n          logger.child({ namespace: 'npm provider' })\n        )\n    ).singleton(),\n\n  };\n\n  container.register(containerMap);\n\n  return container.cradle.npmProvider;\n}","import { ILogger } from 'core.logging';\nimport { ISuggestionProvider, TSuggestionReplaceFunction } from 'core.suggestions';\nimport {\n  extractPackageDependenciesFromJson,\n  RequestFactory,\n  IPackageDependency,\n  PackageResponse\n} from 'core.packages';\n\nimport { NpmPackageClient } from './clients/npmPackageClient';\nimport { npmReplaceVersion } from './npmUtils';\nimport { NpmConfig } from './npmConfig';\n\nexport class NpmSuggestionProvider implements ISuggestionProvider {\n\n  config: NpmConfig;\n\n  client: NpmPackageClient;\n\n  logger: ILogger;\n\n  suggestionReplaceFn: TSuggestionReplaceFunction;\n\n  constructor(client: NpmPackageClient, logger: ILogger) {\n    this.client = client;\n    this.config = client.config;\n    this.logger = logger;\n    this.suggestionReplaceFn = npmReplaceVersion;\n  }\n\n  parseDependencies(packageText: string): Array<IPackageDependency> {\n    const packageDependencies = extractPackageDependenciesFromJson(\n      packageText,\n      this.config.dependencyProperties\n    );\n\n    return packageDependencies;\n  }\n\n  async fetchSuggestions(\n    packagePath: string,\n    packageDependencies: Array<IPackageDependency>\n  ): Promise<Array<PackageResponse>> {\n\n    if (this.config.github.accessToken &&\n      this.config.github.accessToken.length > 0) {\n      // defrost github parameters\n      this.config.github.defrost();\n    }\n\n    const clientData = null;\n    return RequestFactory.executeDependencyRequests(\n      packagePath,\n      this.client,\n      clientData,\n      packageDependencies,\n    );\n  }\n\n}","import {\n  VersionHelpers,\n  PackageSourceTypes,\n  PackageResponse,\n  PackageVersionTypes,\n} from 'core.packages';\nimport { ClientResponseSource, ClientResponse } from 'core.clients';\n\nexport function npmReplaceVersion(packageInfo: PackageResponse, newVersion: string): string {\n  if (packageInfo.source === PackageSourceTypes.Github) {\n    return replaceGitVersion(packageInfo, newVersion);\n  }\n\n  if (packageInfo.type === PackageVersionTypes.Alias) {\n    return replaceAliasVersion(packageInfo, newVersion);\n  }\n\n  // fallback to default\n  return VersionHelpers.formatWithExistingLeading(\n    packageInfo.requested.version,\n    newVersion\n  );\n}\n\nfunction replaceGitVersion(packageInfo: PackageResponse, newVersion: string): string {\n  return packageInfo.requested.version.replace(\n    packageInfo.resolved.version,\n    newVersion\n  )\n}\n\nfunction replaceAliasVersion(packageInfo: PackageResponse, newVersion: string): string {\n  // preserve the leading symbol from the existing version\n  const preservedLeadingVersion = VersionHelpers.formatWithExistingLeading(\n    packageInfo.requested.version,\n    newVersion\n  );\n\n  return `npm:${packageInfo.resolved.name}@${preservedLeadingVersion}`;\n}\n\nexport function convertNpmErrorToResponse(error, source: ClientResponseSource): ClientResponse<number, string> {\n  return {\n    source,\n    status: error.code,\n    data: error.message,\n  }\n}","import { Nullable } from 'core.generics';\nimport { IFrozenOptions, OptionsWithFallback } from 'core.configuration';\nimport { GitHubContributions } from '../definitions/eGitHubContributions';\n\nexport class GitHubOptions extends OptionsWithFallback {\n\n  constructor(\n    config: IFrozenOptions,\n    section: string,\n    fallbackSection: Nullable<string> = null\n  ) {\n    super(config, section, fallbackSection);\n  }\n\n  get accessToken(): string {\n    return this.getOrDefault<string>(\n      GitHubContributions.AccessToken,\n      null\n    );\n  }\n\n}","export const githubFixtures = {\n  tags: [\n    {\n      \"name\": \"v2.6.0-rc.1\"\n    },\n    {\n      \"name\": \"v2.5.0\"\n    },\n    {\n      \"name\": \"v2.5.0-preview.1\"\n    },\n    {\n      \"name\": \"v2.4.3\"\n    },\n    {\n      \"name\": \"v2.4.2\"\n    },\n    {\n      \"name\": \"v2.4.1\"\n    },\n    {\n      \"name\": \"v2.4.0\"\n    },\n    {\n      \"name\": \"v2.3.0\"\n    },\n    {\n      \"name\": \"v2.2.0\"\n    },\n    {\n      \"name\": \"v2.1.2\"\n    },\n    {\n      \"name\": \"v2.1.1\"\n    },\n    {\n      \"name\": \"v2.1.0\"\n    },\n    {\n      \"name\": \"v2.0.0\"\n    },\n    {\n      \"name\": \"v1.5.0\"\n    },\n    {\n      \"name\": \"v1.4.0\"\n    },\n    {\n      \"name\": \"v1.3.2\"\n    },\n    {\n      \"name\": \"v1.3.1\"\n    },\n    {\n      \"name\": \"v1.3.0\"\n    },\n    {\n      \"name\": \"v1.2.0\"\n    },\n    {\n      \"name\": \"v1.1.0\"\n    },\n    {\n      \"name\": \"v1.0.0\"\n    }\n  ],\n  commits: [\n    {\n      sha: \"f099459fd01be79187275ddf47d77a2797188c6a\"\n    },\n\n    {\n      sha: \"166c3497967489e61a1d532b79b8fe750fd5ba56\"\n    },\n    {\n      sha: \"37250168e2ecaab477c962071d2024e89ebb1844\"\n    },\n    {\n      sha: \"6a3fb5a4dec4588b746ac3bf14d0704498e7b948\"\n    },\n    {\n      sha: \"df4d9435a320c0345ff2930ec71a007f3a320211\"\n    },\n  ]\n}","import { LoggerStub } from 'test.core.logging';\n\nimport { SuggestionFlags } from 'core.suggestions';\n\nimport {\n  NpmConfig,\n  GitHubOptions,\n  GitHubClient\n} from 'infrastructure.providers.npm'\n\nimport {\n  ClientResponseSource,\n  JsonHttpClient,\n  IJsonHttpClient\n} from 'core.clients';\n\nimport { githubFixtures } from './fetchGitHub.fixtures'\n\nconst { mock, instance, when, anything, capture } = require('ts-mockito');\nconst assert = require('assert')\nconst npa = require('npm-package-arg');\n\nlet githubOptsMock: GitHubOptions;\nlet configMock: NpmConfig;\nlet loggerMock: LoggerStub;\nlet jsonClientMock: IJsonHttpClient;\n\nexport default {\n\n  beforeEach: () => {\n    githubOptsMock = mock(GitHubOptions);\n    configMock = mock(NpmConfig);\n    jsonClientMock = mock(JsonHttpClient);\n    loggerMock = mock(LoggerStub);\n\n    when(configMock.github).thenReturn(instance(githubOptsMock))\n  },\n\n  'fetchTags': {\n\n    'returns a #semver:x.x.x. package': async () => {\n      const testRequest: any = {\n        providerName: 'testnpmprovider',\n        package: {\n          path: 'packagepath',\n          name: 'core.js',\n          version: 'github:octokit/core.js#semver:^2',\n        }\n      };\n\n      const testSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(jsonClientMock.request(anything(), anything(), anything(), anything()))\n        .thenResolve({\n          status: 200,\n          data: githubFixtures.tags,\n          source: ClientResponseSource.remote\n        })\n\n      // setup initial call\n      const cut = new GitHubClient(\n        instance(configMock),\n        instance(jsonClientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchGithub(testRequest, <any>testSpec)\n        .then((actual) => {\n          assert.equal(actual.source, 'github')\n          assert.equal(actual.type, 'range')\n          assert.equal(actual.resolved.name, testRequest.package.name)\n          assert.deepEqual(actual.requested, testRequest.package)\n\n          assert.deepEqual(\n            actual.suggestions,\n            [{\n              name: 'satisfies',\n              version: 'latest',\n              flags: SuggestionFlags.status\n            }, {\n              name: 'latest',\n              version: 'v2.5.0',\n              flags: SuggestionFlags.release\n            }, {\n              name: 'rc',\n              version: 'v2.6.0-rc.1',\n              flags: SuggestionFlags.prerelease\n            }, {\n              name: 'preview',\n              version: 'v2.5.0-preview.1',\n              flags: SuggestionFlags.prerelease\n            }]\n          )\n        })\n    },\n\n    'returns a #x.x.x': async () => {\n\n      const testRequest: any = {\n        providerName: 'testnpmprovider',\n        package: {\n          path: 'packagepath',\n          name: 'core.js',\n          version: 'github:octokit/core.js#v2.0.0',\n        }\n      };\n\n      const testSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(jsonClientMock.request(anything(), anything(), anything(), anything()))\n        .thenResolve({\n          status: 200,\n          data: githubFixtures.tags,\n          source: ClientResponseSource.remote\n        })\n\n      // setup initial call\n      const cut = new GitHubClient(\n        instance(configMock),\n        instance(jsonClientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchGithub(testRequest, testSpec)\n        .then((actual) => {\n          assert.equal(actual.source, 'github')\n          assert.equal(actual.type, 'range')\n          assert.equal(actual.providerName, testRequest.providerName)\n          assert.equal(actual.resolved.name, testRequest.package.name)\n          assert.deepEqual(actual.requested, testRequest.package)\n\n          assert.deepEqual(\n            actual.suggestions,\n            [{\n              name: 'fixed',\n              version: 'v2.0.0',\n              flags: SuggestionFlags.status\n            }, {\n              name: 'latest',\n              version: 'v2.5.0',\n              flags: SuggestionFlags.release\n            }, {\n              name: 'rc',\n              version: 'v2.6.0-rc.1',\n              flags: SuggestionFlags.prerelease\n            }, {\n              name: 'preview',\n              version: 'v2.5.0-preview.1',\n              flags: SuggestionFlags.prerelease\n            }]\n          )\n        })\n    },\n\n    'returns a #sha commit': async () => {\n\n      const testRequest: any = {\n        providerName: 'testnpmprovider',\n        package: {\n          path: 'packagepath',\n          name: 'core.js',\n          version: 'github:octokit/core.js#166c3497',\n        }\n      };\n\n      const testSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(jsonClientMock.request(anything(), anything(), anything(), anything()))\n        .thenResolve({\n          status: 200,\n          data: githubFixtures.commits,\n          source: ClientResponseSource.remote\n        })\n\n      const cut = new GitHubClient(\n        instance(configMock),\n        instance(jsonClientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchGithub(testRequest, testSpec)\n        .then((actual) => {\n          assert.equal(actual.source, 'github')\n          assert.equal(actual.type, 'committish')\n          assert.equal(actual.providerName, testRequest.providerName)\n          assert.equal(actual.resolved.name, testRequest.package.name)\n          assert.deepEqual(actual.requested, testRequest.package)\n\n          assert.deepEqual(\n            actual.suggestions,\n            [{\n              name: 'fixed',\n              version: '166c3497',\n              flags: SuggestionFlags.status\n            }, {\n              name: 'latest',\n              version: 'df4d9435',\n              flags: SuggestionFlags.release\n            }]\n          )\n        })\n    },\n\n    'sets auth token in headers': async () => {\n\n      const testRequest: any = {\n        providerName: 'testnpmprovider',\n        package: {\n          path: 'packagepath',\n          name: 'core.js',\n          version: 'github:octokit/core.js#166c3497',\n        }\n      };\n\n      const testSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      const testToken = 'testToken';\n\n      when(jsonClientMock.request(anything(), anything(), anything(), anything()))\n        .thenResolve({\n          status: 200,\n          data: githubFixtures.commits,\n          source: ClientResponseSource.remote\n        })\n\n      when(githubOptsMock.accessToken).thenReturn(testToken);\n\n      const cut = new GitHubClient(\n        instance(configMock),\n        instance(jsonClientMock),\n        instance(loggerMock)\n      );\n\n      await cut.fetchGithub(testRequest, testSpec)\n\n      const [, , , actualHeaders] = capture(jsonClientMock.request).first();\n      assert.equal(actualHeaders['authorization'], 'token ' + testToken);\n    }\n\n  }\n\n}","import { LoggerStub } from 'test.core.logging';\n\nimport {\n  NpmConfig,\n  NpmPackageClient,\n  GitHubClient\n} from 'infrastructure.providers.npm'\n\nimport { PacoteClient } from 'infrastructure.providers.npm';\n\nconst { mock, instance } = require('ts-mockito');\n\nconst assert = require('assert')\n\nlet configMock: NpmConfig;\nlet pacoteMock: PacoteClient;\nlet githubClientMock: GitHubClient;\nlet loggerMock: LoggerStub;\n\nexport default {\n\n  beforeEach: () => {\n    configMock = mock(NpmConfig);\n    pacoteMock = mock(PacoteClient);\n    githubClientMock = mock(GitHubClient);\n    loggerMock = mock(LoggerStub);\n  },\n\n  'fetchPackage': {\n\n    'returns a file:// directory package': async () => {\n      const expectedSource = 'directory';\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        source: 'npmtest',\n        package: {\n          path: 'filepackagepath',\n          name: 'filepackage',\n          version: 'file://some/path/out/there',\n        }\n      }\n\n      const cut = new NpmPackageClient(\n        instance(configMock),\n        instance(pacoteMock),\n        instance(githubClientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchPackage(testRequest)\n        .then(actual => {\n          assert.equal(actual.source, 'directory', `expected to see ${expectedSource}`)\n          assert.deepEqual(actual.requested, testRequest.package)\n        })\n    }\n\n  }\n\n}","import { LoggerStub } from 'test.core.logging';\nimport { ClientResponseSource } from 'core.clients';\nimport { SuggestionFlags } from 'core.suggestions';\n\nimport {\n  NpmPackageClient,\n  NpmConfig,\n  GitHubClient,\n  PacoteClient\n} from 'infrastructure.providers.npm';\n\nconst { mock, instance, when, anything } = require('ts-mockito');\n\nconst assert = require('assert')\n\nlet configMock: NpmConfig;\nlet pacoteMock: PacoteClient;\nlet githubClientMock: GitHubClient;\nlet loggerMock: LoggerStub;\n\nexport default {\n\n  beforeEach: () => {\n    configMock = mock(NpmConfig);\n    pacoteMock = mock(PacoteClient);\n    githubClientMock = mock(GitHubClient);\n    loggerMock = mock(LoggerStub);\n  },\n\n  'fetchGitPackage': {\n\n    'returns fixed package for git:// requests': async () => {\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        package: {\n          path: 'packagepath',\n          name: 'core.js',\n          version: 'git+https://git@github.com/testuser/test.git',\n        }\n      };\n\n      when(pacoteMock.fetchPackage(anything(), anything()))\n        .thenResolve({\n          status: 200,\n          data: '',\n          source: ClientResponseSource.remote\n        })\n\n      // setup initial call\n      const cut = new NpmPackageClient(\n        instance(configMock),\n        instance(pacoteMock),\n        instance(githubClientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchPackage(testRequest)\n        .then((actual) => {\n          assert.equal(actual.source, 'git')\n          assert.equal(actual.resolved, null)\n          assert.deepEqual(actual.requested, testRequest.package)\n\n          assert.deepEqual(\n            actual.suggestions,\n            [\n              {\n                name: 'fixed',\n                version: 'git repository',\n                flags: SuggestionFlags.status\n              }\n            ]\n          )\n\n        })\n\n    },\n\n    'returns unsupported suggestion when not github': async () => {\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        package: {\n          path: 'packagepath',\n          name: 'core.js',\n          version: 'git+https://git@not-gihub.com/testuser/test.git',\n        }\n      };\n\n      // setup initial call\n      const cut = new NpmPackageClient(\n        instance(configMock),\n        instance(pacoteMock),\n        instance(githubClientMock),\n        instance(loggerMock)\n      );\n\n      return cut.fetchPackage(testRequest)\n        .then((actual) => {\n          assert.deepEqual(\n            actual.suggestions,\n            [\n              {\n                name: 'not supported',\n                version: '',\n                flags: SuggestionFlags.status\n              }\n            ]\n          )\n        })\n\n    }\n\n  }\n\n\n\n}","import { LoggerStub } from 'test.core.logging';\n\nimport { ClientResponseSource } from 'core.clients';\nimport { SuggestionFlags } from 'core.suggestions';\n\nimport {\n  NpmConfig,\n  NpmPackageClient,\n  GitHubClient,\n  PacoteClient\n} from 'infrastructure.providers.npm'\n\nconst { mock, instance, when, anything } = require('ts-mockito');\n\nconst assert = require('assert')\n\nlet configMock: NpmConfig;\nlet pacoteMock: PacoteClient;\nlet githubClientMock: GitHubClient;\nlet loggerMock: LoggerStub;\n\nexport default {\n\n  beforeEach: () => {\n    configMock = mock(NpmConfig);\n    pacoteMock = mock(PacoteClient);\n    githubClientMock = mock(GitHubClient);\n    loggerMock = mock(LoggerStub);\n  },\n\n  'fetchPackage': {\n\n    'returns 401, 404 and ECONNREFUSED suggestion statuses': async () => {\n      const testRequest: any = {\n        providerName: 'testnpmprovider',\n        package: {\n          path: 'packagepath',\n          name: 'private-reg',\n          version: '1.2.3',\n        }\n      };\n\n      const testStates = [\n        { status: 401, suggestion: { name: '401 not authorized' } },\n        { status: 404, suggestion: { name: 'package not found' } },\n        { status: 'ECONNREFUSED', suggestion: { name: 'connection refused' } },\n      ]\n\n      // setup initial call\n      const cut = new NpmPackageClient(\n        instance(configMock),\n        instance(pacoteMock),\n        instance(githubClientMock),\n        instance(loggerMock)\n      );\n\n      const promised = []\n\n      testStates.forEach(testState => {\n\n        when(pacoteMock.fetchPackage(anything(), anything()))\n          .thenReject({\n            status: testState.status,\n            data: \"response\",\n            source: ClientResponseSource.remote\n          })\n\n        promised.push(\n          cut.fetchPackage(testRequest)\n            .then((actual) => {\n              assert.equal(actual.source, 'registry')\n              assert.deepEqual(actual.requested, testRequest.package)\n\n              assert.deepEqual(\n                actual.suggestions,\n                [{\n                  name: testState.suggestion.name,\n                  version: '',\n                  flags: SuggestionFlags.status\n                }]\n              )\n\n            })\n        )\n\n      })\n\n      return await Promise.all(promised)\n    }\n\n  }\n\n}","import * as NpmUtils from 'infrastructure.providers.npm'\nimport { PackageResponse, PackageSourceTypes } from 'core.packages'\n\nconst assert = require('assert')\n\nexport default {\n\n  \"replaceGitVersion\": {\n\n    \"handles #tag|commit|semver:\": () => {\n      const packageInfo: PackageResponse = {\n        providerName: 'testreplace',\n        source: PackageSourceTypes.Github,\n        nameRange: null,\n        versionRange: null,\n        order: 0,\n        requested: {\n          path: 'packagepath',\n          name: 'packagename',\n          version: 'github:someRepo/someProject#semver:^2',\n        },\n        resolved: {\n          name: 'packagename',\n          version: '^2'\n        }\n      }\n\n      const expected = 'github:someRepo/someProject#semver:4.2.1'\n\n      // NpmVersionUtils\n      const actual = NpmUtils.npmReplaceVersion(\n        packageInfo,\n        '4.2.1'\n      )\n\n      assert.equal(actual, expected)\n    },\n\n  }\n\n}","import { sourcePath } from 'infrastructure.testing';\nimport { LoggerStub } from 'test.core.logging';\n\nimport { ILogger } from 'core.logging';\n\nimport { NpmConfig, IPacote, PacoteClient } from 'infrastructure.providers.npm'\n\nimport Fixtures from './pacoteClient.fixtures'\nimport { PacoteStub } from '../stubs/pacoteStub';\nimport { CachingOptions, ICachingOptions } from 'core.clients';\n\nconst { mock, instance, when, anything, capture } = require('ts-mockito');\n\nconst assert = require('assert')\nconst path = require('path')\nconst npa = require('npm-package-arg');\nconst fs = require('fs');\n\nlet cachingOptsMock: ICachingOptions;\nlet loggerMock: ILogger;\nlet configMock: NpmConfig;\nlet pacoteMock: IPacote;\n\nexport default {\n\n  beforeEach: () => {\n    cachingOptsMock = mock(CachingOptions)\n    configMock = mock(NpmConfig)\n    loggerMock = mock(LoggerStub)\n    pacoteMock = mock(PacoteStub)\n\n    when(configMock.caching).thenReturn(instance(cachingOptsMock))\n  },\n\n  'fetchPackage': {\n\n    'uses npmrc registry': async () => {\n      const packagePath = path.join(\n        sourcePath,\n        'infrastructure.providers/npm/test/fixtures/config'\n      );\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        source: 'npmtest',\n        package: {\n          path: packagePath,\n          name: 'aliased',\n          version: 'npm:pacote@11.1.9',\n        },\n      }\n\n      // write the npmrc file\n      const npmrcPath = packagePath + '/.npmrc';\n      fs.writeFileSync(npmrcPath, Fixtures[\".npmrc\"])\n      assert.ok(require('fs').existsSync(testRequest.package.path), 'test .npmrc doesnt exist?')\n\n      when(pacoteMock.packument(anything(), anything()))\n        .thenResolve(Fixtures.packumentGit)\n\n      const cut = new PacoteClient(\n        instance(configMock),\n        instance(loggerMock)\n      )\n\n      cut.pacote = instance(pacoteMock)\n\n      const npaSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      )\n\n      return cut.fetchPackage(testRequest, npaSpec)\n        .then(_ => {\n\n          const [, actualOpts] = capture(pacoteMock.packument).first()\n          assert.equal(actualOpts.cwd, testRequest.package.path)\n          assert.equal(\n            actualOpts['//registry.npmjs.example/:_authToken'],\n            '12345678'\n          )\n\n          // delete the npmrc file\n          fs.unlinkSync(npmrcPath)\n        })\n    },\n\n  }\n\n}","export default {\n  \"packumentGit\": {\n    \"name\": \"npm-package-arg\",\n    \"dist-tags\": {\n      \"latest\": \"8.0.1\"\n    },\n    \"versions\": {\n      \"8.0.1\": {}\n    }\n  },\n  \"packumentGitSemver\": {\n    \"name\": \"npm\",\n    \"dist-tags\": {\n      \"latest\": \"6.5.0\"\n    },\n    \"versions\": {\n      \"6.5.0\": {}\n    }\n  },\n  \"packumentGitCommittish\": {\n    \"name\": \"npm\",\n    \"dist-tags\": {\n      \"latest\": \"6.14.5\"\n    },\n    \"versions\": {\n      \"6.14.5\": {}\n    }\n  },\n  \"packumentRegistryVersion\": {\n    \"name\": \"npm-package-arg\",\n    \"dist-tags\": {\n      \"latest\": \"8.0.1\"\n    },\n    \"versions\": {\n      \"6.0.0\": {},\n      \"6.1.0\": {},\n      \"6.1.1\": {},\n      \"7.0.0\": {},\n      \"8.0.0\": {},\n      \"8.0.1\": {}\n    }\n  },\n  \"packumentRegistryRange\": {\n    \"name\": \"pacote\",\n    \"dist-tags\": {\n      \"latest\": \"11.1.9\",\n      \"v9-legacy\": \"9.5.12\"\n    },\n    \"versions\": {\n      \"10.0.0\": {},\n      \"10.1.0\": {},\n      \"10.1.1\": {},\n      \"10.1.2\": {},\n      \"10.1.3\": {},\n      \"10.1.4\": {},\n      \"10.1.5\": {},\n      \"10.1.6\": {},\n      \"10.2.0\": {},\n      \"9.5.10\": {},\n      \"10.2.1\": {},\n      \"9.5.11\": {},\n      \"10.3.0\": {},\n      \"9.5.12\": {},\n      \"10.3.2\": {},\n      \"11.0.0\": {},\n      \"11.0.1\": {},\n      \"11.1.0\": {},\n      \"11.1.1\": {},\n      \"11.1.2\": {},\n      \"11.1.3\": {},\n      \"11.1.4\": {},\n      \"11.1.5\": {},\n      \"11.1.6\": {},\n      \"11.1.7\": {},\n      \"11.1.8\": {},\n      \"11.1.9\": {}\n    }\n  },\n  \"packumentRegistryAlias\": {\n    \"name\": \"pacote\",\n    \"dist-tags\": {\n      \"latest\": \"11.1.9\",\n      \"v9-legacy\": \"9.5.12\"\n    },\n    \"versions\": {\n      \"11.1.9\": {}\n    }\n  },\n  \".npmrc\": \"//registry.npmjs.example/:_authToken=12345678\",\n  \"packumentCappedToLatestTaggedVersion\": {\n    \"name\": \"npm-package-arg\",\n    \"dist-tags\": {\n      \"latest\": \"7.0.0\"\n    },\n    \"versions\": {\n      \"6.0.0\": {},\n      \"6.1.0\": {},\n      \"6.1.1\": {},\n      \"7.0.0\": {},\n      \"8.0.0\": {},\n      \"8.0.1\": {}\n    }\n  },\n}","import { LoggerStub } from 'test.core.logging';\n\nimport { ILogger } from 'core.logging';\nimport { SuggestionFlags } from 'core.suggestions';\n\nimport {\n  ICachingOptions,\n  CachingOptions,\n  IHttpOptions,\n  HttpOptions\n} from 'core.clients';\n\nimport {\n  NpmConfig,\n  PacoteClient,\n  GitHubOptions,\n  IPacote\n} from 'infrastructure.providers.npm'\n\nimport { VersionLensExtension } from 'presentation.extension';\n\nimport Fixtures from './pacoteClient.fixtures'\nimport { PacoteStub } from '../stubs/pacoteStub';\n\nconst { mock, instance, when, anything, capture } = require('ts-mockito');\n\nconst assert = require('assert')\nconst npa = require('npm-package-arg');\n\nlet cachingOptsMock: ICachingOptions;\nlet githubOptsMock: GitHubOptions;\nlet loggerMock: ILogger;\nlet configMock: NpmConfig;\nlet pacoteMock: IPacote;\n\nexport default {\n\n  beforeEach: () => {\n    githubOptsMock = mock(GitHubOptions);\n    cachingOptsMock = mock(CachingOptions)\n    configMock = mock(NpmConfig)\n    loggerMock = mock(LoggerStub)\n    pacoteMock = mock(PacoteStub)\n\n    when(configMock.caching).thenReturn(instance(cachingOptsMock))\n    when(configMock.github).thenReturn(instance(githubOptsMock))\n  },\n\n  'fetchPackage': {\n\n    'returns a registry range package': async () => {\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        package: {\n          path: 'packagepath',\n          name: 'pacote',\n          version: '10.1.*',\n        }\n      }\n\n      const npaSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(pacoteMock.packument(anything(), anything()))\n        .thenResolve(Fixtures.packumentRegistryRange)\n\n      const cut = new PacoteClient(\n        instance(configMock),\n        instance(loggerMock)\n      )\n\n      cut.pacote = instance(pacoteMock)\n\n      return cut.fetchPackage(testRequest, npaSpec)\n        .then((actual) => {\n          assert.equal(actual.source, 'registry')\n          assert.equal(actual.type, 'range')\n          assert.equal(actual.resolved.name, testRequest.package.name)\n          assert.deepEqual(actual.requested, testRequest.package)\n        })\n    },\n\n    'returns a registry version package': async () => {\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        package: {\n          path: 'packagepath',\n          name: 'npm-package-arg',\n          version: '8.0.1',\n        }\n      }\n\n      const npaSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(pacoteMock.packument(anything(), anything()))\n        .thenResolve(Fixtures.packumentRegistryVersion)\n\n      const cut = new PacoteClient(\n        instance(configMock),\n        instance(loggerMock)\n      )\n\n      cut.pacote = instance(pacoteMock)\n\n      return cut.fetchPackage(testRequest, npaSpec)\n        .then((actual) => {\n          assert.equal(actual.source, 'registry')\n          assert.equal(actual.type, 'version')\n          assert.equal(actual.resolved.name, testRequest.package.name)\n        })\n    },\n\n    'returns capped latest versions': async () => {\n\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        package: {\n          path: 'packagepath',\n          name: 'npm-package-arg',\n          version: '7.0.0',\n        }\n      }\n\n      const npaSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(pacoteMock.packument(anything(), anything()))\n        .thenResolve(Fixtures.packumentCappedToLatestTaggedVersion)\n\n      const cut = new PacoteClient(\n        instance(configMock),\n        instance(loggerMock)\n      )\n\n      cut.pacote = instance(pacoteMock)\n\n      return cut.fetchPackage(testRequest, npaSpec)\n        .then((actual) => {\n          assert.deepEqual(actual.suggestions, [{\n            name: 'latest',\n            version: '',\n            flags: SuggestionFlags.status\n          }])\n        })\n    },\n\n    'returns a registry alias package': async () => {\n      const testRequest: any = {\n        clientData: {\n          providerName: 'testnpmprovider',\n        },\n        package: {\n          path: 'packagepath',\n          name: 'aliased',\n          version: 'npm:pacote@11.1.9',\n        }\n      }\n\n      const npaSpec = npa.resolve(\n        testRequest.package.name,\n        testRequest.package.version,\n        testRequest.package.path\n      );\n\n      when(pacoteMock.packument(anything(), anything()))\n        .thenResolve(Fixtures.packumentRegistryAlias)\n\n      const cut = new PacoteClient(\n        instance(configMock),\n        instance(loggerMock)\n      )\n\n      cut.pacote = instance(pacoteMock)\n\n      return cut.fetchPackage(testRequest, npaSpec)\n        .then((actual) => {\n          assert.equal(actual.source, 'registry')\n          assert.equal(actual.type, 'alias')\n          assert.equal(actual.requested.name, testRequest.package.name)\n          assert.equal(actual.resolved.name, 'pacote')\n          assert.deepEqual(actual.requested, testRequest.package)\n        })\n    },\n\n  }\n\n}","import { IPacote } from \"infrastructure.providers.npm\";\n\nexport class PacoteStub implements IPacote {\n\n  packument(spec: any, opts: any): Promise<any> {\n    throw new Error(\"Not implemented\")\n  }\n\n}","export * from './src/utils'","const path = require('path');\n\n// expects test bundle to be at ./dist/[filename].js\nexport const projectPath = path.resolve(__dirname, '..');\n\nexport const sourcePath = path.resolve(projectPath, 'src');\n\nexport async function delay(delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      try {\n        resolve();\n      } catch (err) {\n        reject(err);\n      }\n    }, delay);\n  });\n}","import * as UnitTests from './unit.tests'\n\nconst tty = require('tty');\nconst Mocha = require(\"mocha\");\nrequire('mocha-ui-esm');\n\n// Linux: prevent a weird NPE when mocha on Linux requires the window size from the TTY\n// Since we are not running in a tty environment, we just implementt he method statically\nif (!tty.getWindowSize) tty.getWindowSize = function () { return [80, 75]; };\n\nconst runner = new Mocha({\n  ui: 'esm',\n  reporter: 'spec',\n  timeout: 60000,\n});\n\n// set up the global variables\nrunner.color(true);\nrunner.suite.emit('global-mocha-context', runner);\nrunner.suite.emit('support-only', runner.options);\nrunner.suite.emit('modules', UnitTests);\n\nrequire('source-map-support').install();\n\nexport function run(testRoot, onComplete) {\n\n  runner.run(function (failures) {\n    if (failures)\n      onComplete(null, failures);\n    else\n      onComplete(null, 0);\n  });\n\n}\n\nif (process.env.TEST && process.env.TEST === 'unit') {\n  runner.run()\n}\n","// core\nexport * from 'test.core.clients'\nexport * from 'test.core.configuration'\nexport * from 'test.core.packages'\nexport * from 'test.core.suggestions'\n\nexport * from 'test.infrastructure.clients'\nexport * from 'test.infrastructure.configuration'\n\nexport * from 'test.infrastructure.providers.dotnet'\nexport * from 'test.infrastructure.providers.npm'","module.exports = require(\"@npmcli/promise-spawn\");","module.exports = require(\"assert\");","module.exports = require(\"awilix\");","module.exports = require(\"fs\");","module.exports = require(\"jsonc-parser\");","module.exports = require(\"libnpmconfig\");","module.exports = require(\"minimatch\");","module.exports = require(\"mocha\");","module.exports = require(\"mocha-ui-esm\");","module.exports = require(\"npm-package-arg\");","module.exports = require(\"pacote\");","module.exports = require(\"path\");","module.exports = require(\"request-light\");","module.exports = require(\"semver\");","module.exports = require(\"source-map-support\");","module.exports = require(\"ts-mockito\");","module.exports = require(\"tty\");","module.exports = require(\"url\");","module.exports = require(\"xmldoc\");","module.exports = require(\"yaml\");"],"sourceRoot":""}